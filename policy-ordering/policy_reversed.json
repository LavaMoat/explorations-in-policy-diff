{
  "resources": {
    "@ampproject/remapping<@babel/core": {
      "globals": {
        "define": true
      },
      "packages": {
        "@jridgewell/gen-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/trace-mapping<@jridgewell/source-map<terser": true
      }
    },
    "@babel/code-frame": {
      "globals": {
        "console.warn": true,
        "process": true
      },
      "packages": {
        "@babel/highlight<@babel/code-frame": true,
        "picocolors<postcss": true
      }
    },
    "@babel/core": {
      "builtin": {
        "assert": true,
        "fs": true,
        "module": true,
        "path": true,
        "process": true,
        "url": true,
        "util": true,
        "v8": true
      },
      "globals": {
        "console.error": true,
        "console.log": true,
        "process.env.BABEL_ENV": true,
        "process.env.BABEL_SHOW_CONFIG_FOR": true,
        "process.env.NODE_ENV": true,
        "process.versions.node": true,
        "process.versions.pnp": true
      },
      "packages": {
        "@ampproject/remapping<@babel/core": true,
        "@babel/code-frame": true,
        "@babel/generator<@babel/core": true,
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-module-transforms<@babel/core": true,
        "@babel/helpers<@babel/core": true,
        "@babel/parser<@babel/core": true,
        "@babel/plugin-proposal-class-properties": true,
        "@babel/plugin-proposal-nullish-coalescing-operator": true,
        "@babel/plugin-proposal-object-rest-spread": true,
        "@babel/plugin-proposal-optional-chaining": true,
        "@babel/plugin-transform-logical-assignment-operators": true,
        "@babel/plugin-transform-runtime": true,
        "@babel/preset-env": true,
        "@babel/preset-react": true,
        "@babel/preset-typescript": true,
        "@babel/template<@babel/core": true,
        "@babel/traverse<depcheck": true,
        "@babel/types<@babel/core": true,
        "$root$": true,
        "convert-source-map<@babel/core": true,
        "debug<nock": true,
        "gensync<@babel/core": true,
        "json5<depcheck": true,
        "semver<@babel/core": true
      }
    },
    "@babel/eslint-parser": {
      "builtin": {
        "module": true,
        "path": true,
        "worker_threads": true
      },
      "globals": {
        "__dirname": true,
        "process.cwd": true,
        "process.versions": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/parser": true,
        "@babel/parser<@babel/core": true,
        "@babel/parser<depcheck": true,
        "@babel/parser<lavamoat-tofu<lavamoat": true,
        "@nicolo-ribaudo/eslint-scope-5-internals<@babel/eslint-parser": true,
        "eslint": true,
        "eslint-scope<@babel/eslint-parser": true,
        "eslint-visitor-keys<@babel/eslint-parser": true,
        "semver<@babel/eslint-parser": true
      }
    },
    "@babel/eslint-plugin": {
      "packages": {
        "eslint": true,
        "eslint-rule-composer<@babel/eslint-plugin": true
      }
    },
    "@babel/generator<@babel/core": {
      "globals": {
        "console.error": true,
        "console.warn": true
      },
      "packages": {
        "@babel/types<@babel/core": true,
        "@jridgewell/gen-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/trace-mapping<@jridgewell/source-map<terser": true,
        "jsesc<@babel/generator<@babel/core": true
      }
    },
    "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-builder-binary-assignment-operator-visitor<@babel/plugin-transform-exponentiation-operator<@babel/preset-env": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-compilation-targets<@babel/core": {
      "globals": {
        "console.warn": true,
        "process.versions.node": true
      },
      "packages": {
        "@babel/compat-data<@babel/preset-env": true,
        "@babel/helper-validator-option<@babel/preset-env": true,
        "browserslist<webpack": true,
        "lru-cache<@babel/helper-compilation-targets<@babel/core": true,
        "semver<@babel/helper-compilation-targets<@babel/core": true
      }
    },
    "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/helper-member-expression-to-functions<@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-optimise-call-expression<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-skip-transparent-expression-wrappers<@babel/plugin-transform-spread<@babel/preset-env": true,
        "@babel/helper-split-export-declaration<@babel/traverse<depcheck": true,
        "semver<@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true
      }
    },
    "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "semver<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true
      }
    },
    "@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": {
      "builtin": {
        "module": true,
        "path": true
      },
      "globals": {
        "console.log": true,
        "console.warn": true,
        "process.exitCode": "write",
        "process.versions.node": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "lodash.debounce<@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": true,
        "resolve<depcheck": true
      }
    },
    "@babel/helper-function-name<@babel/traverse<depcheck": {
      "packages": {
        "@babel/template<@babel/core": true,
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-hoist-variables<@babel/traverse<depcheck": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-member-expression-to-functions<@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-module-imports<@babel/helper-module-transforms<@babel/core": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-module-transforms<@babel/core": {
      "builtin": {
        "assert": true,
        "path.basename": true,
        "path.extname": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-module-imports<@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-simple-access<@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-split-export-declaration<@babel/traverse<depcheck": true,
        "@babel/helper-validator-identifier<@babel/highlight<lavamoat": true
      }
    },
    "@babel/helper-optimise-call-expression<@babel/plugin-transform-classes<@babel/preset-env": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-remap-async-to-generator<@babel/plugin-transform-async-to-generator<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-wrap-function<@babel/helper-remap-async-to-generator<@babel/plugin-transform-async-to-generator<@babel/preset-env": true
      }
    },
    "@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-member-expression-to-functions<@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-optimise-call-expression<@babel/plugin-transform-classes<@babel/preset-env": true
      }
    },
    "@babel/helper-simple-access<@babel/helper-module-transforms<@babel/core": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-skip-transparent-expression-wrappers<@babel/plugin-transform-spread<@babel/preset-env": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-split-export-declaration<@babel/traverse<depcheck": {
      "packages": {
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helper-wrap-function<@babel/helper-remap-async-to-generator<@babel/plugin-transform-async-to-generator<@babel/preset-env": {
      "packages": {
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/template<@babel/core": true,
        "@babel/types<@babel/core": true
      }
    },
    "@babel/helpers<@babel/core": {
      "packages": {
        "@babel/template<@babel/core": true,
        "@babel/traverse<depcheck": true,
        "@babel/types<@babel/core": true
      }
    },
    "@babel/highlight<@babel/code-frame": {
      "globals": {
        "process": true
      },
      "packages": {
        "@babel/helper-validator-identifier<@babel/highlight<lavamoat": true,
        "chalk<@babel/highlight<@babel/code-frame": true,
        "js-tokens<loose-envify": true,
        "picocolors<postcss": true
      }
    },
    "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-skip-transparent-expression-wrappers<@babel/plugin-transform-spread<@babel/preset-env": true,
        "@babel/plugin-transform-optional-chaining<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-async-generators<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-class-properties<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-class-static-block<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-dynamic-import<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-export-namespace-from<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-import-assertions<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-import-attributes<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-import-meta<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-json-strings<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-jsx<@babel/preset-typescript": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-logical-assignment-operators<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-nullish-coalescing-operator<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-numeric-separator<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-object-rest-spread<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-optional-catch-binding<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-optional-chaining<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-private-property-in-object<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-top-level-await<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-typescript<@babel/plugin-transform-typescript<@babel/preset-typescript": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-syntax-unicode-sets-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-arrow-functions<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-async-generator-functions<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-remap-async-to-generator<@babel/plugin-transform-async-to-generator<@babel/preset-env": true,
        "@babel/plugin-syntax-async-generators<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-async-to-generator<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-module-imports<@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-remap-async-to-generator<@babel/plugin-transform-async-to-generator<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-block-scoped-functions<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-block-scoping<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-class-properties<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-class-static-block<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-class-static-block<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-classes<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/helper-optimise-call-expression<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-split-export-declaration<@babel/traverse<depcheck": true,
        "globals<@babel/plugin-transform-classes<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-computed-properties<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/template<@babel/core": true
      }
    },
    "@babel/plugin-transform-destructuring<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-duplicate-keys<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-dynamic-import<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-dynamic-import<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-exponentiation-operator<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-builder-binary-assignment-operator-visitor<@babel/plugin-transform-exponentiation-operator<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-export-namespace-from<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-export-namespace-from<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-for-of<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-function-name<@babel/preset-env": {
      "packages": {
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-json-strings<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-json-strings<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-literals<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-logical-assignment-operators": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-logical-assignment-operators<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-member-expression-literals<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-modules-amd<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-modules-commonjs<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-simple-access<@babel/helper-module-transforms<@babel/core": true
      }
    },
    "@babel/plugin-transform-modules-systemjs<@babel/preset-env": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-hoist-variables<@babel/traverse<depcheck": true,
        "@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-validator-identifier<@babel/highlight<lavamoat": true
      }
    },
    "@babel/plugin-transform-modules-umd<@babel/preset-env": {
      "builtin": {
        "path.basename": true,
        "path.extname": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-named-capturing-groups-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-new-target<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-nullish-coalescing-operator<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-nullish-coalescing-operator<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-numeric-separator<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-numeric-separator<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-object-rest-spread<@babel/preset-env": {
      "packages": {
        "@babel/compat-data<@babel/preset-env": true,
        "@babel/core": true,
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-object-rest-spread<@babel/preset-env": true,
        "@babel/plugin-transform-parameters<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-object-super<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-replace-supers<@babel/plugin-transform-classes<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-optional-catch-binding<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-optional-catch-binding<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-optional-chaining<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-skip-transparent-expression-wrappers<@babel/plugin-transform-spread<@babel/preset-env": true,
        "@babel/plugin-syntax-optional-chaining<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-parameters<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-private-methods<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-private-property-in-object<@babel/preset-env": {
      "packages": {
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-private-property-in-object<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-property-literals<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-react-display-name<@babel/preset-react": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-react-jsx-development<@babel/preset-react": {
      "packages": {
        "@babel/plugin-transform-react-jsx<@babel/preset-react": true
      }
    },
    "@babel/plugin-transform-react-jsx<@babel/preset-react": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-module-imports<@babel/helper-module-transforms<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-jsx<@babel/preset-typescript": true
      }
    },
    "@babel/plugin-transform-react-pure-annotations<@babel/preset-react": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-regenerator<@babel/preset-env": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "regenerator-transform<@babel/plugin-transform-regenerator<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-reserved-words<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-shorthand-properties<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-spread<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-skip-transparent-expression-wrappers<@babel/plugin-transform-spread<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-sticky-regex<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-template-literals<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-typeof-symbol<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-typescript<@babel/preset-typescript": {
      "builtin": {
        "assert": true
      },
      "globals": {
        "console.warn": true
      },
      "packages": {
        "@babel/core": true,
        "@babel/helper-annotate-as-pure<@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/plugin-syntax-typescript<@babel/plugin-transform-typescript<@babel/preset-typescript": true
      }
    },
    "@babel/plugin-transform-unicode-escapes<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-unicode-property-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-unicode-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/plugin-transform-unicode-sets-regex<@babel/preset-env": {
      "packages": {
        "@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true
      }
    },
    "@babel/preset-env": {
      "globals": {
        "console.log": true,
        "console.warn": true,
        "process.cwd": true,
        "process.env.BABEL_ENV": true
      },
      "packages": {
        "@babel/compat-data<@babel/preset-env": true,
        "@babel/helper-compilation-targets<@babel/core": true,
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-validator-option<@babel/preset-env": true,
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression<@babel/preset-env": true,
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining<@babel/preset-env": true,
        "@babel/plugin-syntax-async-generators<@babel/preset-env": true,
        "@babel/plugin-syntax-class-properties<@babel/preset-env": true,
        "@babel/plugin-syntax-class-static-block<@babel/preset-env": true,
        "@babel/plugin-syntax-dynamic-import<@babel/preset-env": true,
        "@babel/plugin-syntax-export-namespace-from<@babel/preset-env": true,
        "@babel/plugin-syntax-import-assertions<@babel/preset-env": true,
        "@babel/plugin-syntax-import-attributes<@babel/preset-env": true,
        "@babel/plugin-syntax-import-meta<@babel/preset-env": true,
        "@babel/plugin-syntax-json-strings<@babel/preset-env": true,
        "@babel/plugin-syntax-logical-assignment-operators<@babel/preset-env": true,
        "@babel/plugin-syntax-nullish-coalescing-operator<@babel/preset-env": true,
        "@babel/plugin-syntax-numeric-separator<@babel/preset-env": true,
        "@babel/plugin-syntax-object-rest-spread<@babel/preset-env": true,
        "@babel/plugin-syntax-optional-catch-binding<@babel/preset-env": true,
        "@babel/plugin-syntax-optional-chaining<@babel/preset-env": true,
        "@babel/plugin-syntax-private-property-in-object<@babel/preset-env": true,
        "@babel/plugin-syntax-top-level-await<@babel/preset-env": true,
        "@babel/plugin-syntax-unicode-sets-regex<@babel/preset-env": true,
        "@babel/plugin-transform-arrow-functions<@babel/preset-env": true,
        "@babel/plugin-transform-async-generator-functions<@babel/preset-env": true,
        "@babel/plugin-transform-async-to-generator<@babel/preset-env": true,
        "@babel/plugin-transform-block-scoped-functions<@babel/preset-env": true,
        "@babel/plugin-transform-block-scoping<@babel/preset-env": true,
        "@babel/plugin-transform-class-properties<@babel/preset-env": true,
        "@babel/plugin-transform-class-static-block<@babel/preset-env": true,
        "@babel/plugin-transform-classes<@babel/preset-env": true,
        "@babel/plugin-transform-computed-properties<@babel/preset-env": true,
        "@babel/plugin-transform-destructuring<@babel/preset-env": true,
        "@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "@babel/plugin-transform-duplicate-keys<@babel/preset-env": true,
        "@babel/plugin-transform-dynamic-import<@babel/preset-env": true,
        "@babel/plugin-transform-exponentiation-operator<@babel/preset-env": true,
        "@babel/plugin-transform-export-namespace-from<@babel/preset-env": true,
        "@babel/plugin-transform-for-of<@babel/preset-env": true,
        "@babel/plugin-transform-function-name<@babel/preset-env": true,
        "@babel/plugin-transform-json-strings<@babel/preset-env": true,
        "@babel/plugin-transform-literals<@babel/preset-env": true,
        "@babel/plugin-transform-logical-assignment-operators": true,
        "@babel/plugin-transform-member-expression-literals<@babel/preset-env": true,
        "@babel/plugin-transform-modules-amd<@babel/preset-env": true,
        "@babel/plugin-transform-modules-commonjs<@babel/preset-env": true,
        "@babel/plugin-transform-modules-systemjs<@babel/preset-env": true,
        "@babel/plugin-transform-modules-umd<@babel/preset-env": true,
        "@babel/plugin-transform-named-capturing-groups-regex<@babel/preset-env": true,
        "@babel/plugin-transform-new-target<@babel/preset-env": true,
        "@babel/plugin-transform-nullish-coalescing-operator<@babel/preset-env": true,
        "@babel/plugin-transform-numeric-separator<@babel/preset-env": true,
        "@babel/plugin-transform-object-rest-spread<@babel/preset-env": true,
        "@babel/plugin-transform-object-super<@babel/preset-env": true,
        "@babel/plugin-transform-optional-catch-binding<@babel/preset-env": true,
        "@babel/plugin-transform-optional-chaining<@babel/preset-env": true,
        "@babel/plugin-transform-parameters<@babel/preset-env": true,
        "@babel/plugin-transform-private-methods<@babel/preset-env": true,
        "@babel/plugin-transform-private-property-in-object<@babel/preset-env": true,
        "@babel/plugin-transform-property-literals<@babel/preset-env": true,
        "@babel/plugin-transform-regenerator<@babel/preset-env": true,
        "@babel/plugin-transform-reserved-words<@babel/preset-env": true,
        "@babel/plugin-transform-shorthand-properties<@babel/preset-env": true,
        "@babel/plugin-transform-spread<@babel/preset-env": true,
        "@babel/plugin-transform-sticky-regex<@babel/preset-env": true,
        "@babel/plugin-transform-template-literals<@babel/preset-env": true,
        "@babel/plugin-transform-typeof-symbol<@babel/preset-env": true,
        "@babel/plugin-transform-unicode-escapes<@babel/preset-env": true,
        "@babel/plugin-transform-unicode-property-regex<@babel/preset-env": true,
        "@babel/plugin-transform-unicode-regex<@babel/preset-env": true,
        "@babel/plugin-transform-unicode-sets-regex<@babel/preset-env": true,
        "@babel/preset-modules<@babel/preset-env": true,
        "@babel/types<@babel/core": true,
        "babel-plugin-polyfill-corejs2<@babel/preset-env": true,
        "babel-plugin-polyfill-corejs3<@babel/preset-env": true,
        "babel-plugin-polyfill-regenerator<@babel/preset-env": true,
        "core-js-compat<@babel/preset-env": true,
        "semver<@babel/preset-env": true
      }
    },
    "@babel/preset-react": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-validator-option<@babel/preset-env": true,
        "@babel/plugin-transform-react-display-name<@babel/preset-react": true,
        "@babel/plugin-transform-react-jsx-development<@babel/preset-react": true,
        "@babel/plugin-transform-react-jsx<@babel/preset-react": true,
        "@babel/plugin-transform-react-pure-annotations<@babel/preset-react": true
      }
    },
    "@babel/preset-typescript": {
      "packages": {
        "@babel/helper-plugin-utils<@babel/preset-env": true,
        "@babel/helper-validator-option<@babel/preset-env": true,
        "@babel/plugin-syntax-jsx<@babel/preset-typescript": true,
        "@babel/plugin-transform-modules-commonjs<@babel/preset-env": true,
        "@babel/plugin-transform-typescript<@babel/preset-typescript": true
      }
    },
    "@babel/regjsgen<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "globals": {
        "define": true
      }
    },
    "@babel/template<@babel/core": {
      "packages": {
        "@babel/code-frame": true,
        "@babel/parser<@babel/core": true,
        "@babel/types<@babel/core": true
      }
    },
    "@babel/traverse<depcheck": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "@babel/code-frame": true,
        "@babel/generator<@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/helper-hoist-variables<@babel/traverse<depcheck": true,
        "@babel/helper-split-export-declaration<@babel/traverse<depcheck": true,
        "@babel/parser<@babel/core": true,
        "@babel/types<@babel/core": true,
        "b@babel/types<babel/preset-env": true,
        "debug<nock": true,
        "globals<@babel/traverse<depcheck": true
      }
    },
    "@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "@babel/code-frame": true,
        "@babel/generator<@babel/core": true,
        "@babel/helper-environment-visitor<@babel/traverse<depcheck": true,
        "@babel/helper-function-name<@babel/traverse<depcheck": true,
        "@babel/helper-hoist-variables<@babel/traverse<depcheck": true,
        "@babel/helper-split-export-declaration<@babel/traverse<depcheck": true,
        "@babel/parser<@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": true,
        "@babel/types<@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": true,
        "debug<nock": true,
        "globals<@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": true
      }
    },
    "@babel/types<@babel/core": {
      "globals": {
        "console.warn": true,
        "process.env.BABEL_TYPES_8_BREAKING": true
      },
      "packages": {
        "@babel/helper-string-parser<@babel/types<@babel/core": true,
        "@babel/helper-validator-identifier<@babel/highlight<lavamoat": true,
        "to-fast-properties<@babel/types<@babel/core": true
      }
    },
    "@babel/types<@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": {
      "globals": {
        "console.warn": true,
        "process.env.BABEL_TYPES_8_BREAKING": true
      },
      "packages": {
        "@babel/helper-string-parser<@babel/types<@babel/core": true,
        "@babel/helper-validator-identifier<@babel/highlight<lavamoat": true,
        "to-fast-properties<@babel/types<@babel/core": true
      }
    },
    "@bufbuild/protobuf<sass-embedded": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true,
        "__values": true,
        "process": true
      }
    },
    "@cspotcode/source-map-support<ts-node": {
      "builtin": {
        "fs": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.normalize": true,
        "path.resolve": true,
        "url.fileURLToPath": true,
        "url.pathToFileURL": true,
        "util.inspect": true
      },
      "globals": {
        "Buffer.from": true,
        "URL": true,
        "XMLHttpRequest": true,
        "console.error": true,
        "process": true
      },
      "packages": {
        "@jridgewell/trace-mapping<@cspotcode/source-map-support<ts-node": true
      }
    },
    "@es-joy/jsdoccomment<eslint-plugin-jsdoc": {
      "packages": {
        "comment-parser<eslint-plugin-jsdoc": true,
        "esquery<eslint": true,
        "jsdoc-type-pratt-parser<@es-joy/jsdoccomment<eslint-plugin-jsdoc": true
      }
    },
    "@eslint-community/eslint-utils<eslint": {
      "packages": {
        "eslint-visitor-keys<eslint": true
      }
    },
    "@eslint/eslintrc<eslint": {
      "builtin": {
        "assert": true,
        "fs": true,
        "module": true,
        "os": true,
        "path": true,
        "url": true,
        "util": true
      },
      "globals": {
        "__filename": true,
        "process.cwd": true,
        "process.emitWarning": true,
        "process.platform": true
      },
      "packages": {
        "@babel/eslint-parser": true,
        "@babel/eslint-plugin": true,
        "@metamask/eslint-config": true,
        "@metamask/eslint-config-nodejs": true,
        "@metamask/eslint-config-typescript": true,
        "@typescript-eslint/eslint-plugin": true,
        "$root$": true,
        "ajv<@eslint/eslintrc<eslint": true,
        "debug<nock": true,
        "eslint": true,
        "eslint-config-prettier": true,
        "eslint-plugin-import": true,
        "eslint-plugin-jsdoc": true,
        "eslint-plugin-node": true,
        "eslint-plugin-prettier": true,
        "eslint-plugin-react": true,
        "eslint-plugin-react-hooks": true,
        "globals<eslint": true,
        "ignore<eslint": true,
        "minimatch<eslint": true,
        "strip-json-comments<mocha": true
      }
    },
    "@gulp-sourcemaps/identity-map<gulp-sourcemaps": {
      "packages": {
        "acorn<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true,
        "normalize-path<chokidar": true,
        "postcss<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true,
        "source-map<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true,
        "through2<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true
      }
    },
    "@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "packages": {
        "normalize-path<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true
      }
    },
    "@humanwhocodes/config-array<eslint": {
      "builtin": {
        "path.dirname": true,
        "path.join": true,
        "path.relative": true
      },
      "packages": {
        "@humanwhocodes/object-schema<@humanwhocodes/config-array<eslint": true,
        "debug<nock": true,
        "minimatch<eslint": true
      }
    },
    "@jridgewell/gen-mapping<@jridgewell/source-map<terser": {
      "globals": {
        "define": true
      },
      "packages": {
        "@jridgewell/set-array<@jridgewell/gen-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/sourcemap-codec<@jridgewell/gen-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/trace-mapping<@jridgewell/source-map<terser": true
      }
    },
    "@jridgewell/resolve-uri<@jridgewell/trace-mapping<@jridgewell/source-map<terser": {
      "globals": {
        "define": true
      }
    },
    "@jridgewell/set-array<@jridgewell/gen-mapping<@jridgewell/source-map<terser": {
      "globals": {
        "define": true
      }
    },
    "@jridgewell/source-map<terser": {
      "packages": {
        "@jridgewell/gen-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/trace-mapping<@jridgewell/source-map<terser": true
      }
    },
    "@jridgewell/sourcemap-codec<@jridgewell/gen-mapping<@jridgewell/source-map<terser": {
      "globals": {
        "Buffer": true,
        "TextDecoder": true,
        "define": true
      }
    },
    "@jridgewell/trace-mapping<@cspotcode/source-map-support<ts-node": {
      "globals": {
        "define": true
      },
      "packages": {
        "@jridgewell/resolve-uri<@jridgewell/trace-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/sourcemap-codec<@jridgewell/gen-mapping<@jridgewell/source-map<terser": true
      }
    },
    "@jridgewell/trace-mapping<@jridgewell/source-map<terser": {
      "globals": {
        "define": true
      },
      "packages": {
        "@jridgewell/resolve-uri<@jridgewell/trace-mapping<@jridgewell/source-map<terser": true,
        "@jridgewell/sourcemap-codec<@jridgewell/gen-mapping<@jridgewell/source-map<terser": true
      }
    },
    "@lavamoat/aa<lavamoat": {
      "builtin": {
        "node:fs.lstatSync": true,
        "node:fs.readFileSync": true,
        "node:fs.realpathSync": true,
        "node:path.dirname": true,
        "node:path.join": true,
        "node:path.relative": true
      },
      "packages": {
        "resolve<depcheck": true
      }
    },
    "@lavamoat/lavapack": {
      "builtin": {
        "assert": true,
        "buffer.Buffer.from": true,
        "fs.promises.readFile": true,
        "fs.promises.writeFile": true,
        "fs.readFileSync": true,
        "path.join": true,
        "path.relative": true
      },
      "globals": {
        "__dirname": true,
        "__filename.slice": true,
        "console.error": true,
        "console.warn": true,
        "process.cwd": true,
        "setTimeout": true
      },
      "packages": {
        "combine-source-map<@lavamoat/lavapack": true,
        "convert-source-map<@lavamoat/lavapack": true,
        "espree<eslint": true,
        "json-stable-stringify<@lavamoat/lavapack": true,
        "JSONStream<browserify": true,
        "lavamoat-core<lavamoat-viz": true,
        "readable-stream": true,
        "through2": true,
        "umd<@lavamoat/lavapack": true
      }
    },
    "@metamask/build-utils": {
      "packages": {
        "@metamask/utils": true
      }
    },
    "@metamask/utils": {
      "globals": {
        "Buffer": true,
        "TextDecoder": true,
        "TextEncoder": true
      },
      "packages": {
        "@noble/hashes": true,
        "@scure/base<@metamask/utils": true,
        "debug<nock": true,
        "pony-cause<@metamask/utils": true,
        "semver": true,
        "superstruct": true
      }
    },
    "@nicolo-ribaudo/eslint-scope-5-internals<@babel/eslint-parser": {
      "packages": {
        "eslint-scope<@nicolo-ribaudo/eslint-scope-5-internals<@babel/eslint-parser": true
      }
    },
    "@noble/hashes": {
      "globals": {
        "TextEncoder": true,
        "crypto": true
      }
    },
    "@nodelib/fs.scandir<@nodelib/fs.walk<eslint": {
      "builtin": {
        "fs.lstat": true,
        "fs.lstatSync": true,
        "fs.readdir": true,
        "fs.readdirSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "path.sep": true
      },
      "globals": {
        "process.versions.node": true
      },
      "packages": {
        "@nodelib/fs.stat<fast-glob": true,
        "run-parallel<@nodelib/fs.scandir<@nodelib/fs.walk<eslint": true
      }
    },
    "@nodelib/fs.stat<fast-glob": {
      "builtin": {
        "fs.lstat": true,
        "fs.lstatSync": true,
        "fs.stat": true,
        "fs.statSync": true
      }
    },
    "@nodelib/fs.walk<eslint": {
      "builtin": {
        "events.EventEmitter": true,
        "path.sep": true,
        "stream.Readable": true
      },
      "globals": {
        "setImmediate": true
      },
      "packages": {
        "@nodelib/fs.scandir<@nodelib/fs.walk<eslint": true,
        "fastq<@nodelib/fs.walk<eslint": true
      }
    },
    "@scure/base<@metamask/utils": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true
      }
    },
    "@stylelint/postcss-css-in-js<stylelint": {
      "globals": {
        "__dirname": true
      },
      "packages": {
        "@babel/core": true,
        "postcss-syntax<stylelint": true,
        "postcss<stylelint": true
      }
    },
    "@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "postcss-html<stylelint": true,
        "postcss-syntax<stylelint": true,
        "remark<@stylelint/postcss-markdown<stylelint": true,
        "unist-util-find-all-after<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "@typescript-eslint/eslint-plugin": {
      "packages": {
        "@typescript-eslint/scope-manager<@typescript-eslint/parser": true,
        "@typescript-eslint/type-utils<@typescript-eslint/eslint-plugin": true,
        "@typescript-eslint/utils<@typescript-eslint/eslint-plugin": true,
        "@typescript-eslint/utils<eslint-plugin-jest": true,
        "debug<eslint": true,
        "eslint": true,
        "ignore<globby": true,
        "regexpp<eslint": true,
        "semver": true,
        "tsutils<@typescript-eslint/eslint-plugin": true,
        "typescript": true
      }
    },
    "@typescript-eslint/experimental-utils<eslint-plugin-jest": {
      "builtin": {
        "path": true
      },
      "packages": {
        "@typescript-eslint/scope-manager<@typescript-eslint/parser": true,
        "@typescript-eslint/types<@typescript-eslint/experimental-utils<eslint-plugin-jest": true,
        "@typescript-eslint/types<@typescript-eslint/parser": true,
        "eslint": true,
        "eslint-scope<eslint": true,
        "eslint-scope<webpack": true,
        "eslint-utils<@typescript-eslint/experimental-utils<eslint-plugin-jest": true,
        "eslint-utils<eslint": true
      }
    },
    "@typescript-eslint/scope-manager<@typescript-eslint/utils<eslint-plugin-jest": {
      "builtin": {
        "path": true
      },
      "packages": {
        "@typescript-eslint/types<@typescript-eslint/utils<eslint-plugin-jest": true,
        "@typescript-eslint/visitor-keys<@typescript-eslint/scope-manager<@typescript-eslint/utils<eslint-plugin-jest": true
      }
    },
    "@typescript-eslint/type-utils<@typescript-eslint/eslint-plugin": {
      "packages": {
        "@typescript-eslint/utils<@typescript-eslint/eslint-plugin": true,
        "@typescript-eslint/utils<eslint-plugin-jest": true,
        "debug<@typescript-eslint/type-utils<@typescript-eslint/eslint-plugin": true,
        "debug<eslint": true,
        "debug<nock": true,
        "tsutils<@typescript-eslint/eslint-plugin": true,
        "typescript": true
      }
    },
    "@typescript-eslint/utils<@typescript-eslint/eslint-plugin": {
      "builtin": {
        "path": true
      },
      "packages": {
        "@typescript-eslint/scope-manager<@typescript-eslint/parser": true,
        "@typescript-eslint/types<@typescript-eslint/parser": true,
        "@typescript-eslint/utils": true,
        "eslint": true,
        "eslint-scope<webpack": true,
        "eslint-utils<eslint": true,
        "eslint-utils<eslint-plugin-mocha": true
      }
    },
    "@typescript-eslint/utils<eslint-plugin-jest": {
      "builtin": {
        "assert": true,
        "path": true
      },
      "packages": {
        "@eslint-community/eslint-utils<eslint": true,
        "@typescript-eslint/scope-manager<@typescript-eslint/parser": true,
        "@typescript-eslint/scope-manager<@typescript-eslint/utils<eslint-plugin-jest": true,
        "@typescript-eslint/types<@typescript-eslint/experimental-utils<eslint-plugin-jest": true,
        "@typescript-eslint/types<@typescript-eslint/parser": true,
        "@typescript-eslint/types<@typescript-eslint/utils<eslint-plugin-jest": true,
        "eslint": true,
        "eslint-scope<eslint": true,
        "eslint-scope<webpack": true,
        "eslint-scope<webpack<@typescript-eslint/utils<eslint-plugin-jest": true,
        "eslint-utils<eslint": true,
        "eslint-utils<eslint-plugin-mocha": true,
        "semver": true
      }
    },
    "@typescript-eslint/visitor-keys<@typescript-eslint/scope-manager<@typescript-eslint/utils<eslint-plugin-jest": {
      "builtin": {
        "path": true
      },
      "packages": {
        "eslint-visitor-keys<eslint": true
      }
    },
    "@ungap/structured-clone<eslint": {
      "globals": {
        "structuredClone": true
      }
    },
    "acorn-jsx<espree<eslint": {
      "packages": {
        "acorn<jsdom": true
      }
    },
    "acorn-node<syntax-error<browserify": {
      "packages": {
        "acorn-walk<@storybook/react": true,
        "acorn<acorn-node<syntax-error<browserify": true,
        "xtend<watchify": true
      }
    },
    "acorn-walk<@storybook/react": {
      "globals": {
        "define": true
      }
    },
    "acorn-walk<ts-node": {
      "globals": {
        "define": true
      }
    },
    "acorn<@gulp-sourcemaps/identity-map<gulp-sourcemaps": {
      "globals": {
        "define": true
      }
    },
    "acorn<acorn-node<syntax-error<browserify": {
      "globals": {
        "define": true
      }
    },
    "acorn<gulp-sourcemaps": {
      "globals": {
        "define": true
      }
    },
    "acorn<jsdom": {
      "globals": {
        "console": true,
        "define": true
      }
    },
    "aggregate-error<p-map<del": {
      "packages": {
        "clean-stack<aggregate-error<p-map<del": true,
        "indent-string<prettier-eslint": true
      }
    },
    "ajv<@eslint/eslintrc<eslint": {
      "globals": {
        "console": true
      },
      "packages": {
        "fast-deep-equal<eslint": true,
        "fast-json-stable-stringify<@metamask/snaps-utils": true,
        "json-schema-traverse<ajv<@eslint/eslintrc<eslint": true,
        "uri-js<ajv<eslint": true
      }
    },
    "ajv<eslint": {
      "globals": {
        "console": true
      },
      "packages": {
        "fast-deep-equal<eslint": true,
        "fast-json-stable-stringify<@metamask/snaps-utils": true,
        "json-schema-traverse<ajv<eslint": true,
        "uri-js<ajv<eslint": true
      }
    },
    "ajv<table<stylelint": {
      "packages": {
        "fast-deep-equal<eslint": true
      }
    },
    "ansi-colors<gulp-watch": {
      "packages": {
        "ansi-wrap<ansi-gray<fancy-log": true
      }
    },
    "ansi-gray<fancy-log": {
      "packages": {
        "ansi-wrap<ansi-gray<fancy-log": true
      }
    },
    "ansi-styles<chalk": {
      "packages": {
        "color-convert<ansi-styles<chalk": true
      }
    },
    "ansi-styles<chalk<@babel/highlight<@babel/code-frame": {
      "packages": {
        "color-convert<color<@metamask/jazzicon": true
      }
    },
    "ansi-styles<chalk<gulp-livereload": {
      "packages": {
        "color-convert<color<@metamask/jazzicon": true
      }
    },
    "ansi-styles<slice-ansi<table<stylelint": {
      "packages": {
        "color-convert<color<@metamask/jazzicon": true
      }
    },
    "anymatch<chokidar": {
      "packages": {
        "normalize-path<chokidar": true,
        "picomatch<anymatch<chokidar": true
      }
    },
    "anymatch<chokidar<gulp-watch": {
      "builtin": {
        "path.sep": true
      },
      "packages": {
        "micromatch<anymatch<chokidar<gulp-watch": true,
        "normalize-path<anymatch<chokidar<gulp-watch": true
      }
    },
    "anymatch<glob-watcher<gulp": {
      "builtin": {
        "path.sep": true
      },
      "packages": {
        "micromatch<anymatch<glob-watcher<gulp": true,
        "normalize-path<anymatch<glob-watcher<gulp": true
      }
    },
    "anymatch<gulp-watch": {
      "builtin": {
        "path.sep": true
      },
      "packages": {
        "micromatch<anymatch<gulp-watch": true,
        "normalize-path<anymatch<gulp-watch": true
      }
    },
    "append-buffer<vinyl-sourcemap<vinyl-fs<gulp": {
      "builtin": {
        "os.EOL": true
      },
      "globals": {
        "Buffer": true
      },
      "packages": {
        "buffer-equal<append-buffer<vinyl-sourcemap<vinyl-fs<gulp": true
      }
    },
    "are-we-there-yet<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "builtin": {
        "events.EventEmitter": true,
        "util.inherits": true
      },
      "packages": {
        "delegates<koa": true,
        "readable-stream": true
      }
    },
    "arg<ts-node": {
      "globals": {
        "process.argv.slice": true
      }
    },
    "arr-diff<micromatch<anymatch<gulp-watch": {
      "packages": {
        "arr-flatten<undertaker<gulp": true
      }
    },
    "arr-filter<bach<undertaker<gulp": {
      "packages": {
        "make-iterator<arr-map<undertaker<gulp": true
      }
    },
    "arr-map<undertaker<gulp": {
      "packages": {
        "make-iterator<arr-map<undertaker<gulp": true
      }
    },
    "array-includes<eslint-plugin-react": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "is-string<array-includes<eslint-plugin-react": true
      }
    },
    "array-initial<bach<undertaker<gulp": {
      "packages": {
        "array-slice<object.defaults<undertaker<gulp": true,
        "is-number<array-last<bach<undertaker<gulp": true
      }
    },
    "array-last<bach<undertaker<gulp": {
      "packages": {
        "is-number<array-last<bach<undertaker<gulp": true
      }
    },
    "array.prototype.flat<eslint-plugin-import": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true,
        "es-shim-unscopables<array.prototype.flatmap<eslint-plugin-react": true
      }
    },
    "array.prototype.flatmap<eslint-plugin-react": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true,
        "es-shim-unscopables<array.prototype.flatmap<eslint-plugin-react": true
      }
    },
    "async-done<glob-watcher<gulp": {
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "once<@metamask/object-multiplex": true,
        "process-nextick-args<readable-stream-2": true,
        "stream-exhaust<async-done<glob-watcher<gulp": true
      }
    },
    "async-each<chokidar<gulp-watch": {
      "globals": {
        "define": true
      }
    },
    "async-settle<bach<undertaker<gulp": {
      "packages": {
        "async-done<glob-watcher<gulp": true
      }
    },
    "atob<source-map-resolve<css<gulp-sourcemaps": {
      "globals": {
        "Buffer.from": true
      }
    },
    "autoprefixer": {
      "globals": {
        "console": true,
        "process.cwd": true,
        "process.env.AUTOPREFIXER_GRID": true
      },
      "packages": {
        "browserslist<webpack": true,
        "caniuse-lite<autoprefixer": true,
        "fraction.js<autoprefixer": true,
        "normalize-range<autoprefixer": true,
        "picocolors<postcss": true,
        "postcss": true,
        "postcss-value-parser<stylelint": true
      }
    },
    "autoprefixer<stylelint": {
      "globals": {
        "console": true,
        "process.cwd": true,
        "process.env.AUTOPREFIXER_GRID": true
      },
      "packages": {
        "browserslist<webpack": true,
        "caniuse-lite<autoprefixer": true,
        "normalize-range<autoprefixer": true,
        "num2fraction<autoprefixer<stylelint": true,
        "picocolors<postcss<stylelint": true,
        "postcss-value-parser<stylelint": true,
        "postcss<stylelint": true
      }
    },
    "babel-plugin-polyfill-corejs2<@babel/preset-env": {
      "packages": {
        "@babel/compat-data<@babel/preset-env": true,
        "@babel/core": true,
        "@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": true,
        "semver<babel-plugin-polyfill-corejs2<@babel/preset-env": true
      }
    },
    "babel-plugin-polyfill-corejs3<@babel/preset-env": {
      "packages": {
        "@babel/core": true,
        "@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": true,
        "core-js-compat<@babel/preset-env": true
      }
    },
    "babel-plugin-polyfill-regenerator<@babel/preset-env": {
      "packages": {
        "@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": true
      }
    },
    "babelify": {
      "builtin": {
        "path.extname": true,
        "path.resolve": true,
        "stream.PassThrough": true,
        "stream.Transform": true,
        "util": true
      },
      "globals": {
        "Buffer.concat": true
      },
      "packages": {
        "@babel/core": true
      }
    },
    "bach<undertaker<gulp": {
      "builtin": {
        "assert.ok": true
      },
      "packages": {
        "arr-filter<bach<undertaker<gulp": true,
        "arr-flatten<undertaker<gulp": true,
        "arr-map<undertaker<gulp": true,
        "array-each<bach<undertaker<gulp": true,
        "array-initial<bach<undertaker<gulp": true,
        "array-last<bach<undertaker<gulp": true,
        "async-done<glob-watcher<gulp": true,
        "async-settle<bach<undertaker<gulp": true,
        "now-and-later<vinyl-sourcemap<vinyl-fs<gulp": true
      }
    },
    "base<snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "class-utils<base<snapdragon<braces<chokidar<gulp-watch": true,
        "component-emitter<base<snapdragon<braces<chokidar<gulp-watch": true,
        "define-property<base<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true,
        "mixin-deep<base<snapdragon<braces<chokidar<gulp-watch": true,
        "pascalcase<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "bify-module-groups": {
      "packages": {
        "pify": true,
        "pump<pumpify": true,
        "through2<bify-module-groups": true
      }
    },
    "bl<vinyl-buffer": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "readable-stream<bl<vinyl-buffer": true,
        "safe-buffer<content-disposition<koa": true
      }
    },
    "body<tiny-lr<gulp-livereload": {
      "builtin": {
        "querystring.parse": true
      },
      "packages": {
        "continuable-cache<body<tiny-lr<gulp-livereload": true,
        "error<body<tiny-lr<gulp-livereload": true,
        "raw-body<body<tiny-lr<gulp-livereload": true,
        "safe-json-parse<body<tiny-lr<gulp-livereload": true
      }
    },
    "brace-expansion<minimatch<eslint": {
      "packages": {
        "balanced-match<stylelint": true,
        "concat-map<brace-expansion<minimatch<eslint": true
      }
    },
    "braces<chokidar": {
      "packages": {
        "fill-range<braces<chokidar": true
      }
    },
    "braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "arr-flatten<undertaker<gulp": true,
        "array-unique<braces<chokidar<gulp-watch": true,
        "extend-shallow<braces<chokidar<glob-watcher<gulp": true,
        "fill-range<braces<chokidar<glob-watcher<gulp": true,
        "isobject<gulp-cli<gulp": true,
        "repeat-element<braces<chokidar<gulp-watch": true,
        "snapdragon-node<braces<chokidar<gulp-watch": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "split-string<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "braces<chokidar<gulp-watch": {
      "packages": {
        "arr-flatten<undertaker<gulp": true,
        "array-unique<braces<chokidar<gulp-watch": true,
        "extend-shallow<braces<chokidar<gulp-watch": true,
        "fill-range<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true,
        "repeat-element<braces<chokidar<gulp-watch": true,
        "snapdragon-node<braces<chokidar<gulp-watch": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "split-string<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "expand-range<braces<micromatch<anymatch<gulp-watch": true,
        "preserve<braces<micromatch<anymatch<gulp-watch": true,
        "repeat-element<braces<chokidar<gulp-watch": true
      }
    },
    "browser-pack<browserify": {
      "builtin": {
        "fs.readFileSync": true,
        "path.join": true,
        "path.relative": true
      },
      "globals": {
        "__dirname": true,
        "process.cwd": true
      },
      "packages": {
        "combine-source-map<@lavamoat/lavapack": true,
        "defined<watchify": true,
        "JSONStream<browserify": true,
        "safe-buffer<content-disposition<koa": true,
        "through2<browser-pack<browserify": true,
        "umd<@lavamoat/lavapack": true
      }
    },
    "browser-resolve<browserify": {
      "builtin": {
        "fs.readFile": true,
        "fs.readFileSync": true,
        "path": true
      },
      "globals": {
        "__dirname": true,
        "process.platform": true
      },
      "packages": {
        "resolve<depcheck": true
      }
    },
    "browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.realpath": true,
        "path.dirname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "__dirname": true,
        "process.cwd": true,
        "process.nextTick": true,
        "process.platform": true
      },
      "packages": {
        "browser-pack<browserify": true,
        "browser-resolve<browserify": true,
        "cached-path-relative<browserify": true,
        "concat-stream<browserify": true,
        "defined<watchify": true,
        "deps-sort<browserify": true,
        "has<browserify": true,
        "htmlescape<lavamoat": true,
        "inherits<pumpify": true,
        "insert-module-globals<browserify": true,
        "labeled-stream-splicer": true,
        "module-deps<browserify": true,
        "read-only-stream<browserify": true,
        "resolve<depcheck": true,
        "shasum-object<browserify": true,
        "syntax-error<browserify": true,
        "through2<browserify": true,
        "xtend<watchify": true
      }
    },
    "browserslist<webpack": {
      "builtin": {
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "path.basename": true,
        "path.dirname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true
      },
      "globals": {
        "console.warn": true,
        "process.env": true,
        "process.versions.node": true
      },
      "packages": {
        "caniuse-lite<autoprefixer": true,
        "electron-to-chromium<browserslist<webpack": true,
        "node-releases<browserslist<webpack": true
      }
    },
    "buffer-builder<sass-embedded": {
      "globals": {
        "Buffer": true
      }
    },
    "buffer-crc32<yazl<gulp-zip": {
      "builtin": {
        "buffer.Buffer": true
      }
    },
    "buffer-equal<append-buffer<vinyl-sourcemap<vinyl-fs<gulp": {
      "builtin": {
        "buffer.Buffer.isBuffer": true
      }
    },
    "buffer-from<source-map-support<terser": {
      "globals": {
        "Buffer": true
      }
    },
    "cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "component-emitter<base<snapdragon<braces<chokidar<gulp-watch": true,
        "get-value<array-sort<gulp-cli<gulp": true,
        "has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true,
        "set-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "to-object-path<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "union-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "cached-path-relative<browserify": {
      "builtin": {
        "path": true
      },
      "globals": {
        "process.cwd": true
      }
    },
    "call-bind<string.prototype.matchall": {
      "packages": {
        "es-errors<call-bind<string.prototype.matchall": true,
        "function-bind<has<browserify": true,
        "get-intrinsic<string.prototype.matchall": true,
        "set-function-length<call-bind<string.prototype.matchall": true
      }
    },
    "chalk": {
      "packages": {
        "ansi-styles<chalk": true,
        "supports-color<chalk": true
      }
    },
    "chalk<@babel/highlight<@babel/code-frame": {
      "globals": {
        "process.env.TERM": true,
        "process.platform": true
      },
      "packages": {
        "ansi-styles<chalk<@babel/highlight<@babel/code-frame": true,
        "escape-string-regexp<chalk<@babel/highlight<@babel/code-frame": true,
        "supports-color<chalk<@babel/highlight<@babel/code-frame": true
      }
    },
    "chalk<gulp-livereload": {
      "globals": {
        "process.env.TERM": true,
        "process.platform": true
      },
      "packages": {
        "ansi-styles<chalk<gulp-livereload": true,
        "escape-string-regexp<chalk<gulp-livereload": true,
        "supports-color<chalk<gulp-livereload": true
      }
    },
    "chokidar": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.close": true,
        "fs.lstat": true,
        "fs.open": true,
        "fs.readdir": true,
        "fs.realpath": true,
        "fs.stat": true,
        "fs.unwatchFile": true,
        "fs.watch": true,
        "fs.watchFile": true,
        "os.type": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.normalize": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true,
        "util.promisify": true
      },
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "process.env.CHOKIDAR_INTERVAL": true,
        "process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR": true,
        "process.env.CHOKIDAR_USEPOLLING": true,
        "process.nextTick": true,
        "process.platform": true,
        "process.version.match": true,
        "setTimeout": true
      },
      "packages": {
        "anymatch<chokidar": true,
        "braces<chokidar": true,
        "fsevents<chokidar": true,
        "glob-parent<eslint": true,
        "is-binary-path<chokidar": true,
        "is-glob<del": true,
        "normalize-path<chokidar": true,
        "readdirp<chokidar": true
      }
    },
    "chokidar<glob-watcher<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "fs": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "process.env.CHOKIDAR_INTERVAL": true,
        "process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR": true,
        "process.env.CHOKIDAR_USEPOLLING": true,
        "process.nextTick": true,
        "process.platform": true,
        "setTimeout": true
      },
      "packages": {
        "anymatch<glob-watcher<gulp": true,
        "async-each<chokidar<gulp-watch": true,
        "braces<chokidar<glob-watcher<gulp": true,
        "fsevents<chokidar<glob-watcher<gulp": true,
        "glob-parent<eslint": true,
        "inherits<pumpify": true,
        "is-binary-path<chokidar<glob-watcher<gulp": true,
        "is-glob<del": true,
        "normalize-path<chokidar": true,
        "path-is-absolute<gulp-watch": true,
        "readdirp<chokidar<glob-watcher<gulp": true,
        "upath<chokidar<glob-watcher<gulp": true
      }
    },
    "chokidar<gulp-watch": {
      "builtin": {
        "events.EventEmitter": true,
        "fs": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "process.env.CHOKIDAR_INTERVAL": true,
        "process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR": true,
        "process.env.CHOKIDAR_USEPOLLING": true,
        "process.nextTick": true,
        "process.platform": true,
        "setTimeout": true
      },
      "packages": {
        "anymatch<chokidar<gulp-watch": true,
        "async-each<chokidar<gulp-watch": true,
        "braces<chokidar<gulp-watch": true,
        "fsevents<chokidar<gulp-watch": true,
        "glob-parent<eslint": true,
        "glob-parent<gulp-watch": true,
        "inherits<pumpify": true,
        "is-binary-path<chokidar<gulp-watch": true,
        "is-glob<del": true,
        "is-glob<eslint": true,
        "normalize-path<chokidar": true,
        "path-is-absolute<gulp-watch": true,
        "readdirp<chokidar<gulp-watch": true,
        "upath<chokidar<gulp-watch": true
      }
    },
    "class-utils<base<snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "util": true
      },
      "packages": {
        "arr-union<plugin-error<gulp-zip": true,
        "define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true,
        "static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "clean-stack<aggregate-error<p-map<del": {
      "builtin": {
        "os.homedir": true
      }
    },
    "cliui<yargs": {
      "globals": {
        "process": true
      },
      "packages": {
        "string-width<yargs": true,
        "strip-ansi<eslint": true,
        "wrap-ansi<cliui<yargs": true
      }
    },
    "clone-buffer<vinyl": {
      "builtin": {
        "buffer.Buffer": true
      }
    },
    "clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "for-own<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "is-plain-object<clone-deep<@babel/register": true,
        "kind-of<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "lazy-cache<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": true
      }
    },
    "clone-regexp<execall<stylelint": {
      "packages": {
        "is-regexp<clone-regexp<execall<stylelint": true
      }
    },
    "clone-stats<vinyl": {
      "builtin": {
        "fs.Stats": true
      }
    },
    "clone-stats<vinyl<vinyl-file<gulp-watch": {
      "builtin": {
        "fs.Stats": true
      }
    },
    "clone<color<@metamask/jazzicon": {
      "globals": {
        "Buffer": true
      }
    },
    "clone<vinyl": {
      "globals": {
        "Buffer": true
      }
    },
    "cloneable-readable<vinyl": {
      "packages": {
        "inherits<pumpify": true,
        "process-nextick-args<cloneable-readable<vinyl": true,
        "through2<cloneable-readable<vinyl": true
      }
    },
    "collection-map<undertaker<gulp": {
      "packages": {
        "arr-map<undertaker<gulp": true,
        "for-own<object.reduce<undertaker<gulp": true,
        "make-iterator<arr-map<undertaker<gulp": true
      }
    },
    "collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "map-visit<collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "object-visit<collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "color-convert<ansi-styles<chalk": {
      "packages": {
        "color-name<moo-color<jest-canvas-mock": true
      }
    },
    "color-convert<color<@metamask/jazzicon": {
      "packages": {
        "color-name<color-convert<color<@metamask/jazzicon": true
      }
    },
    "color-support<fancy-log": {
      "globals": {
        "process": true
      }
    },
    "combine-source-map<@lavamoat/lavapack": {
      "builtin": {
        "path.dirname": true,
        "path.join": true
      },
      "globals": {
        "process.platform": true
      },
      "packages": {
        "convert-source-map<gulp-sourcemaps": true,
        "inline-source-map<combine-source-map<@lavamoat/lavapack": true,
        "lodash.memoize<combine-source-map<@lavamoat/lavapack": true,
        "source-map<combine-source-map<@lavamoat/lavapack": true
      }
    },
    "concat-stream<browserify": {
      "globals": {
        "Buffer.concat": true,
        "Buffer.isBuffer": true
      },
      "packages": {
        "buffer-from<source-map-support<terser": true,
        "inherits<pumpify": true,
        "readable-stream<concat-stream<browserify": true,
        "typedarray<concat-stream<browserify": true
      }
    },
    "concat-stream<lavamoat-browserify": {
      "globals": {
        "Buffer.concat": true,
        "Buffer.isBuffer": true
      },
      "packages": {
        "buffer-from<source-map-support<terser": true,
        "inherits<pumpify": true,
        "readable-stream": true,
        "typedarray<concat-stream<browserify": true
      }
    },
    "convert-source-map<@babel/core": {
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "value": true
      }
    },
    "convert-source-map<@lavamoat/lavapack": {
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "value": true
      }
    },
    "convert-source-map<gulp-sourcemaps": {
      "builtin": {
        "fs.readFileSync": true,
        "path.join": true
      },
      "globals": {
        "Buffer.from": true
      }
    },
    "core-util-is<readable-stream-2": {
      "globals": {
        "Buffer.isBuffer": true
      }
    },
    "cosmiconfig<stylelint": {
      "builtin": {
        "fs": true,
        "os": true,
        "path": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "import-fresh<@eslint/eslintrc<eslint": true,
        "parse-json<cosmiconfig<depcheck": true,
        "path-type<dir-glob<globby": true,
        "yaml<cosmiconfig<stylelint": true
      }
    },
    "create-require<ts-node": {
      "builtin": {
        "fs.lstatSync": true,
        "module.Module": true,
        "module.createRequire": true,
        "module.createRequireFromPath": true,
        "path.dirname": true,
        "path.join": true
      },
      "globals": {
        "process.cwd": true
      }
    },
    "cross-spawn": {
      "builtin": {
        "child_process.spawn": true,
        "child_process.spawnSync": true,
        "fs.closeSync": true,
        "fs.openSync": true,
        "fs.readSync": true,
        "path.delimiter": true,
        "path.normalize": true,
        "path.resolve": true
      },
      "globals": {
        "Buffer.alloc": true,
        "process.chdir": true,
        "process.cwd": true,
        "process.env": true,
        "process.platform": true
      },
      "packages": {
        "path-key<cross-spawn": true,
        "shebang-command<cross-spawn": true,
        "which<cross-spawn": true
      }
    },
    "css<gulp-sourcemaps": {
      "builtin": {
        "fs.readFileSync": true,
        "path.dirname": true,
        "path.sep": true
      },
      "packages": {
        "inherits<pumpify": true,
        "source-map-resolve<css<gulp-sourcemaps": true,
        "source-map<css<gulp-sourcemaps": true
      }
    },
    "d<es6-iterator<resolve-url-loader": {
      "packages": {
        "es5-ext<es6-iterator<resolve-url-loader": true
      }
    },
    "debug-fabulous<gulp-sourcemaps": {
      "packages": {
        "debug<debug-fabulous<gulp-sourcemaps": true,
        "memoizee<debug-fabulous<gulp-sourcemaps": true,
        "object-assign<react": true
      }
    },
    "debug<@typescript-eslint/type-utils<@typescript-eslint/eslint-plugin": {
      "globals": {
        "console.debug": true,
        "console.log": true
      },
      "packages": {
        "ms<debug<@typescript-eslint/type-utils<@typescript-eslint/eslint-plugin": true
      }
    },
    "debug<debug-fabulous<gulp-sourcemaps": {
      "builtin": {
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<mocha": true,
        "supports-color<mocha": true
      }
    },
    "debug<eslint-import-resolver-node": {
      "builtin": {
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<mocha": true,
        "supports-color<mocha": true
      }
    },
    "debug<eslint-module-utils<eslint-plugin-import": {
      "builtin": {
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<mocha": true,
        "supports-color<mocha": true
      }
    },
    "debug<eslint-plugin-import": {
      "builtin": {
        "fs.SyncWriteStream": true,
        "net.Socket": true,
        "tty.WriteStream": true,
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "chrome": true,
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<debug<eslint-plugin-import": true
      }
    },
    "debug<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "builtin": {
        "fs.SyncWriteStream": true,
        "net.Socket": true,
        "tty.WriteStream": true,
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "chrome": true,
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<debug<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true
      }
    },
    "debug<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "builtin": {
        "fs.SyncWriteStream": true,
        "net.Socket": true,
        "tty.WriteStream": true,
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "chrome": true,
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<debug<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true
      }
    },
    "debug<gulp-livereload": {
      "builtin": {
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<mocha": true,
        "supports-color<chalk<gulp-livereload": true
      }
    },
    "debug<nock": {
      "builtin": {
        "tty.isatty": true,
        "util.deprecate": true,
        "util.format": true,
        "util.inspect": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<debug<nock": true,
        "supports-color<mocha": true
      }
    },
    "debug<snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "fs.SyncWriteStream": true,
        "net.Socket": true,
        "tty.WriteStream": true,
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "chrome": true,
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<debug<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "debug<tiny-lr<gulp-livereload": {
      "builtin": {
        "tty.isatty": true,
        "util": true
      },
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "ms<mocha": true,
        "supports-color<mocha": true
      }
    },
    "default-resolution<last-run<undertaker<gulp": {
      "globals": {
        "process.version.match": true
      }
    },
    "define-data-property<define-properties<string.prototype.matchall": {
      "packages": {
        "es-errors<call-bind<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "gopd<es-abstract<string.prototype.matchall": true,
        "has-property-descriptors<es-abstract<string.prototype.matchall": true
      }
    },
    "define-properties<string.prototype.matchall": {
      "packages": {
        "define-data-property<define-properties<string.prototype.matchall": true,
        "has-property-descriptors<es-abstract<string.prototype.matchall": true,
        "object-keys<json-stable-stringify<@lavamoat/lavapack": true
      }
    },
    "define-property<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true
      }
    },
    "define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true
      }
    },
    "define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true
      }
    },
    "define-property<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true
      }
    },
    "define-property<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true
      }
    },
    "define-property<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "define-property<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "define-property<nanomatch<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "define-property<snapdragon-node<braces<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true
      }
    },
    "define-property<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "define-property<to-regex<braces<chokidar<gulp-watch": {
      "packages": {
        "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "del": {
      "builtin": {
        "path.resolve": true,
        "util.promisify": true
      },
      "globals": {
        "process.cwd": true,
        "process.platform": true
      },
      "packages": {
        "globby": true,
        "graceful-fs<del": true,
        "is-glob<del": true,
        "is-path-cwd<del": true,
        "is-path-inside<del": true,
        "p-map<del": true,
        "rimraf<del": true,
        "slash<del": true
      }
    },
    "deps-sort<browserify": {
      "packages": {
        "shasum-object<browserify": true,
        "through2<deps-sort<browserify": true
      }
    },
    "detect-libc<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "builtin": {
        "child_process.spawnSync": true,
        "fs.readdirSync": true,
        "os.platform": true
      },
      "globals": {
        "process.env": true
      }
    },
    "detective<module-deps<browserify": {
      "packages": {
        "acorn-node<syntax-error<browserify": true,
        "defined<watchify": true
      }
    },
    "diff<ts-node": {
      "globals": {
        "setTimeout": true
      }
    },
    "dir-glob<globby": {
      "builtin": {
        "path.extname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.posix.join": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "path-type<dir-glob<globby": true
      }
    },
    "doctrine<eslint": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "esutils<eslint": true
      }
    },
    "doctrine<eslint-plugin-import": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "esutils<eslint": true
      }
    },
    "doctrine<eslint-plugin-react": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "esutils<eslint": true
      }
    },
    "dom-serializer<domutils<htmlparser2<postcss-html<stylelint": {
      "packages": {
        "domelementtype<htmlparser2<postcss-html<stylelint": true,
        "entities<htmlparser2<postcss-html<stylelint": true
      }
    },
    "domhandler<htmlparser2<postcss-html<stylelint": {
      "packages": {
        "domelementtype<htmlparser2<postcss-html<stylelint": true
      }
    },
    "domutils<htmlparser2<postcss-html<stylelint": {
      "packages": {
        "dom-serializer<domutils<htmlparser2<postcss-html<stylelint": true,
        "domelementtype<htmlparser2<postcss-html<stylelint": true
      }
    },
    "duplexer<debounce-stream": {
      "builtin": {
        "stream": true
      }
    },
    "duplexer2<browserify": {
      "packages": {
        "readable-stream<duplexer2<browserify": true
      }
    },
    "duplexify": {
      "globals": {
        "Buffer": true,
        "process.nextTick": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "inherits<pumpify": true,
        "readable-stream": true,
        "stream-shift<duplexify": true
      }
    },
    "duplexify<pumpify<glob-stream<vinyl-fs<gulp": {
      "globals": {
        "Buffer": true,
        "process.nextTick": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "inherits<pumpify": true,
        "readable-stream<glob-stream<vinyl-fs<gulp": true,
        "stream-shift<duplexify": true
      }
    },
    "duplexify<pumpify<vinyl-fs<gulp": {
      "globals": {
        "Buffer": true,
        "process.nextTick": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "inherits<pumpify": true,
        "readable-stream<vinyl-fs<gulp": true,
        "stream-shift<duplexify": true
      }
    },
    "end-of-stream<duplexify": {
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "once<@metamask/object-multiplex": true
      }
    },
    "error-ex<parse-json<cosmiconfig<depcheck": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "is-arrayish<error-ex<parse-json<cosmiconfig<depcheck": true
      }
    },
    "error<body<tiny-lr<gulp-livereload": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "string-template<error<body<tiny-lr<gulp-livereload": true,
        "xtend<watchify": true
      }
    },
    "es-abstract<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "es-set-tostringtag<es-abstract<string.prototype.matchall": true,
        "es-to-primitive<es-abstract<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "gopd<es-abstract<string.prototype.matchall": true,
        "has-property-descriptors<es-abstract<string.prototype.matchall": true,
        "has-proto<es-abstract<string.prototype.matchall": true,
        "has-symbols<string.prototype.matchall": true,
        "has<browserify": true,
        "internal-slot<string.prototype.matchall": true,
        "is-callable<es-abstract<string.prototype.matchall": true,
        "is-regex<es-abstract<string.prototype.matchall": true,
        "is-string<array-includes<eslint-plugin-react": true,
        "object-inspect<es-abstract<string.prototype.matchall": true,
        "safe-regex-test<es-abstract<string.prototype.matchall": true,
        "string.prototype.trim<es-abstract<string.prototype.matchall": true
      }
    },
    "es-set-tostringtag<es-abstract<string.prototype.matchall": {
      "packages": {
        "get-intrinsic<string.prototype.matchall": true,
        "has-tostringtag<is-generator-function<koa": true,
        "has<browserify": true
      }
    },
    "es-shim-unscopables<array.prototype.flatmap<eslint-plugin-react": {
      "packages": {
        "has<browserify": true
      }
    },
    "es-to-primitive<es-abstract<string.prototype.matchall": {
      "packages": {
        "is-callable<es-abstract<string.prototype.matchall": true,
        "is-date-object<deep-equal<@metamask/eth-token-tracker": true,
        "is-symbol<es-to-primitive<es-abstract<string.prototype.matchall": true
      }
    },
    "es5-ext<es6-iterator<resolve-url-loader": {
      "packages": {
        "es6-symbol<es6-iterator<resolve-url-loader": true
      }
    },
    "es6-iterator<resolve-url-loader": {
      "packages": {
        "d<es6-iterator<resolve-url-loader": true,
        "es5-ext<es6-iterator<resolve-url-loader": true,
        "es6-symbol<es6-iterator<resolve-url-loader": true
      }
    },
    "es6-symbol<es6-iterator<resolve-url-loader": {
      "packages": {
        "d<es6-iterator<resolve-url-loader": true
      }
    },
    "es6-weak-map<undertaker<gulp": {
      "packages": {
        "d<es6-iterator<resolve-url-loader": true,
        "es5-ext<es6-iterator<resolve-url-loader": true,
        "es6-iterator<resolve-url-loader": true,
        "es6-symbol<es6-iterator<resolve-url-loader": true
      }
    },
    "escalade<yargs": {
      "builtin": {
        "fs.readdirSync": true,
        "fs.statSync": true,
        "path.dirname": true,
        "path.resolve": true
      }
    },
    "eslint": {
      "builtin": {
        "assert": true,
        "fs.existsSync": true,
        "fs.lstatSync": true,
        "fs.promises": true,
        "fs.readFileSync": true,
        "fs.readdirSync": true,
        "fs.statSync": true,
        "fs.unlinkSync": true,
        "fs.writeFile": true,
        "fs.writeFileSync": true,
        "path.dirname": true,
        "path.extname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.normalize": true,
        "path.posix.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true,
        "url.pathToFileURL": true,
        "util.format": true,
        "util.inspect": true,
        "util.promisify": true
      },
      "globals": {
        "__dirname": true,
        "console.log": true,
        "describe": true,
        "it": true,
        "process": true
      },
      "packages": {
        "@eslint-community/eslint-utils<eslint": true,
        "@eslint-community/regexpp<eslint": true,
        "@eslint/eslintrc<eslint": true,
        "@eslint/js<eslint": true,
        "@humanwhocodes/config-array<eslint": true,
        "@nodelib/fs.walk<eslint": true,
        "@ungap/structured-clone<eslint": true,
        "ajv<eslint": true,
        "debug<nock": true,
        "doctrine<eslint": true,
        "escape-string-regexp<mocha": true,
        "eslint-scope<eslint": true,
        "eslint-visitor-keys<eslint": true,
        "espree<eslint": true,
        "esquery<eslint": true,
        "esutils<eslint": true,
        "fast-deep-equal<eslint": true,
        "file-entry-cache<eslint": true,
        "find-up<mocha": true,
        "glob-parent<eslint": true,
        "globals<eslint": true,
        "graphemer<eslint": true,
        "ignore<eslint": true,
        "imurmurhash<eslint": true,
        "is-glob<del": true,
        "is-path-inside<del": true,
        "json-stable-stringify-without-jsonify<eslint": true,
        "levn<eslint": true,
        "lodash.merge<eslint": true,
        "minimatch<eslint": true,
        "natural-compare<eslint": true
      }
    },
    "eslint-config-prettier": {
      "globals": {
        "process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED": true
      }
    },
    "eslint-import-resolver-node": {
      "builtin": {
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true
      },
      "packages": {
        "debug<eslint-import-resolver-node": true,
        "resolve<depcheck": true
      }
    },
    "eslint-import-resolver-typescript": {
      "builtin": {
        "path": true
      },
      "globals": {
        "console.warn": true,
        "process.cwd": true
      },
      "packages": {
        "debug<nock": true,
        "glob<browserify": true,
        "is-glob<del": true,
        "resolve<depcheck": true,
        "tsconfig-paths<eslint-plugin-import": true
      }
    },
    "eslint-module-utils<eslint-plugin-import": {
      "builtin": {
        "crypto.createHash": true,
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "fs.readdirSync": true,
        "module": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.parse": true,
        "path.resolve": true
      },
      "globals": {
        "__dirname.toUpperCase": true,
        "console.warn": true,
        "process.cwd": true,
        "process.hrtime": true
      },
      "packages": {
        "@babel/eslint-parser": true,
        "debug<eslint-module-utils<eslint-plugin-import": true,
        "eslint-import-resolver-node": true,
        "find-up<eslint-module-utils<eslint-plugin-import": true
      }
    },
    "eslint-plugin-es<eslint-plugin-node": {
      "packages": {
        "eslint-utils<eslint-plugin-node": true,
        "regexpp<eslint-plugin-es<eslint-plugin-node": true
      }
    },
    "eslint-plugin-import": {
      "builtin": {
        "fs": true,
        "path": true,
        "vm": true
      },
      "globals": {
        "process.cwd": true,
        "process.env": true
      },
      "packages": {
        "array-includes<eslint-plugin-react": true,
        "array.prototype.flat<eslint-plugin-import": true,
        "debug<eslint-plugin-import": true,
        "doctrine<eslint-plugin-import": true,
        "eslint": true,
        "eslint-module-utils<eslint-plugin-import": true,
        "has<browserify": true,
        "is-core-module<depcheck": true,
        "is-glob<del": true,
        "minimatch<eslint": true,
        "object.values<eslint-plugin-react": true,
        "tsconfig-paths<eslint-plugin-import": true,
        "typescript": true
      }
    },
    "eslint-plugin-jest": {
      "builtin": {
        "fs.readdirSync": true,
        "path.join": true,
        "path.parse": true
      },
      "globals": {
        "__dirname": true
      },
      "packages": {
        "@typescript-eslint/eslint-plugin": true,
        "@typescript-eslint/utils<eslint-plugin-jest": true
      }
    },
    "eslint-plugin-jsdoc": {
      "packages": {
        "@es-joy/jsdoccomment<eslint-plugin-jsdoc": true,
        "are-docs-informative<eslint-plugin-jsdoc": true,
        "comment-parser<eslint-plugin-jsdoc": true,
        "debug<nock": true,
        "escape-string-regexp<mocha": true,
        "eslint": true,
        "esquery<eslint": true,
        "semver": true,
        "spdx-expression-parse<eslint-plugin-jsdoc": true
      }
    },
    "eslint-plugin-node": {
      "builtin": {
        "fs.readFileSync": true,
        "fs.readdirSync": true,
        "fs.statSync": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "eslint-plugin-es<eslint-plugin-node": true,
        "eslint-utils<eslint-plugin-node": true,
        "ignore<eslint": true,
        "minimatch<eslint": true,
        "resolve<depcheck": true,
        "semver<eslint-plugin-node": true
      }
    },
    "eslint-plugin-prettier": {
      "packages": {
        "prettier": true,
        "prettier-linter-helpers<eslint-plugin-prettier": true
      }
    },
    "eslint-plugin-react": {
      "builtin": {
        "fs.statSync": true,
        "path.dirname": true,
        "path.extname": true
      },
      "globals": {
        "console.error": true,
        "console.log": true,
        "process.argv.join": true,
        "process.cwd": true
      },
      "packages": {
        "array-includes<eslint-plugin-react": true,
        "array.prototype.flatmap<eslint-plugin-react": true,
        "doctrine<eslint-plugin-react": true,
        "eslint": true,
        "estraverse<eslint-plugin-react": true,
        "jsx-ast-utils<eslint-plugin-react": true,
        "minimatch<eslint": true,
        "object.entries<eslint-plugin-react": true,
        "object.fromentries<eslint-plugin-react": true,
        "object.hasown<eslint-plugin-react": true,
        "object.values<eslint-plugin-react": true,
        "prop-types": true,
        "resolve<eslint-plugin-react": true,
        "semver<eslint-plugin-react": true,
        "string.prototype.matchall": true
      }
    },
    "eslint-plugin-react-hooks": {
      "globals": {
        "process.env.NODE_ENV": true
      }
    },
    "eslint-scope<@nicolo-ribaudo/eslint-scope-5-internals<@babel/eslint-parser": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "esrecurse<eslint-scope<eslint": true,
        "estraverse<eslint-scope<@nicolo-ribaudo/eslint-scope-5-internals<@babel/eslint-parser": true
      }
    },
    "eslint-scope<eslint": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "esrecurse<eslint-scope<eslint": true,
        "estraverse<eslint-plugin-react": true
      }
    },
    "eslint-utils<@typescript-eslint/experimental-utils<eslint-plugin-jest": {
      "packages": {
        "eslint-visitor-keys<eslint-utils<@typescript-eslint/experimental-utils<eslint-plugin-jest": true
      }
    },
    "eslint-utils<@typescript-eslint/utils<eslint-plugin-jest": {
      "packages": {
        "@eslint-community/eslint-utils<eslint": true,
        "eslint-visitor-keys<eslint-utils<@typescript-eslint/utils<eslint-plugin-jest": true,
        "semver": true
      }
    },
    "eslint-utils<eslint-plugin-mocha": {
      "packages": {
        "eslint-visitor-keys<eslint-utils<eslint-plugin-mocha": true
      }
    },
    "eslint-utils<eslint-plugin-node": {
      "packages": {
        "eslint-visitor-keys<eslint-utils<eslint-plugin-node": true
      }
    },
    "espree<eslint": {
      "packages": {
        "acorn-jsx<espree<eslint": true,
        "acorn<jsdom": true,
        "eslint-visitor-keys<eslint": true
      }
    },
    "esquery<eslint": {
      "globals": {
        "define": true
      }
    },
    "esrecurse<eslint-scope<eslint": {
      "packages": {
        "estraverse<eslint-plugin-react": true
      }
    },
    "eta": {
      "builtin": {
        "node:fs": true,
        "node:path": true
      },
      "globals": {
        "define": true
      }
    },
    "event-emitter<memoizee<debug-fabulous<gulp-sourcemaps": {
      "packages": {
        "d<es6-iterator<resolve-url-loader": true,
        "es5-ext<es6-iterator<resolve-url-loader": true
      }
    },
    "event-stream<gulp-livereload": {
      "builtin": {
        "buffer.Buffer.isBuffer": true,
        "stream.Stream": true
      },
      "globals": {
        "Buffer.concat": true,
        "Buffer.isBuffer": true,
        "console.error": true,
        "process.nextTick": true,
        "setImmediate": true
      },
      "packages": {
        "duplexer<debounce-stream": true,
        "from<event-stream<gulp-livereload": true,
        "map-stream<event-stream<gulp-livereload": true,
        "pause-stream<event-stream<gulp-livereload": true,
        "split<event-stream<gulp-livereload": true,
        "stream-combiner<event-stream<gulp-livereload": true,
        "through<debounce-stream": true
      }
    },
    "execall<stylelint": {
      "packages": {
        "clone-regexp<execall<stylelint": true
      }
    },
    "expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "globals": {
        "__filename": true
      },
      "packages": {
        "debug<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "extend-shallow<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "posix-character-classes<expand-brackets<extglob<micromatch<matchdep<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "globals": {
        "__filename": true
      },
      "packages": {
        "debug<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "extend-shallow<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "posix-character-classes<expand-brackets<extglob<micromatch<matchdep<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "expand-brackets<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-posix-bracket<expand-brackets<micromatch<anymatch<gulp-watch": true
      }
    },
    "expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<braces<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<fill-range<braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<fill-range<braces<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<plugin-error<gulp-zip": {
      "packages": {
        "assign-symbols<extend-shallow<plugin-error<gulp-zip": true,
        "is-extendable<extend-shallow<plugin-error<gulp-zip": true
      }
    },
    "extend-shallow<set-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extend-shallow<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "array-unique<braces<chokidar<gulp-watch": true,
        "define-property<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "extend-shallow<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "fragment-cache<micromatch<matchdep<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "array-unique<braces<chokidar<gulp-watch": true,
        "define-property<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "extend-shallow<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "fragment-cache<micromatch<matchdep<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "extglob<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-extglob<micromatch<anymatch<gulp-watch": true
      }
    },
    "fancy-log": {
      "builtin": {
        "console.Console": true
      },
      "globals": {
        "process.argv.indexOf": true,
        "process.platform": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version": true
      },
      "packages": {
        "ansi-gray<fancy-log": true,
        "color-support<fancy-log": true,
        "parse-node-version<fancy-log": true,
        "time-stamp<fancy-log": true
      }
    },
    "fancy-log<gulp-watch": {
      "globals": {
        "console": true,
        "process.argv.indexOf": true,
        "process.stderr.write": true,
        "process.stdout.write": true
      },
      "packages": {
        "ansi-gray<fancy-log": true,
        "color-support<fancy-log": true,
        "time-stamp<fancy-log": true
      }
    },
    "fast-glob": {
      "builtin": {
        "fs.lstat": true,
        "fs.lstatSync": true,
        "fs.readdir": true,
        "fs.readdirSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "os.cpus": true,
        "os.platform": true,
        "path.basename": true,
        "path.resolve": true,
        "stream.PassThrough": true,
        "stream.Readable": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "@nodelib/fs.stat<fast-glob": true,
        "@nodelib/fs.walk<eslint": true,
        "glob-parent<eslint": true,
        "merge2<globby": true,
        "micromatch<fast-glob": true
      }
    },
    "fastq<@nodelib/fs.walk<eslint": {
      "packages": {
        "reusify<fastq<@nodelib/fs.walk<eslint": true
      }
    },
    "faye-websocket<tiny-lr<gulp-livereload": {
      "builtin": {
        "net.connect": true,
        "stream.Stream": true,
        "tls.connect": true,
        "url.parse": true,
        "util.inherits": true
      },
      "globals": {
        "Buffer": true,
        "clearInterval": true,
        "process.nextTick": true,
        "setInterval": true
      },
      "packages": {
        "websocket-driver<faye-websocket<@firebase/database<firebase": true
      }
    },
    "file-entry-cache<eslint": {
      "builtin": {
        "crypto.createHash": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "path.basename": true,
        "path.dirname": true
      },
      "packages": {
        "flat-cache<file-entry-cache<eslint": true
      }
    },
    "file-entry-cache<stylelint": {
      "builtin": {
        "crypto.createHash": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "path.basename": true,
        "path.dirname": true
      },
      "packages": {
        "flat-cache<file-entry-cache<stylelint": true
      }
    },
    "fill-range<braces<chokidar": {
      "builtin": {
        "util.inspect": true
      },
      "packages": {
        "to-regex-range<fill-range<braces<chokidar": true
      }
    },
    "fill-range<braces<chokidar<glob-watcher<gulp": {
      "builtin": {
        "util.inspect": true
      },
      "packages": {
        "extend-shallow<fill-range<braces<chokidar<glob-watcher<gulp": true,
        "is-number<fill-range<braces<chokidar<glob-watcher<gulp": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "to-regex-range<fill-range<braces<chokidar<glob-watcher<gulp": true
      }
    },
    "fill-range<braces<chokidar<gulp-watch": {
      "builtin": {
        "util.inspect": true
      },
      "packages": {
        "extend-shallow<fill-range<braces<chokidar<gulp-watch": true,
        "is-number<fill-range<braces<chokidar<gulp-watch": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "to-regex-range<fill-range<braces<chokidar<gulp-watch": true
      }
    },
    "fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-number<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true,
        "isobject<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true,
        "randomatic<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true,
        "repeat-element<braces<chokidar<gulp-watch": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "find-up<eslint-module-utils<eslint-plugin-import": {
      "builtin": {
        "path.dirname": true,
        "path.join": true,
        "path.parse": true,
        "path.resolve": true
      },
      "packages": {
        "locate-path<find-up<eslint-module-utils<eslint-plugin-import": true
      }
    },
    "find-up<mocha": {
      "builtin": {
        "path.dirname": true,
        "path.parse": true,
        "path.resolve": true
      },
      "packages": {
        "locate-path<find-up<mocha": true,
        "path-exists<find-up<mocha": true
      }
    },
    "first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "Buffer.concat": true,
        "setImmediate": true
      },
      "packages": {
        "readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true
      }
    },
    "flat-cache<file-entry-cache<eslint": {
      "builtin": {
        "fs.existsSync": true,
        "fs.mkdirSync": true,
        "fs.readFileSync": true,
        "fs.writeFileSync": true,
        "path.basename": true,
        "path.dirname": true,
        "path.resolve": true
      },
      "globals": {
        "__dirname": true
      },
      "packages": {
        "flatted<flat-cache<file-entry-cache<eslint": true,
        "rimraf<del": true
      }
    },
    "flat-cache<file-entry-cache<stylelint": {
      "builtin": {
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "path.basename": true,
        "path.dirname": true,
        "path.resolve": true
      },
      "globals": {
        "__dirname": true
      },
      "packages": {
        "flatted<flat-cache<file-entry-cache<stylelint": true,
        "rimraf<flat-cache<file-entry-cache<stylelint": true,
        "write<flat-cache<file-entry-cache<stylelint": true
      }
    },
    "flush-write-stream<lead<vinyl-fs<gulp": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "inherits<pumpify": true,
        "readable-stream<flush-write-stream<lead<vinyl-fs<gulp": true
      }
    },
    "for-own<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "for-in<for-own<object.reduce<undertaker<gulp": true
      }
    },
    "for-own<object.omit<micromatch<anymatch<gulp-watch": {
      "packages": {
        "for-in<for-own<object.reduce<undertaker<gulp": true
      }
    },
    "for-own<object.reduce<undertaker<gulp": {
      "packages": {
        "for-in<for-own<object.reduce<undertaker<gulp": true
      }
    },
    "fragment-cache<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "map-cache<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "from<event-stream<gulp-livereload": {
      "builtin": {
        "stream": true
      },
      "globals": {
        "process.nextTick": true
      }
    },
    "fs-extra": {
      "builtin": {
        "assert": true,
        "fs": true,
        "os.tmpdir": true,
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.normalize": true,
        "path.parse": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "Buffer": true,
        "console.warn": true,
        "process.arch": true,
        "process.cwd": true,
        "process.platform": true,
        "process.umask": true,
        "process.versions.node.split": true,
        "setTimeout": true
      },
      "packages": {
        "graceful-fs<del": true,
        "jsonfile<fs-extra": true,
        "universalify<fs-extra": true
      }
    },
    "fs-mkdirp-stream<vinyl-fs<gulp": {
      "builtin": {
        "path.dirname": true,
        "path.resolve": true
      },
      "globals": {
        "process.umask": true
      },
      "packages": {
        "graceful-fs<del": true,
        "through2<fs-mkdirp-stream<vinyl-fs<gulp": true
      }
    },
    "fs.realpath<glob<mocha": {
      "builtin": {
        "fs.lstat": true,
        "fs.lstatSync": true,
        "fs.readlink": true,
        "fs.readlinkSync": true,
        "fs.realpath": true,
        "fs.realpathSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "path.normalize": true,
        "path.resolve": true
      },
      "globals": {
        "console.error": true,
        "console.trace": true,
        "process.env.NODE_DEBUG": true,
        "process.nextTick": true,
        "process.noDeprecation": true,
        "process.platform": true,
        "process.throwDeprecation": true,
        "process.traceDeprecation": true,
        "process.version": true
      }
    },
    "fsevents<chokidar": {
      "globals": {
        "console.assert": true,
        "process.platform": true
      },
      "native": true
    },
    "fsevents<chokidar<glob-watcher<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.stat": true,
        "path.join": true,
        "util.inherits": true
      },
      "globals": {
        "__dirname": true,
        "console.assert": true,
        "process.nextTick": true,
        "process.platform": true,
        "setImmediate": true
      },
      "packages": {
        "node-pre-gyp<fsevents<chokidar<gulp-watch": true
      }
    },
    "fsevents<chokidar<gulp-watch": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.stat": true,
        "path.join": true,
        "util.inherits": true
      },
      "globals": {
        "__dirname": true,
        "console.assert": true,
        "process.nextTick": true,
        "process.platform": true,
        "setImmediate": true
      },
      "packages": {
        "node-pre-gyp<fsevents<chokidar<gulp-watch": true
      }
    },
    "gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "builtin": {
        "util.format": true
      },
      "globals": {
        "clearInterval": true,
        "process": true,
        "setImmediate": true,
        "setInterval": true
      },
      "packages": {
        "aproba<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "console-control-strings<npmlog<@storybook/node-logger<@storybook/react": true,
        "has-unicode<gauge<npmlog<@storybook/node-logger<@storybook/react": true,
        "object-assign<react": true,
        "signal-exit<nyc": true,
        "string-width<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "strip-ansi<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "wide-align<gauge<npmlog<@storybook/node-logger<@storybook/react": true
      }
    },
    "get-assigned-identifiers<undeclared-identifiers<insert-module-globals<browserify": {
      "builtin": {
        "assert.equal": true
      }
    },
    "get-intrinsic<string.prototype.matchall": {
      "globals": {
        "AggregateError": true,
        "FinalizationRegistry": true,
        "WeakRef": true
      },
      "packages": {
        "es-errors<call-bind<string.prototype.matchall": true,
        "function-bind<has<browserify": true,
        "has-proto<es-abstract<string.prototype.matchall": true,
        "has-symbols<string.prototype.matchall": true,
        "hasown<is-core-module<depcheck": true
      }
    },
    "get-stream<gulp-zip": {
      "builtin": {
        "buffer.constants.MAX_LENGTH": true,
        "stream.PassThrough": true
      },
      "globals": {
        "Buffer.concat": true
      },
      "packages": {
        "pump<pumpify": true
      }
    },
    "glob-base<parse-glob<micromatch<anymatch<gulp-watch": {
      "builtin": {
        "path.dirname": true
      },
      "packages": {
        "glob-parent<eslint": true,
        "is-glob<glob-base<parse-glob<micromatch<anymatch<gulp-watch": true
      }
    },
    "glob-parent<eslint": {
      "builtin": {
        "os.platform": true,
        "path.posix.dirname": true
      },
      "packages": {
        "is-glob<del": true
      }
    },
    "glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.cwd": true,
        "process.nextTick": true
      },
      "packages": {
        "extend<unified<react-markdown": true,
        "glob-parent<eslint": true,
        "glob<browserify": true,
        "is-negated-glob<glob-watcher<gulp": true,
        "ordered-read-streams<glob-stream<vinyl-fs<gulp": true,
        "pumpify<glob-stream<vinyl-fs<gulp": true,
        "readable-stream<glob-stream<vinyl-fs<gulp": true,
        "remove-trailing-separator<vinyl": true,
        "to-absolute-glob<glob-stream<vinyl-fs<gulp": true,
        "unique-stream<glob-stream<vinyl-fs<gulp": true
      }
    },
    "glob-watcher<gulp": {
      "packages": {
        "anymatch<glob-watcher<gulp": true,
        "async-done<glob-watcher<gulp": true,
        "chokidar<glob-watcher<gulp": true,
        "is-negated-glob<glob-watcher<gulp": true,
        "just-debounce<glob-watcher<gulp": true,
        "object.defaults<undertaker<gulp": true
      }
    },
    "glob<browserify": {
      "builtin": {
        "assert": true,
        "events.EventEmitter": true,
        "fs": true,
        "path.join": true,
        "path.resolve": true,
        "util": true
      },
      "globals": {
        "console.error": true,
        "process.cwd": true,
        "process.nextTick": true,
        "process.platform": true
      },
      "packages": {
        "fs.realpath<glob<mocha": true,
        "inflight<glob<mocha": true,
        "inherits<pumpify": true,
        "minimatch<eslint": true,
        "once<@metamask/object-multiplex": true,
        "path-is-absolute<gulp-watch": true
      }
    },
    "global-modules<stylelint": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.env.OSTYPE": true,
        "process.platform": true
      },
      "packages": {
        "global-prefix<global-modules<stylelint": true
      }
    },
    "global-prefix<global-modules<stylelint": {
      "builtin": {
        "fs.readFileSync": true,
        "fs.realpathSync": true,
        "os.homedir": true,
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true
      },
      "globals": {
        "process.env.APPDATA": true,
        "process.env.DESTDIR": true,
        "process.env.OSTYPE": true,
        "process.env.PREFIX": true,
        "process.execPath": true,
        "process.platform": true
      },
      "packages": {
        "ini<global-prefix<global-modules<stylelint": true,
        "which<global-prefix<global-modules<stylelint": true
      }
    },
    "globby": {
      "builtin": {
        "fs.Stats": true,
        "fs.readFile": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.posix.join": true,
        "path.relative": true,
        "stream.Transform": true,
        "util.promisify": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "array-union<globby": true,
        "dir-glob<globby": true,
        "fast-glob": true,
        "ignore<eslint": true,
        "merge2<globby": true,
        "slash<del": true
      }
    },
    "globjoin<stylelint": {
      "builtin": {
        "path.join": true
      }
    },
    "gonzales-pe<postcss-sass<stylelint": {
      "globals": {
        "console.error": true,
        "define": true
      }
    },
    "gopd<es-abstract<string.prototype.matchall": {
      "packages": {
        "get-intrinsic<string.prototype.matchall": true
      }
    },
    "graceful-fs<del": {
      "builtin": {
        "assert.equal": true,
        "constants.O_SYMLINK": true,
        "constants.O_WRONLY": true,
        "constants.hasOwnProperty": true,
        "fs": true,
        "stream.Stream.call": true,
        "util": true
      },
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "process": true,
        "setTimeout": true
      }
    },
    "gulp": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "glob-watcher<gulp": true,
        "undertaker<gulp": true,
        "vinyl-fs<gulp": true
      }
    },
    "gulp-livereload": {
      "builtin": {
        "path.relative": true
      },
      "packages": {
        "chalk<gulp-livereload": true,
        "debug<gulp-livereload": true,
        "event-stream<gulp-livereload": true,
        "fancy-log": true,
        "lodash.assign<gulp-livereload": true,
        "tiny-lr<gulp-livereload": true
      }
    },
    "gulp-postcss": {
      "builtin": {
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "stream.Transform": true
      },
      "globals": {
        "Buffer.from": true,
        "setImmediate": true
      },
      "packages": {
        "fancy-log": true,
        "plugin-error<gulp-zip": true,
        "postcss": true,
        "postcss-load-config<gulp-postcss": true,
        "vinyl-sourcemaps-apply": true
      }
    },
    "gulp-sass": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.relative": true,
        "stream.Transform": true
      },
      "globals": {
        "process.cwd": true,
        "process.exit": true,
        "process.stderr.write": true
      },
      "packages": {
        "lodash.clonedeep<gulp-sass": true,
        "picocolors<postcss": true,
        "plugin-error<gulp-zip": true,
        "replace-ext<gulp-sass": true,
        "strip-ansi<eslint": true,
        "vinyl-sourcemaps-apply": true
      }
    },
    "gulp-sort": {
      "packages": {
        "through2<gulp-sort": true
      }
    },
    "gulp-sourcemaps": {
      "builtin": {
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "Buffer.concat": true,
        "Buffer.from": true
      },
      "packages": {
        "@gulp-sourcemaps/identity-map<gulp-sourcemaps": true,
        "@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "acorn<gulp-sourcemaps": true,
        "convert-source-map<gulp-sourcemaps": true,
        "css<gulp-sourcemaps": true,
        "debug-fabulous<gulp-sourcemaps": true,
        "detect-newline<gulp-sourcemaps": true,
        "graceful-fs<del": true,
        "source-map<gulp-sourcemaps": true,
        "strip-bom-string<gulp-sourcemaps": true,
        "through2<gulp-sourcemaps": true
      }
    },
    "gulp-stylelint": {
      "builtin": {
        "fs.mkdir": true,
        "fs.writeFile": true,
        "path.dirname": true,
        "path.resolve": true
      },
      "globals": {
        "Buffer.from": true,
        "process.cwd": true,
        "process.nextTick": true
      },
      "packages": {
        "fancy-log": true,
        "plugin-error<gulp-zip": true,
        "source-map": true,
        "strip-ansi<eslint": true,
        "stylelint": true,
        "through2<gulp-stylelint": true
      }
    },
    "gulp-watch": {
      "builtin": {
        "path.dirname": true,
        "path.normalize": true,
        "path.resolve": true
      },
      "globals": {
        "process.arch": true,
        "process.cwd": true,
        "process.platform": true,
        "process.version": true,
        "setTimeout": true
      },
      "packages": {
        "ansi-colors<gulp-watch": true,
        "anymatch<gulp-watch": true,
        "chokidar<gulp-watch": true,
        "fancy-log<gulp-watch": true,
        "glob-parent<eslint": true,
        "object-assign<react": true,
        "path-is-absolute<gulp-watch": true,
        "plugin-error<gulp-zip": true,
        "readable-stream<gulp-watch": true,
        "slash<gulp-watch": true,
        "vinyl": true,
        "vinyl-file<gulp-watch": true
      }
    },
    "gulp-zip": {
      "builtin": {
        "buffer.constants.MAX_LENGTH": true,
        "path.join": true
      },
      "packages": {
        "get-stream<gulp-zip": true,
        "plugin-error<gulp-zip": true,
        "through2<gulp-zip": true,
        "vinyl": true,
        "yazl<gulp-zip": true
      }
    },
    "has-flag<supports-color<chalk": {
      "globals": {
        "process.argv": true
      }
    },
    "has-flag<supports-color<chalk<gulp-livereload": {
      "globals": {
        "process.argv": true
      }
    },
    "has-flag<supports-color<mocha": {
      "globals": {
        "process.argv": true
      }
    },
    "has-property-descriptors<es-abstract<string.prototype.matchall": {
      "packages": {
        "get-intrinsic<string.prototype.matchall": true
      }
    },
    "has-tostringtag<is-generator-function<koa": {
      "packages": {
        "has-symbols<string.prototype.matchall": true
      }
    },
    "has-unicode<gauge<npmlog<@storybook/node-logger<@storybook/react": {
      "builtin": {
        "os.type": true
      },
      "globals": {
        "process.env.LANG": true,
        "process.env.LC_ALL": true,
        "process.env.LC_CTYPE": true
      }
    },
    "has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "get-value<array-sort<gulp-cli<gulp": true,
        "has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "get-value<array-sort<gulp-cli<gulp": true,
        "has-values<has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-number<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "kind-of<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "has<browserify": {
      "packages": {
        "function-bind<has<browserify": true
      }
    },
    "hasown<is-core-module<depcheck": {
      "packages": {
        "function-bind<has<browserify": true
      }
    },
    "htmlparser2<postcss-html<stylelint": {
      "builtin": {
        "buffer.Buffer": true,
        "events.EventEmitter": true,
        "string_decoder.StringDecoder": true
      },
      "packages": {
        "domelementtype<htmlparser2<postcss-html<stylelint": true,
        "domhandler<htmlparser2<postcss-html<stylelint": true,
        "domutils<htmlparser2<postcss-html<stylelint": true,
        "entities<htmlparser2<postcss-html<stylelint": true,
        "inherits<pumpify": true,
        "readable-stream": true
      }
    },
    "http-parser-js<websocket-driver<faye-websocket<@firebase/database<firebase": {
      "builtin": {
        "assert.equal": true,
        "assert.ok": true
      }
    },
    "ignore<eslint": {
      "globals": {
        "process": true
      }
    },
    "immutable<sass-embedded": {
      "globals": {
        "console": true,
        "define": true
      }
    },
    "import-fresh<@eslint/eslintrc<eslint": {
      "builtin": {
        "path.dirname": true
      },
      "globals": {
        "__filename": true
      },
      "packages": {
        "parent-module<import-fresh<@eslint/eslintrc<eslint": true,
        "resolve-from<import-fresh<@eslint/eslintrc<eslint": true
      }
    },
    "inflight<glob<mocha": {
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "once<@metamask/object-multiplex": true,
        "wrappy<once<@metamask/object-multiplex": true
      }
    },
    "inherits<pumpify": {
      "builtin": {
        "util.inherits": true
      }
    },
    "ini": {
      "globals": {
        "process": true
      }
    },
    "ini<global-prefix<global-modules<stylelint": {
      "globals": {
        "process": true
      }
    },
    "inline-source-map<combine-source-map<@lavamoat/lavapack": {
      "globals": {
        "Buffer.from": true
      },
      "packages": {
        "source-map<inline-source-map<combine-source-map<@lavamoat/lavapack": true
      }
    },
    "insert-module-globals<browserify": {
      "builtin": {
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.relative": true,
        "path.sep": true
      },
      "globals": {
        "Buffer.concat": true,
        "Buffer.isBuffer": true
      },
      "packages": {
        "acorn-node<syntax-error<browserify": true,
        "combine-source-map<@lavamoat/lavapack": true,
        "path-is-absolute<gulp-watch": true,
        "through2<insert-module-globals<browserify": true,
        "undeclared-identifiers<insert-module-globals<browserify": true,
        "xtend<watchify": true
      }
    },
    "internal-slot<string.prototype.matchall": {
      "packages": {
        "get-intrinsic<string.prototype.matchall": true,
        "hasown<is-core-module<depcheck": true,
        "side-channel<string.prototype.matchall": true
      }
    },
    "is-absolute<replace-homedir<gulp-cli<gulp": {
      "packages": {
        "is-relative<is-absolute<replace-homedir<gulp-cli<gulp": true,
        "is-windows<is-absolute<replace-homedir<gulp-cli<gulp": true
      }
    },
    "is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true
      }
    },
    "is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "kind-of<is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true
      }
    },
    "is-accessor-descriptor<is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "kind-of<clone-deep<@babel/register": true
      }
    },
    "is-accessor-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-data-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "is-alphanumerical<parse-entities<refractor<react-syntax-highlighter": {
      "packages": {
        "is-alphabetical<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-decimal<parse-entities<refractor<react-syntax-highlighter": true
      }
    },
    "is-binary-path<chokidar": {
      "builtin": {
        "path.extname": true
      },
      "packages": {
        "binary-extensions<is-binary-path<chokidar": true
      }
    },
    "is-binary-path<chokidar<glob-watcher<gulp": {
      "builtin": {
        "path.extname": true
      },
      "packages": {
        "binary-extensions<is-binary-path<chokidar<glob-watcher<gulp": true
      }
    },
    "is-binary-path<chokidar<gulp-watch": {
      "builtin": {
        "path.extname": true
      },
      "packages": {
        "binary-extensions<is-binary-path<chokidar<gulp-watch": true
      }
    },
    "is-callable<es-abstract<string.prototype.matchall": {
      "globals": {
        "document": true
      }
    },
    "is-core-module<depcheck": {
      "globals": {
        "process.versions": true
      },
      "packages": {
        "hasown<is-core-module<depcheck": true
      }
    },
    "is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true
      }
    },
    "is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "kind-of<is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true
      }
    },
    "is-data-descriptor<is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "kind-of<clone-deep<@babel/register": true
      }
    },
    "is-data-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-data-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "is-date-object<deep-equal<@metamask/eth-token-tracker": {
      "packages": {
        "has-tostringtag<is-generator-function<koa": true
      }
    },
    "is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "kind-of<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": true
      }
    },
    "is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "kind-of<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": true
      }
    },
    "is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "is-accessor-descriptor<is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "is-data-descriptor<is-descriptor<define-property<micromatch<matchdep<gulp-cli<gulp": true,
        "kind-of<clone-deep<@babel/register": true
      }
    },
    "is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-accessor-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "is-data-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "kind-of<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "is-equal-shallow<regex-cache<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-primitive<is-equal-shallow<regex-cache<micromatch<anymatch<gulp-watch": true
      }
    },
    "is-extendable<extend-shallow<plugin-error<gulp-zip": {
      "packages": {
        "is-plain-object<clone-deep<@babel/register": true
      }
    },
    "is-extendable<mixin-deep<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-plain-object<clone-deep<@babel/register": true
      }
    },
    "is-fullwidth-code-point<string-width<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "packages": {
        "number-is-nan<is-fullwidth-code-point<string-width<yargs<gulp-cli<gulp": true
      }
    },
    "is-glob<del": {
      "packages": {
        "is-extglob<is-glob<del": true
      }
    },
    "is-glob<glob-base<parse-glob<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-extglob<micromatch<anymatch<gulp-watch": true
      }
    },
    "is-glob<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-extglob<micromatch<anymatch<gulp-watch": true
      }
    },
    "is-glob<parse-glob<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-extglob<micromatch<anymatch<gulp-watch": true
      }
    },
    "is-number<fill-range<braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "kind-of<is-number<fill-range<braces<chokidar<glob-watcher<gulp": true
      }
    },
    "is-number<fill-range<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-number<fill-range<braces<chokidar<gulp-watch": true
      }
    },
    "is-number<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "kind-of<is-number<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true
      }
    },
    "is-number<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<is-number<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "is-path-cwd<del": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true,
        "process.platform": true
      }
    },
    "is-path-inside<del": {
      "builtin": {
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true
      }
    },
    "is-plain-object<clone-deep<@babel/register": {
      "packages": {
        "isobject<gulp-cli<gulp": true
      }
    },
    "is-regex<es-abstract<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "has-tostringtag<is-generator-function<koa": true
      }
    },
    "is-relative<is-absolute<replace-homedir<gulp-cli<gulp": {
      "packages": {
        "is-unc-path<is-relative<is-absolute<replace-homedir<gulp-cli<gulp": true
      }
    },
    "is-string<array-includes<eslint-plugin-react": {
      "packages": {
        "has-tostringtag<is-generator-function<koa": true
      }
    },
    "is-symbol<es-to-primitive<es-abstract<string.prototype.matchall": {
      "packages": {
        "has-symbols<string.prototype.matchall": true
      }
    },
    "is-unc-path<is-relative<is-absolute<replace-homedir<gulp-cli<gulp": {
      "packages": {
        "unc-path-regex<is-unc-path<is-relative<is-absolute<replace-homedir<gulp-cli<gulp": true
      }
    },
    "is-unicode-supported<log-symbols<mocha": {
      "globals": {
        "process.env.CI": true,
        "process.env.TERM": true,
        "process.env.TERM_PROGRAM": true,
        "process.env.WT_SESSION": true,
        "process.platform": true
      }
    },
    "is-windows<is-absolute<replace-homedir<gulp-cli<gulp": {
      "globals": {
        "define": true,
        "isWindows": "write",
        "process": true
      }
    },
    "isexe<which<@sentry/cli": {
      "builtin": {
        "fs": true
      },
      "globals": {
        "TESTING_WINDOWS": true,
        "process.env.PATHEXT": true,
        "process.getgid": true,
        "process.getuid": true,
        "process.platform": true
      }
    },
    "isobject<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "isarray<isobject<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true
      }
    },
    "isobject<has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "isarray<isobject<has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "jsdoc-type-pratt-parser<@es-joy/jsdoccomment<eslint-plugin-jsdoc": {
      "globals": {
        "define": true
      }
    },
    "jsesc<@babel/generator<@babel/core": {
      "globals": {
        "Buffer.isBuffer": true
      }
    },
    "json-parse-even-better-errors<webpack": {
      "globals": {
        "Buffer.isBuffer": true
      }
    },
    "json-stable-stringify<@lavamoat/lavapack": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "isarray<json-stable-stringify<@lavamoat/lavapack": true,
        "jsonify<json-stable-stringify<lavamoat": true,
        "object-keys<json-stable-stringify<@lavamoat/lavapack": true
      }
    },
    "json5<depcheck": {
      "globals": {
        "console.warn": true
      }
    },
    "json5<tsconfig-paths<eslint-plugin-import": {
      "globals": {
        "console.warn": true
      }
    },
    "jsonfile<fs-extra": {
      "builtin": {
        "fs": true
      },
      "globals": {
        "Buffer.isBuffer": true
      },
      "packages": {
        "graceful-fs<del": true
      }
    },
    "jsonparse<JSONStream<browserify": {
      "globals": {
        "Buffer": true
      }
    },
    "JSONStream<browserify": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "jsonparse<JSONStream<browserify": true,
        "through<debounce-stream": true
      }
    },
    "jsx-ast-utils<eslint-plugin-react": {
      "globals": {
        "console.error": true
      },
      "packages": {
        "object.assign<vinyl-fs<gulp": true
      }
    },
    "just-debounce<glob-watcher<gulp": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      }
    },
    "kind-of<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-accessor-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-data-descriptor<is-descriptor<define-property<expand-brackets<extglob<micromatch<anymatch<glob-watcher<gulp": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-data-descriptor<is-descriptor<define-property<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-number<fill-range<braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-number<fill-range<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-number<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<is-number<has-values<has-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<object-copy<static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<snapdragon-util<snapdragon-node<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "kind-of<to-object-path<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true
      }
    },
    "labeled-stream-splicer": {
      "packages": {
        "inherits<pumpify": true,
        "stream-splicer<labeled-stream-splicer": true
      }
    },
    "last-run<undertaker<gulp": {
      "builtin": {
        "assert": true
      },
      "packages": {
        "default-resolution<last-run<undertaker<gulp": true,
        "es6-weak-map<undertaker<gulp": true
      }
    },
    "lavamoat-browserify": {
      "builtin": {
        "fs.existsSync": true,
        "fs.mkdirSync": true,
        "fs.readFileSync": true,
        "fs.writeFileSync": true,
        "path.dirname": true,
        "path.extname": true,
        "path.resolve": true,
        "util.callbackify": true
      },
      "globals": {
        "console.warn": true,
        "process.cwd": true,
        "setTimeout": true
      },
      "packages": {
        "@lavamoat/aa<lavamoat": true,
        "@lavamoat/lavapack": true,
        "browser-resolve<browserify": true,
        "concat-stream<lavamoat-browserify": true,
        "duplexify": true,
        "json-stable-stringify<@lavamoat/lavapack": true,
        "lavamoat-core<lavamoat-viz": true,
        "readable-stream": true,
        "through2": true
      }
    },
    "lavamoat-core<lavamoat-viz": {
      "builtin": {
        "node:events": true,
        "node:fs.readFileSync": true,
        "node:fs/promises.writeFile": true,
        "node:path.extname": true,
        "node:path.join": true
      },
      "globals": {
        "__dirname": true,
        "console.error": true,
        "console.warn": true,
        "define": true
      },
      "packages": {
        "json-stable-stringify<@lavamoat/lavapack": true,
        "lavamoat-tofu<lavamoat-core<lavamoat-viz": true,
        "merge-deep<lavamoat-core<lavamoat": true
      }
    },
    "lavamoat-tofu<lavamoat-core<lavamoat-viz": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "@babel/parser<lavamoat-tofu<lavamoat-core<lavamoat-viz": true,
        "@babel/traverse<lavamoat-tofu<lavamoat-core<lavamoat-viz": true
      }
    },
    "lazy-cache<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "globals": {
        "process.env.TRAVIS": true,
        "process.env.UNLAZY": true
      }
    },
    "lazy-cache<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "globals": {
        "process.env.UNLAZY": true
      }
    },
    "lazystream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "readable-stream<lazystream<vinyl-fs<gulp": true
      }
    },
    "lead<vinyl-fs<gulp": {
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "flush-write-stream<lead<vinyl-fs<gulp": true
      }
    },
    "levn<eslint": {
      "packages": {
        "prelude-ls<levn<eslint": true,
        "type-check<levn<eslint": true
      }
    },
    "lilconfig<postcss-load-config<gulp-postcss": {
      "builtin": {
        "fs.accessSync": true,
        "fs.promises.access": true,
        "fs.promises.readFile": true,
        "fs.readFileSync": true,
        "os.homedir": true,
        "path.extname": true,
        "path.join": true,
        "path.parse": true,
        "path.resolve": true,
        "path.sep": true
      },
      "globals": {
        "process.cwd": true
      }
    },
    "locate-path<find-up<eslint-module-utils<eslint-plugin-import": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "p-locate<locate-path<find-up<eslint-module-utils<eslint-plugin-import": true,
        "path-exists<locate-path<find-up<eslint-module-utils<eslint-plugin-import": true
      }
    },
    "locate-path<find-up<mocha": {
      "builtin": {
        "fs.lstat": true,
        "fs.lstatSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "path.resolve": true,
        "util.promisify": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "p-locate<locate-path<find-up<mocha": true
      }
    },
    "lodash": {
      "globals": {
        "define": true
      }
    },
    "lodash.debounce<@babel/helper-define-polyfill-provider<babel-plugin-polyfill-corejs2<@babel/preset-env": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      }
    },
    "log-symbols<mocha": {
      "packages": {
        "chalk": true,
        "is-unicode-supported<log-symbols<mocha": true
      }
    },
    "loose-envify": {
      "builtin": {
        "stream.PassThrough": true,
        "stream.Transform": true,
        "util.inherits": true
      },
      "globals": {
        "process.env": true
      },
      "packages": {
        "js-tokens<loose-envify": true
      }
    },
    "lru-cache<@babel/helper-compilation-targets<@babel/core": {
      "packages": {
        "yallist<lru-cache<@babel/helper-compilation-targets<@babel/core": true
      }
    },
    "lru-queue<memoizee<debug-fabulous<gulp-sourcemaps": {
      "packages": {
        "es5-ext<es6-iterator<resolve-url-loader": true
      }
    },
    "make-iterator<arr-map<undertaker<gulp": {
      "packages": {
        "kind-of<clone-deep<@babel/register": true
      }
    },
    "map-stream<event-stream<gulp-livereload": {
      "builtin": {
        "stream.Stream": true
      },
      "globals": {
        "process.nextTick": true
      }
    },
    "map-visit<collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "util.inspect": true
      },
      "packages": {
        "object-visit<collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "markdown-table<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "math-random<randomatic<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "builtin": {
        "crypto.randomBytes": true
      }
    },
    "mdast-util-compact<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "unist-util-visit<react-markdown": true
      }
    },
    "memoizee<debug-fabulous<gulp-sourcemaps": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      },
      "packages": {
        "d<es6-iterator<resolve-url-loader": true,
        "es5-ext<es6-iterator<resolve-url-loader": true,
        "event-emitter<memoizee<debug-fabulous<gulp-sourcemaps": true,
        "is-promise<memoizee<debug-fabulous<gulp-sourcemaps": true,
        "lru-queue<memoizee<debug-fabulous<gulp-sourcemaps": true,
        "next-tick<memoizee<debug-fabulous<gulp-sourcemaps": true,
        "timers-ext<memoizee<debug-fabulous<gulp-sourcemaps": true
      }
    },
    "merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "arr-union<plugin-error<gulp-zip": true,
        "clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "kind-of<merge-deep<lavamoat-core<lavamoat": true
      }
    },
    "merge2<globby": {
      "builtin": {
        "stream.PassThrough": true
      },
      "globals": {
        "process.nextTick": true
      }
    },
    "micromatch<anymatch<chokidar<gulp-watch": {
      "builtin": {
        "path.basename": true,
        "path.sep": true,
        "util.inspect": true
      },
      "globals": {
        "process.platform": true
      },
      "packages": {
        "arr-diff<plugin-error<gulp-zip": true,
        "array-unique<braces<chokidar<gulp-watch": true,
        "braces<chokidar<gulp-watch": true,
        "define-property<micromatch<anymatch<chokidar<gulp-watch": true,
        "extend-shallow<plugin-error<gulp-zip": true,
        "extglob<micromatch<anymatch<chokidar<gulp-watch": true,
        "fragment-cache<micromatch<matchdep<gulp-cli<gulp": true,
        "kind-of<clone-deep<@babel/register": true,
        "nanomatch<micromatch<matchdep<gulp-cli<gulp": true,
        "object.pick<fined<liftoff<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "micromatch<anymatch<glob-watcher<gulp": {
      "builtin": {
        "path.basename": true,
        "path.sep": true,
        "util.inspect": true
      },
      "globals": {
        "process.platform": true
      },
      "packages": {
        "arr-diff<plugin-error<gulp-zip": true,
        "array-unique<braces<chokidar<gulp-watch": true,
        "braces<chokidar<glob-watcher<gulp": true,
        "define-property<micromatch<anymatch<glob-watcher<gulp": true,
        "extend-shallow<plugin-error<gulp-zip": true,
        "extglob<micromatch<anymatch<glob-watcher<gulp": true,
        "fragment-cache<micromatch<matchdep<gulp-cli<gulp": true,
        "kind-of<clone-deep<@babel/register": true,
        "nanomatch<micromatch<matchdep<gulp-cli<gulp": true,
        "object.pick<fined<liftoff<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "micromatch<anymatch<gulp-watch": {
      "builtin": {
        "path.sep": true
      },
      "globals": {
        "process": true
      },
      "packages": {
        "arr-diff<micromatch<anymatch<gulp-watch": true,
        "array-unique<micromatch<anymatch<gulp-watch": true,
        "braces<micromatch<anymatch<gulp-watch": true,
        "expand-brackets<micromatch<anymatch<gulp-watch": true,
        "extglob<micromatch<anymatch<gulp-watch": true,
        "filename-regex<micromatch<anymatch<gulp-watch": true,
        "is-extglob<micromatch<anymatch<gulp-watch": true,
        "is-glob<micromatch<anymatch<gulp-watch": true,
        "kind-of<micromatch<anymatch<gulp-watch": true,
        "normalize-path<anymatch<gulp-watch": true,
        "object.omit<micromatch<anymatch<gulp-watch": true,
        "parse-glob<micromatch<anymatch<gulp-watch": true,
        "regex-cache<micromatch<anymatch<gulp-watch": true
      }
    },
    "micromatch<fast-glob": {
      "builtin": {
        "util.inspect": true
      },
      "packages": {
        "braces<chokidar": true,
        "picomatch<anymatch<chokidar": true
      }
    },
    "minimatch<eslint": {
      "builtin": {
        "path": true
      },
      "globals": {
        "console": true
      },
      "packages": {
        "brace-expansion<minimatch<eslint": true
      }
    },
    "mixin-deep<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "for-in<for-own<object.reduce<undertaker<gulp": true,
        "is-extendable<mixin-deep<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "mixin-object<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "for-in<mixin-object<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "mkdirp<portfinder<mockttp": {
      "builtin": {
        "fs": true,
        "path.dirname": true,
        "path.resolve": true
      }
    },
    "module-deps<browserify": {
      "builtin": {
        "fs.createReadStream": true,
        "fs.readFile": true,
        "path.delimiter": true,
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true,
        "process.env.NODE_PATH": true,
        "process.nextTick": true,
        "process.platform": true,
        "setTimeout": true,
        "tr": true
      },
      "packages": {
        "browser-resolve<browserify": true,
        "cached-path-relative<browserify": true,
        "concat-stream<browserify": true,
        "defined<watchify": true,
        "detective<module-deps<browserify": true,
        "duplexer2<browserify": true,
        "inherits<pumpify": true,
        "loose-envify": true,
        "parents<browserify": true,
        "readable-stream<module-deps<browserify": true,
        "resolve<depcheck": true,
        "stream-combiner2<module-deps<browserify": true,
        "through2<module-deps<browserify": true,
        "xtend<watchify": true
      }
    },
    "nanomatch<micromatch<matchdep<gulp-cli<gulp": {
      "builtin": {
        "path.basename": true,
        "path.sep": true,
        "util.inspect": true
      },
      "packages": {
        "arr-diff<plugin-error<gulp-zip": true,
        "array-unique<braces<chokidar<gulp-watch": true,
        "define-property<nanomatch<micromatch<matchdep<gulp-cli<gulp": true,
        "extend-shallow<plugin-error<gulp-zip": true,
        "fragment-cache<micromatch<matchdep<gulp-cli<gulp": true,
        "is-windows<is-absolute<replace-homedir<gulp-cli<gulp": true,
        "kind-of<clone-deep<@babel/register": true,
        "object.pick<fined<liftoff<gulp-cli<gulp": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "snapdragon<braces<chokidar<gulp-watch": true,
        "to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "next-tick<memoizee<debug-fabulous<gulp-sourcemaps": {
      "globals": {
        "MutationObserver": true,
        "WebKitMutationObserver": true,
        "document": true,
        "process": true,
        "setImmediate": true,
        "setTimeout": true
      }
    },
    "node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "fs.renameSync": true,
        "path.dirname": true,
        "path.existsSync": true,
        "path.join": true,
        "path.resolve": true,
        "url.parse": true,
        "url.resolve": true,
        "util.inherits": true
      },
      "globals": {
        "__dirname": true,
        "console.log": true,
        "process.arch": true,
        "process.cwd": true,
        "process.env": true,
        "process.platform": true,
        "process.version.substr": true,
        "process.versions": true
      },
      "packages": {
        "detect-libc<node-pre-gyp<fsevents<chokidar<gulp-watch": true,
        "nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": true,
        "npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "rimraf<node-pre-gyp<fsevents<chokidar<gulp-watch": true,
        "semver<node-pre-gyp<fsevents<chokidar<gulp-watch": true
      }
    },
    "node-sass": {
      "native": true
    },
    "nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "builtin": {
        "path": true,
        "stream.Stream": true,
        "url": true
      },
      "globals": {
        "console": true,
        "process.argv": true,
        "process.env.DEBUG_NOPT": true,
        "process.env.NOPT_DEBUG": true,
        "process.platform": true
      },
      "packages": {
        "abbrev<nopt<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "osenv<nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": true
      }
    },
    "normalize-path<@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "packages": {
        "remove-trailing-separator<vinyl": true
      }
    },
    "normalize-path<anymatch<chokidar<gulp-watch": {
      "packages": {
        "remove-trailing-separator<vinyl": true
      }
    },
    "normalize-path<anymatch<glob-watcher<gulp": {
      "packages": {
        "remove-trailing-separator<vinyl": true
      }
    },
    "normalize-path<anymatch<gulp-watch": {
      "packages": {
        "remove-trailing-separator<vinyl": true
      }
    },
    "normalize-path<vinyl-sourcemap<vinyl-fs<gulp": {
      "packages": {
        "remove-trailing-separator<vinyl": true
      }
    },
    "normalize-selector<stylelint": {
      "globals": {
        "define": true
      }
    },
    "now-and-later<vinyl-sourcemap<vinyl-fs<gulp": {
      "packages": {
        "once<@metamask/object-multiplex": true
      }
    },
    "npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "builtin": {
        "events.EventEmitter": true,
        "util": true
      },
      "globals": {
        "process.nextTick": true,
        "process.stderr": true
      },
      "packages": {
        "are-we-there-yet<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "console-control-strings<npmlog<@storybook/node-logger<@storybook/react": true,
        "gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "set-blocking<yargs<nyc": true
      }
    },
    "object-copy<static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "copy-descriptor<object-copy<static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": true,
        "define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "kind-of<object-copy<static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "object-inspect<es-abstract<string.prototype.matchall": {
      "builtin": {
        "util.inspect": true
      },
      "globals": {
        "HTMLElement": true,
        "WeakRef": true
      }
    },
    "object-visit<collection-visit<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "isobject<gulp-cli<gulp": true
      }
    },
    "object.assign<vinyl-fs<gulp": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "has-symbols<string.prototype.matchall": true,
        "object-keys<json-stable-stringify<@lavamoat/lavapack": true
      }
    },
    "object.defaults<undertaker<gulp": {
      "packages": {
        "array-each<bach<undertaker<gulp": true,
        "array-slice<object.defaults<undertaker<gulp": true,
        "for-own<object.reduce<undertaker<gulp": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "object.entries<eslint-plugin-react": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true
      }
    },
    "object.fromentries<eslint-plugin-react": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true
      }
    },
    "object.hasown<eslint-plugin-react": {
      "packages": {
        "es-abstract<string.prototype.matchall": true
      }
    },
    "object.omit<micromatch<anymatch<gulp-watch": {
      "packages": {
        "for-own<object.omit<micromatch<anymatch<gulp-watch": true,
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true
      }
    },
    "object.pick<fined<liftoff<gulp-cli<gulp": {
      "packages": {
        "isobject<gulp-cli<gulp": true
      }
    },
    "object.reduce<undertaker<gulp": {
      "packages": {
        "for-own<object.reduce<undertaker<gulp": true,
        "make-iterator<arr-map<undertaker<gulp": true
      }
    },
    "once<@metamask/object-multiplex": {
      "packages": {
        "wrappy<once<@metamask/object-multiplex": true
      }
    },
    "ordered-read-streams<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": true
      }
    },
    "os-homedir<untildify<default-browser-id<x-default-browser<@storybook/core-server<@storybook/core": {
      "builtin": {
        "os.homedir": true
      },
      "globals": {
        "process.env": true,
        "process.getuid": true,
        "process.platform": true
      }
    },
    "os-tmpdir<osenv<nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "globals": {
        "process.env.SystemRoot": true,
        "process.env.TEMP": true,
        "process.env.TMP": true,
        "process.env.TMPDIR": true,
        "process.env.windir": true,
        "process.platform": true
      }
    },
    "osenv<nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "builtin": {
        "child_process.exec": true,
        "path": true
      },
      "globals": {
        "process.env.COMPUTERNAME": true,
        "process.env.ComSpec": true,
        "process.env.EDITOR": true,
        "process.env.HOSTNAME": true,
        "process.env.PATH": true,
        "process.env.PROMPT": true,
        "process.env.PS1": true,
        "process.env.Path": true,
        "process.env.SHELL": true,
        "process.env.USER": true,
        "process.env.USERDOMAIN": true,
        "process.env.USERNAME": true,
        "process.env.VISUAL": true,
        "process.env.path": true,
        "process.nextTick": true,
        "process.platform": true
      },
      "packages": {
        "os-homedir<untildify<default-browser-id<x-default-browser<@storybook/core-server<@storybook/core": true,
        "os-tmpdir<osenv<nopt<node-pre-gyp<fsevents<chokidar<gulp-watch": true
      }
    },
    "p-limit<jest-circus<@storybook/test-runner": {
      "packages": {
        "yocto-queue<p-limit<jest-circus<@storybook/test-runner": true
      }
    },
    "p-limit<p-locate<locate-path<find-up<eslint-module-utils<eslint-plugin-import": {
      "packages": {
        "p-try<p-limit<p-locate<locate-path<find-up<eslint-module-utils<eslint-plugin-import": true
      }
    },
    "p-locate<locate-path<find-up<eslint-module-utils<eslint-plugin-import": {
      "packages": {
        "p-limit<p-locate<locate-path<find-up<eslint-module-utils<eslint-plugin-import": true
      }
    },
    "p-locate<locate-path<find-up<mocha": {
      "packages": {
        "p-limit<jest-circus<@storybook/test-runner": true
      }
    },
    "p-map<del": {
      "packages": {
        "aggregate-error<p-map<del": true
      }
    },
    "parent-module<import-fresh<@eslint/eslintrc<eslint": {
      "packages": {
        "callsites<ow<@metamask/test-bundler": true
      }
    },
    "parents<browserify": {
      "globals": {
        "process.cwd": true,
        "process.platform": true
      },
      "packages": {
        "path-platform<parents<browserify": true
      }
    },
    "parse-entities<refractor<react-syntax-highlighter": {
      "packages": {
        "character-entities-legacy<parse-entities<refractor<react-syntax-highlighter": true,
        "character-entities<parse-entities<refractor<react-syntax-highlighter": true,
        "character-reference-invalid<parse-entities<refractor<react-syntax-highlighter": true,
        "is-alphanumerical<parse-entities<refractor<react-syntax-highlighter": true,
        "is-decimal<parse-entities<refractor<react-syntax-highlighter": true,
        "is-hexadecimal<parse-entities<refractor<react-syntax-highlighter": true
      }
    },
    "parse-glob<micromatch<anymatch<gulp-watch": {
      "packages": {
        "glob-base<parse-glob<micromatch<anymatch<gulp-watch": true,
        "is-dotfile<parse-glob<micromatch<anymatch<gulp-watch": true,
        "is-extglob<micromatch<anymatch<gulp-watch": true,
        "is-glob<parse-glob<micromatch<anymatch<gulp-watch": true
      }
    },
    "parse-json<cosmiconfig<depcheck": {
      "packages": {
        "@babel/code-frame": true,
        "error-ex<parse-json<cosmiconfig<depcheck": true,
        "json-parse-even-better-errors<webpack": true,
        "lines-and-columns<parse-json<cosmiconfig<depcheck": true
      }
    },
    "path-exists<find-up<mocha": {
      "builtin": {
        "fs.access": true,
        "fs.accessSync": true,
        "util.promisify": true
      }
    },
    "path-exists<locate-path<find-up<eslint-module-utils<eslint-plugin-import": {
      "builtin": {
        "fs.access": true,
        "fs.accessSync": true
      }
    },
    "path-is-absolute<gulp-watch": {
      "globals": {
        "process.platform": true
      }
    },
    "path-key<cross-spawn": {
      "globals": {
        "process.env": true,
        "process.platform": true
      }
    },
    "path-parse<resolve<depcheck": {
      "globals": {
        "process.platform": true
      }
    },
    "path-platform<parents<browserify": {
      "builtin": {
        "path": true,
        "util.isObject": true,
        "util.isString": true
      },
      "globals": {
        "process.cwd": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "path-type<dir-glob<globby": {
      "builtin": {
        "fs": true,
        "util.promisify": true
      }
    },
    "pause-stream<event-stream<gulp-livereload": {
      "packages": {
        "through<debounce-stream": true
      }
    },
    "picocolors<postcss": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<@gulp-sourcemaps/identity-map<gulp-sourcemaps": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<postcss-less<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<postcss-safe-parser<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<postcss-sass<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<postcss-scss<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picocolors<postcss<sugarss<stylelint": {
      "builtin": {
        "tty.isatty": true
      },
      "globals": {
        "process.argv.includes": true,
        "process.env": true,
        "process.platform": true
      }
    },
    "picomatch<anymatch<chokidar": {
      "builtin": {
        "path.basename": true,
        "path.sep": true
      },
      "globals": {
        "process.platform": true,
        "process.version.slice": true
      }
    },
    "pinkie-promise<globby<gh-pages": {
      "packages": {
        "pinkie<pinkie-promise<globby<gh-pages": true
      }
    },
    "pinkie<pinkie-promise<globby<gh-pages": {
      "globals": {
        "process": true,
        "setImmediate": true,
        "setTimeout": true
      }
    },
    "plugin-error<gulp-zip": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "ansi-colors<gulp-watch": true,
        "arr-diff<plugin-error<gulp-zip": true,
        "arr-union<plugin-error<gulp-zip": true,
        "extend-shallow<plugin-error<gulp-zip": true
      }
    },
    "postcss": {
      "builtin": {
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true,
        "url.fileURLToPath": true,
        "url.pathToFileURL": true
      },
      "globals": {
        "Buffer": true,
        "URL": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.LANG": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "nanoid<postcss": true,
        "picocolors<postcss": true,
        "source-map-js<postcss": true
      }
    },
    "postcss-html<stylelint": {
      "globals": {
        "__dirname": true
      },
      "packages": {
        "htmlparser2<postcss-html<stylelint": true,
        "postcss-syntax<stylelint": true
      }
    },
    "postcss-less<stylelint": {
      "packages": {
        "postcss<postcss-less<stylelint": true
      }
    },
    "postcss-load-config<gulp-postcss": {
      "builtin": {
        "module.createRequire": true,
        "module.createRequireFromPath": true,
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "lilconfig<postcss-load-config<gulp-postcss": true,
        "ts-node": true,
        "yaml<postcss-load-config<gulp-postcss": true
      }
    },
    "postcss-reporter<stylelint": {
      "packages": {
        "lodash": true
      }
    },
    "postcss-rtlcss": {
      "globals": {
        "SuppressedError": true
      },
      "packages": {
        "postcss": true,
        "rtlcss<postcss-rtlcss": true
      }
    },
    "postcss-safe-parser<stylelint": {
      "packages": {
        "postcss<postcss-safe-parser<stylelint": true
      }
    },
    "postcss-sass<stylelint": {
      "packages": {
        "gonzales-pe<postcss-sass<stylelint": true,
        "postcss<postcss-sass<stylelint": true
      }
    },
    "postcss-scss<stylelint": {
      "packages": {
        "postcss<postcss-scss<stylelint": true
      }
    },
    "postcss-selector-parser<stylelint": {
      "packages": {
        "cssesc<postcss-selector-parser<stylelint": true,
        "util-deprecate<readable-stream": true
      }
    },
    "postcss-syntax<stylelint": {
      "builtin": {
        "path.isAbsolute": true,
        "path.resolve": true,
        "path.sep": true
      },
      "packages": {
        "postcss<stylelint": true
      }
    },
    "postcss<@gulp-sourcemaps/identity-map<gulp-sourcemaps": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true,
        "source-map<@gulp-sourcemaps/identity-map<gulp-sourcemaps": true
      }
    },
    "postcss<postcss-less<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<postcss-less<stylelint": true,
        "source-map<postcss<postcss-less<stylelint": true
      }
    },
    "postcss<postcss-safe-parser<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<postcss-safe-parser<stylelint": true,
        "source-map<postcss<postcss-safe-parser<stylelint": true
      }
    },
    "postcss<postcss-sass<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<postcss-sass<stylelint": true,
        "source-map<postcss<postcss-sass<stylelint": true
      }
    },
    "postcss<postcss-scss<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<postcss-scss<stylelint": true,
        "source-map<postcss<postcss-scss<stylelint": true
      }
    },
    "postcss<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<stylelint": true,
        "source-map<postcss<stylelint": true
      }
    },
    "postcss<sugarss<stylelint": {
      "builtin": {
        "fs": true,
        "path": true
      },
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "picocolors<postcss<sugarss<stylelint": true,
        "source-map<postcss<sugarss<stylelint": true
      }
    },
    "prettier": {
      "builtin": {
        "assert": true,
        "events.EventEmitter": true,
        "fs": true,
        "module._nodeModulePaths": true,
        "module._resolveFilename": true,
        "os": true,
        "path": true,
        "stream.PassThrough": true,
        "stream.Readable": true,
        "util.inherits": true,
        "util.inspect": true,
        "util.promisify": true
      },
      "globals": {
        "ANONYMOUS": true,
        "Buffer": true,
        "BuilderFileEmit": true,
        "BuilderProgramKind": true,
        "BuilderState": true,
        "CheckMode": true,
        "ClassificationType": true,
        "ClassificationTypeNames": true,
        "CompletionInfoFlags": true,
        "CompletionTriggerKind": true,
        "ConfigFileProgramReloadLevel": true,
        "CoreServicesShimHostAdapter": true,
        "DocumentHighlights": true,
        "Element": true,
        "EndOfLineState": true,
        "ExportKind": true,
        "FileSystemEntryKind": true,
        "FileWatcherEventKind": true,
        "FlattenLevel": true,
        "ForegroundColorEscapeSequences": true,
        "HTMLElement": true,
        "HighlightSpanKind": true,
        "ImportKind": true,
        "IndentStyle": true,
        "InlayHintKind": true,
        "Intl": true,
        "InvalidatedProjectKind": true,
        "LanguageServiceMode": true,
        "LanguageServiceShimHostAdapter": true,
        "ModuleInstanceState": true,
        "NodeResolutionFeatures": true,
        "OrganizeImportsMode": true,
        "OutliningSpanKind": true,
        "OutputFileType": true,
        "PackageJsonAutoImportPreference": true,
        "PackageJsonDependencyGroup": true,
        "PatternMatchKind": true,
        "PollingInterval": true,
        "PrivateIdentifierKind": true,
        "ProcessLevel": true,
        "QuotePreference": true,
        "SVGElement": true,
        "ScriptElementKind": true,
        "ScriptElementKindModifier": true,
        "ScriptSnapshot": true,
        "SemanticClassificationFormat": true,
        "SemanticMeaning": true,
        "SemicolonPreference": true,
        "SignatureCheckMode": true,
        "SymbolDisplayPartKind": true,
        "TokenClass": true,
        "TypeFacts": true,
        "TypeScriptServicesFactory": true,
        "UpToDateStatusType": true,
        "Version": true,
        "VersionRange": true,
        "WatchLogLevel": true,
        "WatchType": true,
        "WorkerGlobalScope": true,
        "YAML_SILENCE_DEPRECATION_WARNINGS": true,
        "YAML_SILENCE_WARNINGS": true,
        "__dirname": true,
        "__filename": true,
        "accessPrivateIdentifier": true,
        "addEmitFlags": true,
        "addEmitHelper": true,
        "addEmitHelpers": true,
        "addInternalEmitFlags": true,
        "addSyntheticLeadingComment": true,
        "addSyntheticTrailingComment": true,
        "advancedAsyncSuperHelper": true,
        "affectsDeclarationPathOptionDeclarations": true,
        "affectsEmitOptionDeclarations": true,
        "allKeysStartWithDot": true,
        "assertDoc": true,
        "assignHelper": true,
        "asyncDelegator": true,
        "asyncGeneratorHelper": true,
        "asyncSuperHelper": true,
        "asyncValues": true,
        "atob": true,
        "awaitHelper": true,
        "awaiterHelper": true,
        "bindSourceFile": true,
        "breakIntoCharacterSpans": true,
        "breakIntoWordSpans": true,
        "btoa": true,
        "buildLinkParts": true,
        "buildOpts": true,
        "buildOverload": true,
        "bundlerModuleNameResolver": true,
        "canBeConvertedToAsync": true,
        "canJsonReportNoInputFiles": true,
        "canProduceDiagnostics": true,
        "canWatchDirectoryOrFile": true,
        "chainBundle": true,
        "changeCompilerHostLikeToUseCache": true,
        "classPrivateFieldGetHelper": true,
        "classPrivateFieldInHelper": true,
        "classPrivateFieldSetHelper": true,
        "classicNameResolver": true,
        "cleanExtendedConfigCache": true,
        "clearSharedExtendedConfigFileWatcher": true,
        "clearTimeout": true,
        "climbPastPropertyAccess": true,
        "climbPastPropertyOrElementAccess": true,
        "cloneCompilerOptions": true,
        "closeFileWatcherOf": true,
        "collectExternalModuleInfo": true,
        "commonOptionsWithBuild": true,
        "compareEmitHelpers": true,
        "comparePatternKeys": true,
        "compileOnSaveCommandLineOption": true,
        "compilerOptionsDidYouMeanDiagnostics": true,
        "compilerOptionsIndicateEsModules": true,
        "computeCommonSourceDirectoryOfFilenames": true,
        "computeSignature": true,
        "computeSignatureWithDiagnostics": true,
        "computeSuggestionDiagnostics": true,
        "console": true,
        "consumesNodeCoreModules": true,
        "convertCompilerOptionsForTelemetry": true,
        "convertCompilerOptionsFromJson": true,
        "convertJsonOption": true,
        "convertToObject": true,
        "convertToObjectWorker": true,
        "convertToOptionsWithAbsolutePaths": true,
        "convertToTSConfig": true,
        "convertTypeAcquisitionFromJson": true,
        "copyComments": true,
        "copyLeadingComments": true,
        "copyTrailingAsLeadingComments": true,
        "copyTrailingComments": true,
        "createAbstractBuilder": true,
        "createBindingHelper": true,
        "createBuildInfo": true,
        "createBuilderProgram": true,
        "createBuilderProgramUsingProgramBuildInfo": true,
        "createBuilderStatusReporter": true,
        "createCacheWithRedirects": true,
        "createCacheableExportInfoMap": true,
        "createCachedDirectoryStructureHost": true,
        "createClassifier": true,
        "createCompilerDiagnosticForInvalidCustomType": true,
        "createCompilerHost": true,
        "createCompilerHostFromProgramHost": true,
        "createCompilerHostWorker": true,
        "createDiagnosticReporter": true,
        "createDocumentPositionMapper": true,
        "createDocumentRegistry": true,
        "createDocumentRegistryInternal": true,
        "createEmitAndSemanticDiagnosticsBuilderProgram": true,
        "createEmitHelperFactory": true,
        "createGetSourceFile": true,
        "createGetSymbolAccessibilityDiagnosticForNode": true,
        "createGetSymbolAccessibilityDiagnosticForNodeName": true,
        "createGetSymbolWalker": true,
        "createIncrementalCompilerHost": true,
        "createIncrementalProgram": true,
        "createModeAwareCache": true,
        "createModeAwareCacheKey": true,
        "createModuleResolutionCache": true,
        "createModuleResolutionLoader": true,
        "createModuleSpecifierResolutionHost": true,
        "createOptionNameMap": true,
        "createOverload": true,
        "createPackageJsonImportFilter": true,
        "createPackageJsonInfo": true,
        "createParenthesizerRules": true,
        "createPatternMatcher": true,
        "createPrependNodes": true,
        "createPrinter": true,
        "createPrinterWithDefaults": true,
        "createPrinterWithRemoveComments": true,
        "createPrinterWithRemoveCommentsNeverAsciiEscape": true,
        "createPrinterWithRemoveCommentsOmitTrailingSemicolon": true,
        "createProgram": true,
        "createProgramHost": true,
        "createRedirectedBuilderProgram": true,
        "createResolutionCache": true,
        "createRuntimeTypeSerializer": true,
        "createSemanticDiagnosticsBuilderProgram": true,
        "createSolutionBuilder": true,
        "createSolutionBuilderHost": true,
        "createSolutionBuilderWithWatch": true,
        "createSolutionBuilderWithWatchHost": true,
        "createSourceMapGenerator": true,
        "createSuperAccessVariableStatement": true,
        "createSystemWatchFunctions": true,
        "createTextChange": true,
        "createTextChangeFromStartLength": true,
        "createTextRangeFromNode": true,
        "createTextRangeFromSpan": true,
        "createTextSpanFromNode": true,
        "createTextSpanFromRange": true,
        "createTextSpanFromStringLiteralLikeContent": true,
        "createTypeChecker": true,
        "createTypeReferenceDirectiveResolutionCache": true,
        "createTypeReferenceResolutionLoader": true,
        "createWatchCompilerHost2": true,
        "createWatchCompilerHostOfConfigFile": true,
        "createWatchCompilerHostOfFilesAndCompilerOptions": true,
        "createWatchFactory": true,
        "createWatchHost": true,
        "createWatchProgram": true,
        "createWatchStatusReporter": true,
        "createWriteFileMeasuringIO": true,
        "decodeMappings": true,
        "decorateHelper": true,
        "defaultIncludeSpec": true,
        "defaultInitCompilerOptions": true,
        "define": true,
        "diagnosticToString": true,
        "displayPart": true,
        "disposeEmitNodes": true,
        "document": true,
        "documentSpansEqual": true,
        "dumpTracingLegend": true,
        "emitFiles": true,
        "emitFilesAndReportErrors": true,
        "emitFilesAndReportErrorsAndGetExitStatus": true,
        "emitSkippedWithNoDiagnostics": true,
        "emitUsingBuildInfo": true,
        "emptyOptions": true,
        "esDecorateHelper": true,
        "explainFiles": true,
        "explainIfFileIsRedirectAndImpliedFormat": true,
        "exportStarHelper": true,
        "extendsHelper": true,
        "fileIncludeReasonToDiagnostics": true,
        "filterSemanticDiagnostics": true,
        "findChildOfKind": true,
        "findConfigFile": true,
        "findContainingList": true,
        "findDiagnosticForNode": true,
        "findFirstNonJsxWhitespaceToken": true,
        "findListItemInfo": true,
        "findModifier": true,
        "findNextToken": true,
        "findPackageJson": true,
        "findPackageJsons": true,
        "findPrecedingMatchingToken": true,
        "findPrecedingToken": true,
        "findSuperStatementIndex": true,
        "findTokenOnLeftOfPosition": true,
        "firstOrOnly": true,
        "fixupCompilerOptions": true,
        "flattenDestructuringAssignment": true,
        "flattenDestructuringBinding": true,
        "flattenDiagnosticMessageText": true,
        "forEachEmittedFile": true,
        "forEachExternalModuleToImportFrom": true,
        "forEachResolvedProjectReference": true,
        "forEachUnique": true,
        "formatColorAndReset": true,
        "formatDiagnostic": true,
        "formatDiagnostics": true,
        "formatDiagnosticsWithColorAndContext": true,
        "formatLocation": true,
        "generateDjb2Hash": true,
        "generateTSConfig": true,
        "generatorHelper": true,
        "getAdjustedReferenceLocation": true,
        "getAdjustedRenameLocation": true,
        "getAllDecoratorsOfClass": true,
        "getAllDecoratorsOfClassElement": true,
        "getAllProjectOutputs": true,
        "getAllUnscopedEmitHelpers": true,
        "getAutomaticTypeDirectiveNames": true,
        "getBuildInfo": true,
        "getBuildInfoFileVersionMap": true,
        "getBuildInfoText": true,
        "getBuildOrderFromAnyBuildOrder": true,
        "getBuilderCreationParameters": true,
        "getBuilderFileEmit": true,
        "getCommentRange": true,
        "getCommonSourceDirectory": true,
        "getCommonSourceDirectoryOfConfig": true,
        "getCompilerOptionsDiffValue": true,
        "getConditions": true,
        "getConfigFileParsingDiagnostics": true,
        "getConstantValue": true,
        "getContainerNode": true,
        "getContextualTypeFromParent": true,
        "getContextualTypeFromParentOrAncestorTypeNode": true,
        "getCurrentTime": true,
        "getDeclarationDiagnostics": true,
        "getDefaultExportInfoWorker": true,
        "getDefaultFormatCodeSettings": true,
        "getDefaultLikeExportInfo": true,
        "getDiagnosticText": true,
        "getDiagnosticsWithinSpan": true,
        "getDocumentPositionMapper": true,
        "getEditsForFileRename": true,
        "getEffectiveTypeRoots": true,
        "getEmitHelpers": true,
        "getEncodedSemanticClassifications": true,
        "getEncodedSyntacticClassifications": true,
        "getEntrypointsFromPackageJsonInfo": true,
        "getErrorCountForSummary": true,
        "getErrorSummaryText": true,
        "getExportInfoMap": true,
        "getExportNeedsImportStarHelper": true,
        "getFallbackOptions": true,
        "getFileEmitOutput": true,
        "getFileNamesFromConfigSpecs": true,
        "getFileWatcherEventKind": true,
        "getFilesInErrorForSummary": true,
        "getFirstNonSpaceCharacterPosition": true,
        "getFirstProjectOutput": true,
        "getFixableErrorSpanExpression": true,
        "getFormatCodeSettingsForWriting": true,
        "getIdentifierAutoGenerate": true,
        "getIdentifierGeneratedImportReference": true,
        "getIdentifierTypeArguments": true,
        "getImpliedNodeFormatForFile": true,
        "getImpliedNodeFormatForFileWorker": true,
        "getImportNeedsImportDefaultHelper": true,
        "getImportNeedsImportStarHelper": true,
        "getKeyForCompilerOptions": true,
        "getLineInfo": true,
        "getLineStartPositionForPosition": true,
        "getLocaleTimeString": true,
        "getMappedContextSpan": true,
        "getMappedDocumentSpan": true,
        "getMappedLocation": true,
        "getMatchedFileSpec": true,
        "getMatchedIncludeSpec": true,
        "getMeaningFromDeclaration": true,
        "getMeaningFromLocation": true,
        "getModeForFileReference": true,
        "getModeForResolutionAtIndex": true,
        "getModeForUsageLocation": true,
        "getModifiedTime": true,
        "getModuleInstanceState": true,
        "getModuleNameStringLiteralAt": true,
        "getModuleSpecifierResolverHost": true,
        "getNameForExportedSymbol": true,
        "getNameFromPropertyName": true,
        "getNameOfCompilerOptionValue": true,
        "getNamesForExportedSymbol": true,
        "getNavigateToItems": true,
        "getNavigationBarItems": true,
        "getNavigationTree": true,
        "getNewLineKind": true,
        "getNewLineOrDefaultFromHost": true,
        "getNodeId": true,
        "getNodeKind": true,
        "getNodeModifiers": true,
        "getNonAssignmentOperatorForCompoundAssignment": true,
        "getOptionFromName": true,
        "getOptionsNameMap": true,
        "getOrCreateEmitNode": true,
        "getOriginalNodeId": true,
        "getOutputDeclarationFileName": true,
        "getOutputExtension": true,
        "getOutputFileNames": true,
        "getOutputPathsFor": true,
        "getOutputPathsForBundle": true,
        "getPackageJsonInfo": true,
        "getPackageJsonTypesVersionsPaths": true,
        "getPackageJsonsVisibleToFile": true,
        "getPackageNameFromTypesPackageName": true,
        "getPackageScopeForPath": true,
        "getParentNodeInSpan": true,
        "getParsedCommandLineOfConfigFile": true,
        "getPathUpdater": true,
        "getPendingEmitKind": true,
        "getPossibleGenericSignatures": true,
        "getPossibleTypeArgumentsInfo": true,
        "getPreEmitDiagnostics": true,
        "getPrecedingNonSpaceCharacterPosition": true,
        "getPrivateIdentifier": true,
        "getProperties": true,
        "getPropertySymbolFromBindingElement": true,
        "getQuoteFromPreference": true,
        "getQuotePreference": true,
        "getRefactorContextSpan": true,
        "getReferencedFileLocation": true,
        "getRenameLocation": true,
        "getReplacementSpanForContextToken": true,
        "getResolutionDiagnostic": true,
        "getResolutionModeOverrideForClause": true,
        "getScriptKind": true,
        "getScriptTargetFeatures": true,
        "getSemanticClassifications": true,
        "getSnapshotText": true,
        "getSnippetElement": true,
        "getSourceFileVersionAsHashFromText": true,
        "getSourceMapRange": true,
        "getSourceMapper": true,
        "getStartsOnNewLine": true,
        "getStaticPropertiesAndClassStaticBlock": true,
        "getSuperCallFromStatement": true,
        "getSwitchedType": true,
        "getSymbolId": true,
        "getSymbolTarget": true,
        "getSyntacticClassifications": true,
        "getSynthesizedDeepClone": true,
        "getSynthesizedDeepCloneWithReplacements": true,
        "getSynthesizedDeepClones": true,
        "getSynthesizedDeepClonesWithReplacements": true,
        "getSyntheticLeadingComments": true,
        "getSyntheticTrailingComments": true,
        "getTargetLabel": true,
        "getTemporaryModuleResolutionState": true,
        "getTokenAtPosition": true,
        "getTokenSourceMapRange": true,
        "getTouchingPropertyName": true,
        "getTouchingToken": true,
        "getTransformers": true,
        "getTsBuildInfoEmitOutputFilePath": true,
        "getTypeArgumentOrTypeParameterList": true,
        "getTypeKeywordOfTypeOnlyImport": true,
        "getTypeNode": true,
        "getTypeNodeIfAccessible": true,
        "getTypesPackageName": true,
        "getUniqueName": true,
        "getUniqueSymbolId": true,
        "getWatchErrorSummaryDiagnosticMessage": true,
        "getWatchFactory": true,
        "handleNoEmitOptions": true,
        "hasChildOfKind": true,
        "hasDocComment": true,
        "hasIndexSignature": true,
        "hasPropertyAccessExpressionWithName": true,
        "helperString": true,
        "identitySourceMapConsumer": true,
        "ignoreSourceNewlines": true,
        "ignoredPaths": true,
        "importDefaultHelper": true,
        "importStarHelper": true,
        "inferredTypesContainingFile": true,
        "insertImports": true,
        "inverseJsxOptionMap": true,
        "isAccessibilityModifier": true,
        "isApplicableVersionedTypesKey": true,
        "isArgumentExpressionOfElementAccess": true,
        "isArrayLiteralOrObjectLiteralDestructuringPattern": true,
        "isBuildInfoFile": true,
        "isBuilderProgram2": true,
        "isCallExpressionTarget": true,
        "isCallOrNewExpressionTarget": true,
        "isCallToHelper": true,
        "isCircularBuildOrder": true,
        "isComment": true,
        "isCompoundAssignment": true,
        "isDecoratorTarget": true,
        "isDeprecatedDeclaration": true,
        "isDiagnosticWithLocation": true,
        "isEmittedFileOfProgram": true,
        "isEqualityOperatorKind": true,
        "isExcludedFile": true,
        "isExclusivelyTypeOnlyImportOrExport": true,
        "isExportsOrModuleExportsOrAlias": true,
        "isExpressionOfExternalModuleImportEqualsDeclaration": true,
        "isExternalModuleSymbol": true,
        "isFirstDeclarationOfSymbolParameter": true,
        "isFixablePromiseHandler": true,
        "isGlobalDeclaration": true,
        "isIgnoredFileFromWildCardWatching": true,
        "isImportOrExportSpecifierName": true,
        "isImportableFile": true,
        "isInComment": true,
        "isInJSXText": true,
        "isInNonReferenceComment": true,
        "isInReferenceComment": true,
        "isInRightSideOfInternalImportEqualsDeclaration": true,
        "isInString": true,
        "isInTemplateString": true,
        "isInitializedProperty": true,
        "isInsideJsxElement": true,
        "isInsideJsxElementOrAttribute": true,
        "isInsideNodeModules": true,
        "isInsideTemplateLiteral": true,
        "isInstantiatedModule": true,
        "isInternalDeclaration": true,
        "isJsxOpeningLikeElementTagName": true,
        "isJumpStatementTarget": true,
        "isLabelName": true,
        "isLabelOfLabeledStatement": true,
        "isLiteralNameOfPropertyDeclarationOrIndexAccess": true,
        "isModuleSpecifierLike": true,
        "isNameOfFunctionDeclaration": true,
        "isNameOfModuleDeclaration": true,
        "isNewExpressionTarget": true,
        "isNonGlobalDeclaration": true,
        "isNonStaticMethodOrAccessorWithPrivateName": true,
        "isObjectBindingElementWithoutPropertyName": true,
        "isPossiblyTypeArgumentPosition": true,
        "isProgramBundleEmitBuildInfo": true,
        "isProgramUptoDate": true,
        "isPunctuation": true,
        "isRawSourceMap": true,
        "isReferenceFileLocation": true,
        "isReferencedFile": true,
        "isReturnStatementWithFixablePromiseHandler": true,
        "isRightSideOfPropertyAccess": true,
        "isRightSideOfQualifiedName": true,
        "isSimpleCopiableExpression": true,
        "isSimpleInlineableExpression": true,
        "isSourceFileFromLibrary": true,
        "isSourceMapping": true,
        "isStringAndEmptyAnonymousObjectIntersection": true,
        "isStringLiteralOrTemplate": true,
        "isStringOrRegularExpressionOrTemplateLiteral": true,
        "isTagName": true,
        "isTaggedTemplateTag": true,
        "isTextWhiteSpaceLike": true,
        "isThis": true,
        "isTraceEnabled": true,
        "isTypeKeyword": true,
        "isTypeKeywordToken": true,
        "isTypeKeywordTokenOrIdentifier": true,
        "jsxModeNeedsExplicitImport": true,
        "keywordPart": true,
        "libMap": true,
        "libs": true,
        "lineBreakPart": true,
        "linkNamePart": true,
        "linkPart": true,
        "linkTextPart": true,
        "listFiles": true,
        "loadModuleFromGlobalCache": true,
        "loadWithModeAwareCache": true,
        "location": true,
        "makeImport": true,
        "makeImportIfNecessary": true,
        "makeStringLiteral": true,
        "mangleScopedPackageName": true,
        "mapOneOrMany": true,
        "mapToDisplayParts": true,
        "matchesExclude": true,
        "metadataHelper": true,
        "missingFileModifiedTime": true,
        "moduleOptionDeclaration": true,
        "moduleResolutionNameAndModeGetter": true,
        "moduleResolutionOptionDeclarations": true,
        "moduleResolutionUsesNodeModules": true,
        "moveEmitHelpers": true,
        "moveSyntheticComments": true,
        "navigator": true,
        "needsParentheses": true,
        "newCaseClauseTracker": true,
        "newPrivateEnvironment": true,
        "noEmitNotification": true,
        "noEmitSubstitution": true,
        "noTransformers": true,
        "nodeModuleNameResolver": true,
        "nodeModulesPathPart": true,
        "nodeNextJsonConfigResolver": true,
        "nodeOverlapsWithStartEnd": true,
        "nodeSeenTracker": true,
        "nodeToDisplayParts": true,
        "noopFileWatcher": true,
        "notImplementedResolver": true,
        "nullNodeConverters": true,
        "nullTransformationContext": true,
        "onProfilerEvent": true,
        "operatorPart": true,
        "optionDeclarations": true,
        "optionMapToObject": true,
        "optionsAffectingProgramStructure": true,
        "optionsForBuild": true,
        "optionsForWatch": true,
        "paramHelper": true,
        "parameterNamePart": true,
        "parseBuildCommand": true,
        "parseCommandLine": true,
        "parseCommandLineWorker": true,
        "parseConfigFileTextToJson": true,
        "parseConfigFileWithSystem": true,
        "parseConfigHostFromCompilerHostLike": true,
        "parseCustomTypeOption": true,
        "parseJsonConfigFileContent": true,
        "parseJsonSourceFileConfigFileContent": true,
        "parseListTypeOption": true,
        "parseNodeModuleFromPath": true,
        "parsePackageName": true,
        "patchWriteFileEnsuringDirectory": true,
        "pathContainsNodeModules": true,
        "performIncrementalCompilation": true,
        "performance": true,
        "plainJSErrors": true,
        "positionBelongsToNode": true,
        "positionIsASICandidate": true,
        "preProcessFile": true,
        "probablyUsesSemicolons": true,
        "process": true,
        "processTaggedTemplateExpression": true,
        "programContainsEsModules": true,
        "programContainsModules": true,
        "propKeyHelper": true,
        "propertyNamePart": true,
        "punctuationPart": true,
        "queueMicrotask": true,
        "quote": true,
        "quotePreferenceFromString": true,
        "rangeContainsPosition": true,
        "rangeContainsPositionExclusive": true,
        "rangeContainsRange": true,
        "rangeContainsRangeExclusive": true,
        "rangeContainsStartEnd": true,
        "rangeOverlapsWithStartEnd": true,
        "readBuilderProgram": true,
        "readConfigFile": true,
        "readHelper": true,
        "readJsonConfigFile": true,
        "realizeDiagnostics": true,
        "removeAllComments": true,
        "removeEmitHelper": true,
        "removeIgnoredPath": true,
        "removeOptionality": true,
        "repeatString": true,
        "resolveConfigFileProjectName": true,
        "resolveJSModule": true,
        "resolveModuleName": true,
        "resolveModuleNameFromCache": true,
        "resolvePackageNameToPackageJson": true,
        "resolveProjectReferencePath": true,
        "resolveTripleslashReference": true,
        "resolveTypeReferenceDirective": true,
        "restHelper": true,
        "returnNoopFileWatcher": true,
        "returnsPromise": true,
        "runInitializersHelper": true,
        "sameMapping": true,
        "screenStartingMessageCodes": true,
        "semanticDiagnosticsOptionDeclarations": true,
        "serializeCompilerOptions": true,
        "setCommentRange": true,
        "setConfigFileInOptions": true,
        "setConstantValue": true,
        "setEmitFlags": true,
        "setFunctionNameHelper": true,
        "setGetSourceFileAsHashVersioned": true,
        "setIdentifierAutoGenerate": true,
        "setIdentifierGeneratedImportReference": true,
        "setIdentifierTypeArguments": true,
        "setImmediate": true,
        "setInternalEmitFlags": true,
        "setModuleDefaultHelper": true,
        "setPrivateIdentifier": true,
        "setSnippetElement": true,
        "setSourceMapRange": true,
        "setStackTraceLimit": true,
        "setStartsOnNewLine": true,
        "setSyntheticLeadingComments": true,
        "setSyntheticTrailingComments": true,
        "setSys": true,
        "setSysLog": true,
        "setTimeout": true,
        "setTokenSourceMapRange": true,
        "setTypeNode": true,
        "shouldAllowImportingTsExtension": true,
        "shouldUseUriStyleNodeCoreModules": true,
        "signatureHasLiteralTypes": true,
        "signatureHasRestParameter": true,
        "signatureToDisplayParts": true,
        "skipConstraint": true,
        "sourceFileAffectingCompilerOptions": true,
        "sourceMapCommentRegExp": true,
        "sourceMapCommentRegExpDontCareLineStart": true,
        "spacePart": true,
        "spreadArrayHelper": true,
        "startEndContainsRange": true,
        "startEndOverlapsWithStartEnd": true,
        "startTracing": true,
        "startsWithUnderscore": true,
        "stringContainsAt": true,
        "suppressLeadingAndTrailingTrivia": true,
        "suppressLeadingTrivia": true,
        "suppressTrailingTrivia": true,
        "symbolEscapedNameNoDefault": true,
        "symbolNameNoDefault": true,
        "symbolPart": true,
        "symbolToDisplayParts": true,
        "syntaxMayBeASICandidate": true,
        "syntaxRequiresTrailingSemicolonOrASI": true,
        "sysLog": true,
        "targetOptionDeclaration": true,
        "templateObjectHelper": true,
        "testFormatSettings": true,
        "textOrKeywordPart": true,
        "textPart": true,
        "textSpansEqual": true,
        "toBuilderFileEmit": true,
        "toBuilderStateFileInfoForMultiEmit": true,
        "toProgramEmitPending": true,
        "trace": true,
        "tracingEnabled": true,
        "transform": true,
        "transformClassFields": true,
        "transformDeclarations": true,
        "transformECMAScriptModule": true,
        "transformES2015": true,
        "transformES2016": true,
        "transformES2017": true,
        "transformES2018": true,
        "transformES2019": true,
        "transformES2020": true,
        "transformES2021": true,
        "transformES5": true,
        "transformESDecorators": true,
        "transformESNext": true,
        "transformGenerators": true,
        "transformJsx": true,
        "transformLegacyDecorators": true,
        "transformModule": true,
        "transformNodeModule": true,
        "transformNodes": true,
        "transformSystemModule": true,
        "transformTypeScript": true,
        "transpile": true,
        "transpileModule": true,
        "transpileOptionValueCompilerOptions": true,
        "tryAndIgnoreErrors": true,
        "tryDirectoryExists": true,
        "tryFileExists": true,
        "tryGetDirectories": true,
        "tryGetSourceMappingURL": true,
        "tryIOAndConsumeErrors": true,
        "tryParseRawSourceMap": true,
        "tryReadDirectory": true,
        "tryReadFile": true,
        "ts_BreakpointResolver_exports": true,
        "ts_CallHierarchy_exports": true,
        "ts_Completions_exports": true,
        "ts_FindAllReferences_exports": true,
        "ts_GoToDefinition_exports": true,
        "ts_InlayHints_exports": true,
        "ts_JsDoc_exports": true,
        "ts_JsTyping_exports": true,
        "ts_NavigateTo_exports": true,
        "ts_NavigationBar_exports": true,
        "ts_OrganizeImports_exports": true,
        "ts_OutliningElementsCollector_exports": true,
        "ts_Rename_exports": true,
        "ts_SignatureHelp_exports": true,
        "ts_SmartSelectionRange_exports": true,
        "ts_SymbolDisplay_exports": true,
        "ts_classifier_exports": true,
        "ts_codefix_exports": true,
        "ts_formatting_exports": true,
        "ts_moduleSpecifiers_exports": true,
        "ts_performance_exports": true,
        "ts_refactor_exports": true,
        "ts_server_exports": true,
        "ts_textChanges_exports": true,
        "typeAcquisitionDeclarations": true,
        "typeAliasNamePart": true,
        "typeKeywords": true,
        "typeParameterNamePart": true,
        "typeReferenceResolutionNameAndModeGetter": true,
        "typeToDisplayParts": true,
        "unchangedPollThresholds": true,
        "unmangleScopedPackageName": true,
        "updateErrorForNoInputFiles": true,
        "updateMissingFilePathsWatch": true,
        "updatePackageJsonWatch": true,
        "updateResolutionField": true,
        "updateSharedExtendedConfigFileWatcher": true,
        "updateWatchingWildcardDirectories": true,
        "valuesHelper": true,
        "visitArray": true,
        "visitCommaListElements": true,
        "visitEachChild": true,
        "visitFunctionBody": true,
        "visitIterationBody": true,
        "visitLexicalEnvironment": true,
        "visitNode": true,
        "visitNodes2": true,
        "visitParameterList": true,
        "walkUpLexicalEnvironments": true,
        "whitespaceOrMapCommentRegExp": true,
        "zipToModeAwareCache": true
      }
    },
    "prettier-linter-helpers<eslint-plugin-prettier": {
      "packages": {
        "fast-diff<prettier-linter-helpers<eslint-plugin-prettier": true
      }
    },
    "process-nextick-args<cloneable-readable<vinyl": {
      "globals": {
        "process.nextTick": true,
        "process.version": true
      }
    },
    "process-nextick-args<readable-stream-2": {
      "globals": {
        "process": true
      }
    },
    "process-nextick-args<readable-stream<through2<cloneable-readable<vinyl": {
      "globals": {
        "process": true
      }
    },
    "prop-types": {
      "globals": {
        "console": true,
        "process.env.NODE_ENV": true
      },
      "packages": {
        "object-assign<react": true,
        "react-is<prop-types": true
      }
    },
    "pump<pumpify": {
      "builtin": {
        "fs": true
      },
      "globals": {
        "process.version": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "once<@metamask/object-multiplex": true
      }
    },
    "pump<pumpify<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "fs": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "once<@metamask/object-multiplex": true
      }
    },
    "pump<pumpify<vinyl-fs<gulp": {
      "builtin": {
        "fs": true
      },
      "packages": {
        "end-of-stream<duplexify": true,
        "once<@metamask/object-multiplex": true
      }
    },
    "pumpify": {
      "packages": {
        "duplexify": true,
        "inherits<pumpify": true,
        "pump<pumpify": true
      }
    },
    "pumpify<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "duplexify<pumpify<glob-stream<vinyl-fs<gulp": true,
        "inherits<pumpify": true,
        "pump<pumpify<glob-stream<vinyl-fs<gulp": true
      }
    },
    "pumpify<vinyl-fs<gulp": {
      "packages": {
        "duplexify<pumpify<vinyl-fs<gulp": true,
        "inherits<pumpify": true,
        "pump<pumpify<vinyl-fs<gulp": true
      }
    },
    "qs<@storybook/addon-knobs": {
      "packages": {
        "side-channel<string.prototype.matchall": true
      }
    },
    "randomatic<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-number<array-last<bach<undertaker<gulp": true,
        "kind-of<clone-deep<@babel/register": true,
        "math-random<randomatic<fill-range<expand-range<braces<micromatch<anymatch<gulp-watch": true
      }
    },
    "randomcolor": {
      "globals": {
        "define": true
      }
    },
    "raw-body<body<tiny-lr<gulp-livereload": {
      "globals": {
        "Buffer.concat": true,
        "process.nextTick": true
      },
      "packages": {
        "bytes<raw-body<body<tiny-lr<gulp-livereload": true,
        "string_decoder<raw-body<body<tiny-lr<gulp-livereload": true
      }
    },
    "react-is<prop-types": {
      "globals": {
        "console": true,
        "process.env.NODE_ENV": true
      }
    },
    "read-only-stream<browserify": {
      "packages": {
        "readable-stream<read-only-stream<browserify": true
      }
    },
    "readable-stream": {
      "builtin": {
        "buffer.Buffer": true,
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.env.READABLE_STREAM": true,
        "process.nextTick": true,
        "process.stderr": true,
        "process.stdout": true
      },
      "packages": {
        "inherits<pumpify": true,
        "string_decoder<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<bl<vinyl-buffer": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<bl<vinyl-buffer": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<bl<vinyl-buffer": true,
        "string_decoder<readable-stream<bl<vinyl-buffer": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<browserify": true,
        "string_decoder<readable-stream<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<concat-stream<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<concat-stream<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<concat-stream<browserify": true,
        "string_decoder<readable-stream<concat-stream<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<duplexer2<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<duplexer2<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<duplexer2<browserify": true,
        "string_decoder<readable-stream<duplexer2<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true,
        "string_decoder<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<flush-write-stream<lead<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<glob-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<glob-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<glob-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<gulp-watch": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<gulp-watch": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<gulp-watch": true,
        "string_decoder<readable-stream<gulp-watch": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<lazystream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<lazystream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<lazystream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<lazystream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<module-deps<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<module-deps<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<module-deps<browserify": true,
        "string_decoder<readable-stream<module-deps<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<read-only-stream<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<read-only-stream<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<read-only-stream<browserify": true,
        "string_decoder<readable-stream<read-only-stream<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<readdirp<chokidar<glob-watcher<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<readdirp<chokidar<glob-watcher<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<readdirp<chokidar<glob-watcher<gulp": true,
        "string_decoder<readable-stream<readdirp<chokidar<glob-watcher<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<stream-combiner2<module-deps<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<stream-combiner2<module-deps<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<stream-combiner2<module-deps<browserify": true,
        "string_decoder<readable-stream<stream-combiner2<module-deps<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<stream-splicer<labeled-stream-splicer": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<stream-splicer<labeled-stream-splicer": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<stream-splicer<labeled-stream-splicer": true,
        "string_decoder<readable-stream<stream-splicer<labeled-stream-splicer": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "string_decoder<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<browser-pack<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<browser-pack<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<browser-pack<browserify": true,
        "string_decoder<readable-stream<through2<browser-pack<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<cloneable-readable<vinyl": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<cloneable-readable<vinyl": true,
        "process-nextick-args<readable-stream<through2<cloneable-readable<vinyl": true,
        "safe-buffer<readable-stream<through2<cloneable-readable<vinyl": true,
        "string_decoder<readable-stream<through2<cloneable-readable<vinyl": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<deps-sort<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<deps-sort<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<deps-sort<browserify": true,
        "string_decoder<readable-stream<through2<deps-sort<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<gulp-sort": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<gulp-sort": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<gulp-sort": true,
        "string_decoder<readable-stream<through2<gulp-sort": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<gulp-sourcemaps": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<gulp-sourcemaps": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<gulp-sourcemaps": true,
        "string_decoder<readable-stream<through2<gulp-sourcemaps": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<insert-module-globals<browserify": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<insert-module-globals<browserify": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<insert-module-globals<browserify": true,
        "string_decoder<readable-stream<through2<insert-module-globals<browserify": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<to-through<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<to-through<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<to-through<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<through2<to-through<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<through2<vinyl-source-stream": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<through2<vinyl-source-stream": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<through2<vinyl-source-stream": true,
        "string_decoder<readable-stream<through2<vinyl-source-stream": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readable-stream<vinyl-fs<gulp": {
      "builtin": {
        "events.EventEmitter": true,
        "stream": true,
        "util": true
      },
      "globals": {
        "process.browser": true,
        "process.env.READABLE_STREAM": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.version.slice": true,
        "setImmediate": true
      },
      "packages": {
        "core-util-is<readable-stream-2": true,
        "inherits<pumpify": true,
        "isarray<readable-stream<vinyl-fs<gulp": true,
        "process-nextick-args<readable-stream-2": true,
        "safe-buffer<readable-stream<vinyl-fs<gulp": true,
        "string_decoder<readable-stream<vinyl-fs<gulp": true,
        "util-deprecate<readable-stream": true
      }
    },
    "readdirp<chokidar": {
      "builtin": {
        "fs": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true,
        "stream.Readable": true,
        "util.promisify": true
      },
      "globals": {
        "process.platform": true,
        "process.versions.node.split": true
      },
      "packages": {
        "picomatch<anymatch<chokidar": true
      }
    },
    "readdirp<chokidar<glob-watcher<gulp": {
      "builtin": {
        "path.join": true,
        "path.relative": true,
        "util.inherits": true
      },
      "globals": {
        "setImmediate": true
      },
      "packages": {
        "graceful-fs<del": true,
        "micromatch<anymatch<glob-watcher<gulp": true,
        "readable-stream<readdirp<chokidar<glob-watcher<gulp": true
      }
    },
    "readdirp<chokidar<gulp-watch": {
      "builtin": {
        "path.join": true,
        "path.relative": true,
        "util.inherits": true
      },
      "globals": {
        "setImmediate": true
      },
      "packages": {
        "graceful-fs<del": true,
        "micromatch<anymatch<chokidar<gulp-watch": true,
        "readable-stream<gulp-watch": true
      }
    },
    "regenerate<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "globals": {
        "define": true
      }
    },
    "regenerator-transform<@babel/plugin-transform-regenerator<@babel/preset-env": {
      "builtin": {
        "assert": true,
        "util.inherits": true
      },
      "packages": {
        "@babel/runtime": true
      }
    },
    "regex-cache<micromatch<anymatch<gulp-watch": {
      "packages": {
        "is-equal-shallow<regex-cache<micromatch<anymatch<gulp-watch": true
      }
    },
    "regex-not<micromatch<matchdep<gulp-cli<gulp": {
      "packages": {
        "extend-shallow<plugin-error<gulp-zip": true,
        "safe-regex<to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "regexp.prototype.flags<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "set-function-name<regexp.prototype.flags<string.prototype.matchall": true
      }
    },
    "regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "globals": {
        "characterClassItem.kind": true
      },
      "packages": {
        "@babel/regjsgen<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "regenerate<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "regjsparser<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "unicode-match-property-ecmascript<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "unicode-match-property-value-ecmascript<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true
      }
    },
    "regjsparser<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "globals": {
        "regjsparser": "write"
      }
    },
    "remark-parse<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "ccount<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "collapse-white-space<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-alphabetical<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-decimal<parse-entities<refractor<react-syntax-highlighter": true,
        "is-whitespace-character<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-word-character<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "markdown-escapes<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "parse-entities<refractor<react-syntax-highlighter": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "state-toggle<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "trim-trailing-lines<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "trim<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "unherit<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "unist-util-remove-position<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "vfile-location<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "xtend<watchify": true
      }
    },
    "remark-stringify<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "ccount<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-alphanumeric<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "is-decimal<parse-entities<refractor<react-syntax-highlighter": true,
        "is-whitespace-character<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "longest-streak<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "markdown-escapes<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "markdown-table<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "mdast-util-compact<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "parse-entities<refractor<react-syntax-highlighter": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "state-toggle<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "stringify-entities<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "unherit<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "xtend<watchify": true
      }
    },
    "remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "remark-parse<remark<@stylelint/postcss-markdown<stylelint": true,
        "remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "unified<react-markdown": true
      }
    },
    "remove-bom-buffer<vinyl-fs<gulp": {
      "packages": {
        "is-buffer<insert-module-globals<browserify": true,
        "is-utf8<remove-bom-buffer<vinyl-fs<gulp": true
      }
    },
    "remove-bom-stream<vinyl-fs<gulp": {
      "packages": {
        "remove-bom-buffer<vinyl-fs<gulp": true,
        "safe-buffer<content-disposition<koa": true,
        "through2<remove-bom-stream<vinyl-fs<gulp": true
      }
    },
    "remove-trailing-separator<vinyl": {
      "globals": {
        "process.platform": true
      }
    },
    "replace-ext<gulp-sass": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.sep": true
      }
    },
    "replace-ext<vinyl": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true
      }
    },
    "replace-ext<vinyl<vinyl-file<gulp-watch": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true
      }
    },
    "require-directory<yargs": {
      "builtin": {
        "fs.readdirSync": true,
        "fs.statSync": true,
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true
      }
    },
    "resolve-from<import-fresh<@eslint/eslintrc<eslint": {
      "builtin": {
        "fs.realpathSync": true,
        "module._nodeModulePaths": true,
        "module._resolveFilename": true,
        "path.join": true,
        "path.resolve": true
      }
    },
    "resolve-from<stylelint": {
      "builtin": {
        "fs.realpathSync": true,
        "module._nodeModulePaths": true,
        "module._resolveFilename": true,
        "path.join": true,
        "path.resolve": true
      }
    },
    "resolve-options<vinyl-fs<gulp": {
      "packages": {
        "value-or-function<vinyl-fs<gulp": true
      }
    },
    "resolve<depcheck": {
      "builtin": {
        "fs.readFile": true,
        "fs.readFileSync": true,
        "fs.realpath": true,
        "fs.realpathSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "os.homedir": true,
        "path.dirname": true,
        "path.join": true,
        "path.parse": true,
        "path.relative": true,
        "path.resolve": true
      },
      "globals": {
        "process.env.HOME": true,
        "process.env.HOMEDRIVE": true,
        "process.env.HOMEPATH": true,
        "process.env.LNAME": true,
        "process.env.LOGNAME": true,
        "process.env.USER": true,
        "process.env.USERNAME": true,
        "process.env.USERPROFILE": true,
        "process.getuid": true,
        "process.nextTick": true,
        "process.platform": true,
        "process.versions.pnp": true
      },
      "packages": {
        "is-core-module<depcheck": true,
        "path-parse<resolve<depcheck": true
      }
    },
    "resolve<eslint-plugin-react": {
      "builtin": {
        "fs.readFile": true,
        "fs.readFileSync": true,
        "fs.realpath": true,
        "fs.realpathSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "os.homedir": true,
        "path.dirname": true,
        "path.join": true,
        "path.parse": true,
        "path.relative": true,
        "path.resolve": true
      },
      "globals": {
        "process.env.HOME": true,
        "process.env.HOMEDRIVE": true,
        "process.env.HOMEPATH": true,
        "process.env.LNAME": true,
        "process.env.LOGNAME": true,
        "process.env.USER": true,
        "process.env.USERNAME": true,
        "process.env.USERPROFILE": true,
        "process.getuid": true,
        "process.nextTick": true,
        "process.platform": true,
        "process.versions.pnp": true
      },
      "packages": {
        "is-core-module<depcheck": true,
        "path-parse<resolve<depcheck": true
      }
    },
    "rimraf<del": {
      "builtin": {
        "assert": true,
        "fs": true,
        "path.join": true
      },
      "globals": {
        "process.platform": true,
        "setTimeout": true
      },
      "packages": {
        "glob<browserify": true
      }
    },
    "rimraf<flat-cache<file-entry-cache<stylelint": {
      "builtin": {
        "assert": true,
        "fs": true,
        "path.join": true
      },
      "globals": {
        "process.platform": true,
        "setTimeout": true
      },
      "packages": {
        "glob<browserify": true
      }
    },
    "rimraf<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "builtin": {
        "assert": true,
        "fs": true,
        "path.join": true
      },
      "globals": {
        "process.platform": true,
        "setTimeout": true
      },
      "packages": {
        "glob<nyc": true
      }
    },
    "rtlcss<postcss-rtlcss": {
      "packages": {
        "postcss": true
      }
    },
    "run-parallel<@nodelib/fs.scandir<@nodelib/fs.walk<eslint": {
      "globals": {
        "process.nextTick": true
      }
    },
    "rxjs<wait-on": {
      "globals": {
        "cancelAnimationFrame": true,
        "clearInterval": true,
        "clearTimeout": true,
        "performance": true,
        "requestAnimationFrame": true,
        "setInterval.apply": true,
        "setTimeout.apply": true
      }
    },
    "safe-buffer<content-disposition<koa": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<bl<vinyl-buffer": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<concat-stream<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<duplexer2<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<gulp-watch": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<lazystream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<module-deps<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<read-only-stream<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<readdirp<chokidar<glob-watcher<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<stream-combiner2<module-deps<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<stream-splicer<labeled-stream-splicer": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<browser-pack<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<cloneable-readable<vinyl": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<deps-sort<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<gulp-sort": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<gulp-sourcemaps": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<insert-module-globals<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<to-through<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<through2<vinyl-source-stream": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<readable-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<string_decoder<readable-stream<bl<vinyl-buffer": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<string_decoder<readable-stream<through2<browser-pack<browserify": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-buffer<string_decoder<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": {
      "builtin": {
        "buffer": true
      }
    },
    "safe-regex-test<es-abstract<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "is-regex<es-abstract<string.prototype.matchall": true
      }
    },
    "safe-regex<to-regex<braces<chokidar<gulp-watch": {
      "packages": {
        "ret<safe-regex<to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "sass": {
      "builtin": {
        "url": true
      },
      "env": "unfrozen",
      "globals": {
        "Buffer": true
      }
    },
    "sass-embedded": {
      "builtin": {
        "assert.strict": true,
        "child_process.spawn": true,
        "events.EventEmitter": true,
        "fs.existsSync": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "path.basename": true,
        "path.delimiter": true,
        "path.dirname": true,
        "path.extname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true,
        "stream.Writable": true,
        "url.URL": true,
        "url.fileURLToPath": true,
        "url.pathToFileURL": true,
        "util.inspect": true,
        "worker_threads.MessageChannel": true,
        "worker_threads.Worker": true,
        "worker_threads.receiveMessageOnPort": true
      },
      "globals": {
        "Buffer.alloc": true,
        "Buffer.from": true,
        "URL": true,
        "__dirname": true,
        "__filename": true,
        "console.error": true,
        "process.arch": true,
        "process.cwd": true,
        "process.execPath": true,
        "process.platform": true,
        "process.stderr.write": true
      },
      "packages": {
        "@bufbuild/protobuf<sass-embedded": true,
        "buffer-builder<sass-embedded": true,
        "immutable<sass-embedded": true,
        "rxjs<wait-on": true,
        "supports-color<mocha": true,
        "varint<sass-embedded": true
      }
    },
    "semver": {
      "globals": {
        "console.error": true,
        "process": true
      }
    },
    "semver<@babel/core": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<@babel/eslint-parser": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<@babel/helper-compilation-targets<@babel/core": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<@babel/helper-create-class-features-plugin<@babel/plugin-transform-private-methods<@babel/preset-env": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<@babel/preset-env": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<babel-plugin-polyfill-corejs2<@babel/preset-env": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<eslint-plugin-node": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<eslint-plugin-react": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "semver<node-pre-gyp<fsevents<chokidar<gulp-watch": {
      "globals": {
        "console": true,
        "process": true
      }
    },
    "set-blocking<yargs<nyc": {
      "globals": {
        "process.stderr": true,
        "process.stdout": true
      }
    },
    "set-function-length<call-bind<string.prototype.matchall": {
      "packages": {
        "define-data-property<define-properties<string.prototype.matchall": true,
        "es-errors<call-bind<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "gopd<es-abstract<string.prototype.matchall": true,
        "has-property-descriptors<es-abstract<string.prototype.matchall": true
      }
    },
    "set-function-name<regexp.prototype.flags<string.prototype.matchall": {
      "packages": {
        "define-data-property<define-properties<string.prototype.matchall": true,
        "functions-have-names<function.prototype.name<es-abstract<string.prototype.matchall": true,
        "has-property-descriptors<es-abstract<string.prototype.matchall": true
      }
    },
    "set-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "extend-shallow<set-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true,
        "is-plain-object<clone-deep<@babel/register": true,
        "split-string<braces<chokidar<gulp-watch": true
      }
    },
    "shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": {
      "packages": {
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true,
        "kind-of<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "lazy-cache<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": true,
        "mixin-object<shallow-clone<clone-deep<merge-deep<lavamoat-core<lavamoat": true
      }
    },
    "shasum-object<browserify": {
      "builtin": {
        "crypto.createHash": true
      },
      "globals": {
        "Buffer.isBuffer": true
      },
      "packages": {
        "fast-safe-stringify<eth-rpc-errors": true
      }
    },
    "shebang-command<cross-spawn": {
      "packages": {
        "shebang-regex<shebang-command<cross-spawn": true
      }
    },
    "side-channel<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "get-intrinsic<string.prototype.matchall": true,
        "object-inspect<es-abstract<string.prototype.matchall": true
      }
    },
    "signal-exit<write-file-atomic<stylelint": {
      "builtin": {
        "assert.equal": true,
        "events": true
      },
      "globals": {
        "process": true
      }
    },
    "slice-ansi<table<stylelint": {
      "packages": {
        "ansi-styles<slice-ansi<table<stylelint": true,
        "astral-regex<slice-ansi<table<stylelint": true,
        "is-fullwidth-code-point<slice-ansi<table<stylelint": true
      }
    },
    "snapdragon-node<braces<chokidar<gulp-watch": {
      "packages": {
        "define-property<snapdragon-node<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true,
        "snapdragon-util<snapdragon-node<braces<chokidar<gulp-watch": true
      }
    },
    "snapdragon-util<snapdragon-node<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<snapdragon-util<snapdragon-node<braces<chokidar<gulp-watch": true
      }
    },
    "snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "fs.readFileSync": true,
        "path.dirname": true,
        "util.inspect": true
      },
      "globals": {
        "__filename": true
      },
      "packages": {
        "base<snapdragon<braces<chokidar<gulp-watch": true,
        "debug<snapdragon<braces<chokidar<gulp-watch": true,
        "define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "extend-shallow<snapdragon<braces<chokidar<gulp-watch": true,
        "map-cache<snapdragon<braces<chokidar<gulp-watch": true,
        "source-map-resolve<css<rework<resolve-url-loader": true,
        "source-map<snapdragon<braces<chokidar<gulp-watch": true,
        "use<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "source-map": {
      "builtin": {
        "fs.readFile": true,
        "path.join": true
      },
      "globals": {
        "WebAssembly.instantiate": true,
        "__dirname": true,
        "console.debug": true,
        "console.time": true,
        "console.timeEnd": true,
        "fetch": true
      }
    },
    "source-map-js<postcss": {
      "globals": {
        "console": true
      }
    },
    "source-map-resolve<css<gulp-sourcemaps": {
      "builtin": {
        "path.sep": true,
        "url.resolve": true
      },
      "globals": {
        "TextDecoder": true,
        "setImmediate": true
      },
      "packages": {
        "atob<source-map-resolve<css<gulp-sourcemaps": true,
        "decode-uri-component<source-map-resolve<css<gulp-sourcemaps": true
      }
    },
    "source-map-resolve<css<rework<resolve-url-loader": {
      "builtin": {
        "url.resolve": true
      },
      "globals": {
        "TextDecoder": true,
        "setImmediate": true
      },
      "packages": {
        "atob<source-map-resolve<css<gulp-sourcemaps": true,
        "decode-uri-component<source-map-resolve<css<gulp-sourcemaps": true,
        "source-map-url<source-map-resolve<css<rework<resolve-url-loader": true,
        "urix<css<rework<resolve-url-loader": true
      }
    },
    "source-map-support<terser": {
      "builtin": {
        "fs": true,
        "path.dirname": true,
        "path.resolve": true
      },
      "globals": {
        "XMLHttpRequest": true,
        "console.error": true,
        "process": true
      },
      "packages": {
        "buffer-from<source-map-support<terser": true,
        "source-map<source-map-support<terser": true
      }
    },
    "source-map-url<source-map-resolve<css<rework<resolve-url-loader": {
      "globals": {
        "define": true
      }
    },
    "spdx-expression-parse<eslint-plugin-jsdoc": {
      "packages": {
        "spdx-exceptions<spdx-expression-parse<eslint-plugin-jsdoc": true,
        "spdx-license-ids<spdx-expression-parse<eslint-plugin-jsdoc": true
      }
    },
    "specificity<stylelint": {
      "globals": {
        "define": true
      }
    },
    "split-string<braces<chokidar<gulp-watch": {
      "packages": {
        "extend-shallow<plugin-error<gulp-zip": true
      }
    },
    "split<event-stream<gulp-livereload": {
      "builtin": {
        "string_decoder.StringDecoder": true
      },
      "packages": {
        "through<debounce-stream": true
      }
    },
    "static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": {
      "builtin": {
        "util.inherits": true
      },
      "packages": {
        "define-property<snapdragon<braces<chokidar<gulp-watch": true,
        "object-copy<static-extend<class-utils<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "stream-combiner<event-stream<gulp-livereload": {
      "packages": {
        "duplexer<debounce-stream": true
      }
    },
    "stream-combiner2<module-deps<browserify": {
      "packages": {
        "duplexer2<browserify": true,
        "readable-stream<stream-combiner2<module-deps<browserify": true
      }
    },
    "stream-exhaust<async-done<glob-watcher<gulp": {
      "builtin": {
        "stream.Writable": true,
        "util.inherits": true
      },
      "globals": {
        "setImmediate": true
      }
    },
    "stream-splicer<labeled-stream-splicer": {
      "globals": {
        "process.nextTick": true,
        "setImmediate": true
      },
      "packages": {
        "inherits<pumpify": true,
        "readable-stream<stream-splicer<labeled-stream-splicer": true
      }
    },
    "string_decoder<browserify": {
      "packages": {
        "safe-buffer<content-disposition<koa": true
      }
    },
    "string_decoder<raw-body<body<tiny-lr<gulp-livereload": {
      "builtin": {
        "buffer.Buffer": true
      }
    },
    "string_decoder<readable-stream<bl<vinyl-buffer": {
      "packages": {
        "safe-buffer<string_decoder<readable-stream<bl<vinyl-buffer": true
      }
    },
    "string_decoder<readable-stream<browserify": {
      "packages": {
        "safe-buffer<readable-stream<browserify": true
      }
    },
    "string_decoder<readable-stream<concat-stream<browserify": {
      "packages": {
        "safe-buffer<readable-stream<concat-stream<browserify": true
      }
    },
    "string_decoder<readable-stream<duplexer2<browserify": {
      "packages": {
        "safe-buffer<readable-stream<duplexer2<browserify": true
      }
    },
    "string_decoder<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": {
      "packages": {
        "safe-buffer<readable-stream<first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true
      }
    },
    "string_decoder<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<flush-write-stream<lead<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<glob-stream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<gulp-watch": {
      "packages": {
        "safe-buffer<readable-stream<gulp-watch": true
      }
    },
    "string_decoder<readable-stream<lazystream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<lazystream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<module-deps<browserify": {
      "packages": {
        "safe-buffer<readable-stream<module-deps<browserify": true
      }
    },
    "string_decoder<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<ordered-read-streams<glob-stream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<read-only-stream<browserify": {
      "packages": {
        "safe-buffer<readable-stream<read-only-stream<browserify": true
      }
    },
    "string_decoder<readable-stream<readdirp<chokidar<glob-watcher<gulp": {
      "packages": {
        "safe-buffer<readable-stream<readdirp<chokidar<glob-watcher<gulp": true
      }
    },
    "string_decoder<readable-stream<stream-combiner2<module-deps<browserify": {
      "packages": {
        "safe-buffer<readable-stream<stream-combiner2<module-deps<browserify": true
      }
    },
    "string_decoder<readable-stream<stream-splicer<labeled-stream-splicer": {
      "packages": {
        "safe-buffer<readable-stream<stream-splicer<labeled-stream-splicer": true
      }
    },
    "string_decoder<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "packages": {
        "safe-buffer<readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true
      }
    },
    "string_decoder<readable-stream<through2<browser-pack<browserify": {
      "packages": {
        "safe-buffer<string_decoder<readable-stream<through2<browser-pack<browserify": true
      }
    },
    "string_decoder<readable-stream<through2<cloneable-readable<vinyl": {
      "packages": {
        "safe-buffer<readable-stream<through2<cloneable-readable<vinyl": true
      }
    },
    "string_decoder<readable-stream<through2<deps-sort<browserify": {
      "packages": {
        "safe-buffer<readable-stream<through2<deps-sort<browserify": true
      }
    },
    "string_decoder<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<through2<gulp-sort": {
      "packages": {
        "safe-buffer<readable-stream<through2<gulp-sort": true
      }
    },
    "string_decoder<readable-stream<through2<gulp-sourcemaps": {
      "packages": {
        "safe-buffer<readable-stream<through2<gulp-sourcemaps": true
      }
    },
    "string_decoder<readable-stream<through2<insert-module-globals<browserify": {
      "packages": {
        "safe-buffer<readable-stream<through2<insert-module-globals<browserify": true
      }
    },
    "string_decoder<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<string_decoder<readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<through2<to-through<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<through2<to-through<vinyl-fs<gulp": true
      }
    },
    "string_decoder<readable-stream<through2<vinyl-source-stream": {
      "packages": {
        "safe-buffer<readable-stream<through2<vinyl-source-stream": true
      }
    },
    "string_decoder<readable-stream<vinyl-fs<gulp": {
      "packages": {
        "safe-buffer<readable-stream<vinyl-fs<gulp": true
      }
    },
    "string-width<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "packages": {
        "code-point-at<string-width<yargs<gulp-cli<gulp": true,
        "is-fullwidth-code-point<string-width<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true,
        "strip-ansi<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true
      }
    },
    "string-width<table<stylelint": {
      "packages": {
        "emoji-regex<string-width<table<stylelint": true,
        "is-fullwidth-code-point<slice-ansi<table<stylelint": true,
        "strip-ansi<string-width<table<stylelint": true
      }
    },
    "string-width<yargs": {
      "packages": {
        "emoji-regex<string-width<yargs": true,
        "is-fullwidth-code-point<string-width<yargs": true,
        "strip-ansi<eslint": true
      }
    },
    "string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true,
        "has-symbols<string.prototype.matchall": true,
        "regexp.prototype.flags<string.prototype.matchall": true
      }
    },
    "string.prototype.trim<es-abstract<string.prototype.matchall": {
      "packages": {
        "call-bind<string.prototype.matchall": true,
        "define-properties<string.prototype.matchall": true,
        "es-abstract<string.prototype.matchall": true
      }
    },
    "stringify-entities<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "character-entities-html4<stringify-entities<remark-stringify<remark<@stylelint/postcss-markdown<stylelint": true,
        "character-entities-legacy<parse-entities<refractor<react-syntax-highlighter": true,
        "is-alphanumerical<parse-entities<refractor<react-syntax-highlighter": true,
        "is-decimal<parse-entities<refractor<react-syntax-highlighter": true,
        "is-hexadecimal<parse-entities<refractor<react-syntax-highlighter": true
      }
    },
    "strip-ansi<eslint": {
      "packages": {
        "ansi-regex<strip-ansi<eslint": true
      }
    },
    "strip-ansi<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": {
      "packages": {
        "ansi-regex<strip-ansi<gauge<npmlog<node-gyp<@npmcli/run-script<@lavamoat/allow-scripts": true
      }
    },
    "strip-ansi<string-width<table<stylelint": {
      "packages": {
        "ansi-regex<strip-ansi<string-width<table<stylelint": true
      }
    },
    "strip-bom-stream<vinyl-file<gulp-watch": {
      "packages": {
        "first-chunk-stream<strip-bom-stream<vinyl-file<gulp-watch": true,
        "strip-bom<vinyl-file<gulp-watch": true
      }
    },
    "strip-bom<vinyl-file<gulp-watch": {
      "globals": {
        "Buffer.isBuffer": true
      },
      "packages": {
        "is-utf8<remove-bom-buffer<vinyl-fs<gulp": true
      }
    },
    "stylelint": {
      "builtin": {
        "fs.lstatSync": true,
        "fs.readFile": true,
        "fs.readFileSync": true,
        "fs.stat": true,
        "os.EOL": true,
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.normalize": true,
        "path.relative": true,
        "path.resolve": true,
        "path.sep": true,
        "url.URL": true
      },
      "globals": {
        "__dirname": true,
        "assert": true,
        "console.warn": true,
        "process.cwd": true,
        "process.env.NODE_ENV": true,
        "process.stdout.columns": true,
        "process.stdout.isTTY": true
      },
      "packages": {
        "@stylelint/postcss-css-in-js<stylelint": true,
        "@stylelint/postcss-markdown<stylelint": true,
        "autoprefixer<stylelint": true,
        "balanced-match<stylelint": true,
        "chalk": true,
        "cosmiconfig<stylelint": true,
        "debug<nock": true,
        "execall<stylelint": true,
        "file-entry-cache<stylelint": true,
        "global-modules<stylelint": true,
        "globby": true,
        "globjoin<stylelint": true,
        "html-tags<stylelint": true,
        "ignore<eslint": true,
        "import-lazy<stylelint": true,
        "imurmurhash<eslint": true,
        "known-css-properties<stylelint": true,
        "leven<stylelint": true,
        "lodash": true,
        "log-symbols<mocha": true,
        "mathml-tag-names<stylelint": true,
        "micromatch<fast-glob": true,
        "normalize-selector<stylelint": true,
        "postcss-html<stylelint": true,
        "postcss-less<stylelint": true,
        "postcss-media-query-parser<stylelint": true,
        "postcss-reporter<stylelint": true,
        "postcss-resolve-nested-selector<stylelint": true,
        "postcss-safe-parser<stylelint": true,
        "postcss-sass<stylelint": true,
        "postcss-scss<stylelint": true,
        "postcss-selector-parser<stylelint": true,
        "postcss-syntax<stylelint": true,
        "postcss-value-parser<stylelint": true,
        "postcss<stylelint": true,
        "resolve-from<stylelint": true,
        "slash<del": true,
        "specificity<stylelint": true,
        "string-width<yargs": true,
        "style-search<stylelint": true,
        "sugarss<stylelint": true,
        "svg-tags<stylelint": true,
        "table<stylelint": true,
        "write-file-atomic<stylelint": true
      }
    },
    "sugarss<stylelint": {
      "packages": {
        "postcss<sugarss<stylelint": true
      }
    },
    "superstruct": {
      "globals": {
        "console.warn": true,
        "define": true
      }
    },
    "supports-color<chalk": {
      "builtin": {
        "os.release": true,
        "tty.isatty": true
      },
      "globals": {
        "process.env": true,
        "process.platform": true
      },
      "packages": {
        "has-flag<supports-color<chalk": true
      }
    },
    "supports-color<chalk<@babel/highlight<@babel/code-frame": {
      "builtin": {
        "os.release": true
      },
      "globals": {
        "process.env": true,
        "process.platform": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.versions.node.split": true
      },
      "packages": {
        "has-flag<supports-color<chalk<gulp-livereload": true
      }
    },
    "supports-color<chalk<gulp-livereload": {
      "builtin": {
        "os.release": true
      },
      "globals": {
        "process.env": true,
        "process.platform": true,
        "process.stderr": true,
        "process.stdout": true,
        "process.versions.node.split": true
      },
      "packages": {
        "has-flag<supports-color<chalk<gulp-livereload": true
      }
    },
    "supports-color<mocha": {
      "builtin": {
        "os.release": true,
        "tty.isatty": true
      },
      "globals": {
        "process.env": true,
        "process.platform": true
      },
      "packages": {
        "has-flag<supports-color<mocha": true
      }
    },
    "syntax-error<browserify": {
      "packages": {
        "acorn-node<syntax-error<browserify": true
      }
    },
    "table<stylelint": {
      "globals": {
        "process.stdout.write": true
      },
      "packages": {
        "ajv<table<stylelint": true,
        "lodash": true,
        "slice-ansi<table<stylelint": true,
        "string-width<table<stylelint": true
      }
    },
    "terser": {
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console.log": true,
        "console.warn": true,
        "define": true,
        "process": true
      },
      "packages": {
        "@jridgewell/source-map<terser": true,
        "acorn<jsdom": true
      }
    },
    "through<debounce-stream": {
      "builtin": {
        "stream": true
      },
      "globals": {
        "process.nextTick": true
      }
    },
    "through2": {
      "packages": {
        "readable-stream": true
      }
    },
    "through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<@gulp-sourcemaps/identity-map<gulp-sourcemaps": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream": true
      }
    },
    "through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<@gulp-sourcemaps/map-sources<gulp-sourcemaps": true,
        "xtend<watchify": true
      }
    },
    "through2<bify-module-groups": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream": true
      }
    },
    "through2<browser-pack<browserify": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<browser-pack<browserify": true,
        "xtend<watchify": true
      }
    },
    "through2<browserify": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<browserify": true,
        "xtend<watchify": true
      }
    },
    "through2<cloneable-readable<vinyl": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<cloneable-readable<vinyl": true,
        "xtend<watchify": true
      }
    },
    "through2<deps-sort<browserify": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<deps-sort<browserify": true,
        "xtend<watchify": true
      }
    },
    "through2<fs-mkdirp-stream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<fs-mkdirp-stream<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<gulp-sort": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<gulp-sort": true,
        "xtend<watchify": true
      }
    },
    "through2<gulp-sourcemaps": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<gulp-sourcemaps": true,
        "xtend<watchify": true
      }
    },
    "through2<gulp-stylelint": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream": true
      }
    },
    "through2<gulp-zip": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream": true
      }
    },
    "through2<insert-module-globals<browserify": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<insert-module-globals<browserify": true,
        "xtend<watchify": true
      }
    },
    "through2<module-deps<browserify": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<module-deps<browserify": true,
        "xtend<watchify": true
      }
    },
    "through2<remove-bom-stream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<remove-bom-stream<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<to-through<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<to-through<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<vinyl-buffer": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<bl<vinyl-buffer": true,
        "xtend<watchify": true
      }
    },
    "through2<vinyl-fs<gulp": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<vinyl-fs<gulp": true,
        "xtend<watchify": true
      }
    },
    "through2<vinyl-source-stream": {
      "builtin": {
        "util.inherits": true
      },
      "globals": {
        "process.nextTick": true
      },
      "packages": {
        "readable-stream<through2<vinyl-source-stream": true,
        "xtend<watchify": true
      }
    },
    "timers-ext<memoizee<debug-fabulous<gulp-sourcemaps": {
      "packages": {
        "es5-ext<es6-iterator<resolve-url-loader": true
      }
    },
    "tiny-lr<gulp-livereload": {
      "builtin": {
        "events": true,
        "fs": true,
        "http": true,
        "https": true,
        "url.parse": true
      },
      "globals": {
        "console.error": true
      },
      "packages": {
        "body<tiny-lr<gulp-livereload": true,
        "debug<tiny-lr<gulp-livereload": true,
        "faye-websocket<tiny-lr<gulp-livereload": true,
        "object-assign<react": true,
        "qs<@storybook/addon-knobs": true
      }
    },
    "to-absolute-glob<glob-stream<vinyl-fs<gulp": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true,
        "process.platform": true
      },
      "packages": {
        "is-absolute<replace-homedir<gulp-cli<gulp": true,
        "is-negated-glob<glob-watcher<gulp": true
      }
    },
    "to-object-path<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<to-object-path<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "to-regex-range<fill-range<braces<chokidar": {
      "packages": {
        "is-number<to-regex-range<fill-range<braces<chokidar": true
      }
    },
    "to-regex-range<fill-range<braces<chokidar<glob-watcher<gulp": {
      "packages": {
        "is-number<fill-range<braces<chokidar<glob-watcher<gulp": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "to-regex-range<fill-range<braces<chokidar<gulp-watch": {
      "packages": {
        "is-number<fill-range<braces<chokidar<gulp-watch": true,
        "repeat-string<remark-parse<remark<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "to-regex<braces<chokidar<gulp-watch": {
      "packages": {
        "define-property<to-regex<braces<chokidar<gulp-watch": true,
        "extend-shallow<plugin-error<gulp-zip": true,
        "regex-not<micromatch<matchdep<gulp-cli<gulp": true,
        "safe-regex<to-regex<braces<chokidar<gulp-watch": true
      }
    },
    "to-through<vinyl-fs<gulp": {
      "packages": {
        "through2<to-through<vinyl-fs<gulp": true
      }
    },
    "ts-node": {
      "builtin": {
        "assert": true,
        "console.Console": true,
        "fs.Stats": true,
        "fs.readFileSync": true,
        "fs.realpathSync": true,
        "fs.statSync": true,
        "module": true,
        "os.homedir": true,
        "path": true,
        "repl.Recoverable": true,
        "repl.start": true,
        "url.URL": true,
        "url.fileURLToPath": true,
        "url.format": true,
        "url.parse": true,
        "url.pathToFileURL": true,
        "util.inspect.custom": true,
        "vm.Script": true
      },
      "globals": {
        "Buffer.from": true,
        "ERR_INVALID_ARG_VALUE": true,
        "__dirname": true,
        "console": true,
        "process": true,
        "value": true
      },
      "packages": {
        "@cspotcode/source-map-support<ts-node": true,
        "@tsconfig/node10<ts-node": true,
        "@tsconfig/node12<ts-node": true,
        "@tsconfig/node14<ts-node": true,
        "@tsconfig/node16<ts-node": true,
        "acorn-walk<ts-node": true,
        "acorn<jsdom": true,
        "arg<ts-node": true,
        "create-require<ts-node": true,
        "diff<ts-node": true,
        "make-error<ts-node": true,
        "v8-compile-cache-lib<ts-node": true,
        "yn<ts-node": true
      }
    },
    "tsconfig-paths<eslint-plugin-import": {
      "builtin": {
        "fs.existsSync": true,
        "fs.lstatSync": true,
        "fs.readFile": true,
        "fs.readFileSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "module._resolveFilename": true,
        "module.builtinModules": true,
        "path.dirname": true,
        "path.isAbsolute": true,
        "path.join": true,
        "path.resolve": true
      },
      "globals": {
        "console.warn": true,
        "process.argv.slice": true,
        "process.cwd": true,
        "process.env": true
      },
      "packages": {
        "json5<tsconfig-paths<eslint-plugin-import": true,
        "minimist<wait-on": true,
        "strip-bom<tsconfig-paths<eslint-plugin-import": true
      }
    },
    "tsutils": {
      "packages": {
        "tslib": true,
        "typescript": true
      }
    },
    "type-check<levn<eslint": {
      "packages": {
        "prelude-ls<levn<eslint": true
      }
    },
    "typedarray-to-buffer<write-file-atomic<stylelint": {
      "globals": {
        "Buffer.from": true
      },
      "packages": {
        "is-typedarray<write-file-atomic<stylelint": true
      }
    },
    "typescript": {
      "builtin": {
        "buffer.Buffer": true,
        "crypto": true,
        "fs": true,
        "inspector": true,
        "module.findPnpApi": true,
        "os.EOL": true,
        "os.platform": true,
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true,
        "perf_hooks.PerformanceObserver": true,
        "perf_hooks.performance": true
      },
      "globals": {
        "Intl.Collator": true,
        "PerformanceObserver": true,
        "__dirname": true,
        "__filename": true,
        "clearTimeout": true,
        "console": true,
        "gc": true,
        "globalThis": true,
        "onProfilerEvent": true,
        "performance": true,
        "process": true,
        "setTimeout": true
      },
      "packages": {
        "source-map-support<terser": true
      }
    },
    "undeclared-identifiers<insert-module-globals<browserify": {
      "packages": {
        "acorn-node<syntax-error<browserify": true,
        "get-assigned-identifiers<undeclared-identifiers<insert-module-globals<browserify": true,
        "xtend<watchify": true
      }
    },
    "undertaker<gulp": {
      "builtin": {
        "assert": true,
        "events.EventEmitter": true,
        "util.inherits": true
      },
      "globals": {
        "process.env.UNDERTAKER_SETTLE": true,
        "process.env.UNDERTAKER_TIME_RESOLUTION": true,
        "process.hrtime": true
      },
      "packages": {
        "arr-flatten<undertaker<gulp": true,
        "arr-map<undertaker<gulp": true,
        "bach<undertaker<gulp": true,
        "collection-map<undertaker<gulp": true,
        "es6-weak-map<undertaker<gulp": true,
        "last-run<undertaker<gulp": true,
        "object.defaults<undertaker<gulp": true,
        "object.reduce<undertaker<gulp": true,
        "undertaker-registry<undertaker<gulp": true
      }
    },
    "unherit<remark-parse<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "inherits<pumpify": true,
        "xtend<watchify": true
      }
    },
    "unicode-match-property-ecmascript<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": {
      "packages": {
        "unicode-canonical-property-names-ecmascript<unicode-match-property-ecmascript<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true,
        "unicode-property-aliases-ecmascript<unicode-match-property-ecmascript<regexpu-core<@babel/helper-create-regexp-features-plugin<@babel/plugin-transform-dotall-regex<@babel/preset-env": true
      }
    },
    "unified<react-markdown": {
      "packages": {
        "bail<unified<react-markdown": true,
        "extend<unified<react-markdown": true,
        "is-buffer<unified<react-markdown": true,
        "is-plain-obj<yargs-unparser<mocha": true,
        "trough<unified<react-markdown": true,
        "vfile<react-markdown": true
      }
    },
    "union-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "arr-union<plugin-error<gulp-zip": true,
        "get-value<array-sort<gulp-cli<gulp": true,
        "is-extendable<object.omit<micromatch<anymatch<gulp-watch": true,
        "set-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true
      }
    },
    "unique-stream<glob-stream<vinyl-fs<gulp": {
      "packages": {
        "json-stable-stringify<@lavamoat/lavapack": true,
        "through2-filter<unique-stream<glob-stream<vinyl-fs<gulp": true
      }
    },
    "unist-util-find-all-after<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "unist-util-is<unist-util-find-all-after<@stylelint/postcss-markdown<stylelint": true
      }
    },
    "unist-util-remove-position<remark-parse<remark<@stylelint/postcss-markdown<stylelint": {
      "packages": {
        "unist-util-visit<react-markdown": true
      }
    },
    "unist-util-visit-parents<unist-util-visit<react-markdown": {
      "packages": {
        "unist-util-is<unist-util-visit<react-markdown": true
      }
    },
    "unist-util-visit<react-markdown": {
      "packages": {
        "unist-util-visit-parents<unist-util-visit<react-markdown": true
      }
    },
    "unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "has-value<unset-value<cache-base<base<snapdragon<braces<chokidar<gulp-watch": true,
        "isobject<gulp-cli<gulp": true
      }
    },
    "upath<chokidar<glob-watcher<gulp": {
      "builtin": {
        "path": true
      }
    },
    "upath<chokidar<gulp-watch": {
      "builtin": {
        "path": true
      }
    },
    "uri-js<ajv<eslint": {
      "globals": {
        "define": true
      }
    },
    "urix<css<rework<resolve-url-loader": {
      "builtin": {
        "path.sep": true
      }
    },
    "use<snapdragon<braces<chokidar<gulp-watch": {
      "packages": {
        "kind-of<clone-deep<@babel/register": true
      }
    },
    "util-deprecate<readable-stream": {
      "builtin": {
        "util.deprecate": true
      }
    },
    "v8-compile-cache-lib<ts-node": {
      "builtin": {
        "crypto.createHash": true,
        "fs.mkdirSync": true,
        "fs.readFileSync": true,
        "fs.statSync": true,
        "fs.unlinkSync": true,
        "fs.writeFileSync": true,
        "module._cache": true,
        "module._extensions": true,
        "module._resolveFilename": true,
        "module._resolveLookupPaths": true,
        "module.prototype._compile": true,
        "module.wrap": true,
        "os.tmpdir": true,
        "path.dirname": true,
        "path.join": true,
        "path.resolve": true,
        "vm.Script": true
      },
      "globals": {
        "Buffer": true,
        "process": true
      }
    },
    "vfile-message<vfile<react-markdown": {
      "packages": {
        "unist-util-stringify-position<vfile<react-markdown": true
      }
    },
    "vfile<react-markdown": {
      "builtin": {
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.sep": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "is-buffer<vfile<react-markdown": true,
        "replace-ext<vinyl": true,
        "vfile-message<vfile<react-markdown": true
      }
    },
    "vinyl": {
      "builtin": {
        "buffer.Buffer.isBuffer": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.normalize": true,
        "path.relative": true,
        "util.inspect.custom": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "clone-buffer<vinyl": true,
        "clone-stats<vinyl": true,
        "clone<vinyl": true,
        "cloneable-readable<vinyl": true,
        "remove-trailing-separator<vinyl": true,
        "replace-ext<vinyl": true
      }
    },
    "vinyl-buffer": {
      "packages": {
        "bl<vinyl-buffer": true,
        "through2<vinyl-buffer": true
      }
    },
    "vinyl-file<gulp-watch": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "graceful-fs<del": true,
        "pify<vinyl-file<gulp-watch": true,
        "pinkie-promise<globby<gh-pages": true,
        "strip-bom-stream<vinyl-file<gulp-watch": true,
        "strip-bom<vinyl-file<gulp-watch": true,
        "vinyl<vinyl-file<gulp-watch": true
      }
    },
    "vinyl-fs<gulp": {
      "builtin": {
        "os.platform": true,
        "path.relative": true,
        "path.resolve": true,
        "util.inherits": true
      },
      "globals": {
        "Buffer.isBuffer": true,
        "process.cwd": true,
        "process.geteuid": true,
        "process.getuid": true,
        "process.nextTick": true
      },
      "packages": {
        "fs-mkdirp-stream<vinyl-fs<gulp": true,
        "glob-stream<vinyl-fs<gulp": true,
        "graceful-fs<del": true,
        "is-valid-glob<vinyl-fs<gulp": true,
        "lazystream<vinyl-fs<gulp": true,
        "lead<vinyl-fs<gulp": true,
        "object.assign<vinyl-fs<gulp": true,
        "pumpify<vinyl-fs<gulp": true,
        "readable-stream<vinyl-fs<gulp": true,
        "remove-bom-buffer<vinyl-fs<gulp": true,
        "remove-bom-stream<vinyl-fs<gulp": true,
        "resolve-options<vinyl-fs<gulp": true,
        "through2<vinyl-fs<gulp": true,
        "to-through<vinyl-fs<gulp": true,
        "value-or-function<vinyl-fs<gulp": true,
        "vinyl": true,
        "vinyl-sourcemap<vinyl-fs<gulp": true
      }
    },
    "vinyl-source-stream": {
      "builtin": {
        "path.resolve": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "through2<vinyl-source-stream": true,
        "vinyl": true
      }
    },
    "vinyl-sourcemap<vinyl-fs<gulp": {
      "builtin": {
        "path.dirname": true,
        "path.join": true,
        "path.relative": true,
        "path.resolve": true
      },
      "globals": {
        "Buffer": true
      },
      "packages": {
        "append-buffer<vinyl-sourcemap<vinyl-fs<gulp": true,
        "convert-source-map<gulp-sourcemaps": true,
        "graceful-fs<del": true,
        "normalize-path<vinyl-sourcemap<vinyl-fs<gulp": true,
        "now-and-later<vinyl-sourcemap<vinyl-fs<gulp": true,
        "remove-bom-buffer<vinyl-fs<gulp": true,
        "vinyl": true
      }
    },
    "vinyl-sourcemaps-apply": {
      "packages": {
        "source-map<vinyl-sourcemaps-apply": true
      }
    },
    "vinyl<vinyl-file<gulp-watch": {
      "builtin": {
        "buffer.Buffer": true,
        "path.basename": true,
        "path.dirname": true,
        "path.extname": true,
        "path.join": true,
        "path.relative": true,
        "stream.PassThrough": true,
        "stream.Stream": true
      },
      "globals": {
        "process.cwd": true
      },
      "packages": {
        "clone-stats<vinyl<vinyl-file<gulp-watch": true,
        "clone<color<@metamask/jazzicon": true,
        "replace-ext<vinyl<vinyl-file<gulp-watch": true
      }
    },
    "watchify": {
      "builtin": {
        "path.join": true
      },
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      },
      "packages": {
        "anymatch<chokidar": true,
        "chokidar": true,
        "through2": true,
        "xtend<watchify": true
      }
    },
    "websocket-driver<faye-websocket<@firebase/database<firebase": {
      "builtin": {
        "crypto.createHash": true,
        "crypto.randomBytes": true,
        "events.EventEmitter": true,
        "stream.Stream": true,
        "url.parse": true,
        "util.inherits": true
      },
      "globals": {
        "Buffer": true,
        "process.version.match": true
      },
      "packages": {
        "http-parser-js<websocket-driver<faye-websocket<@firebase/database<firebase": true,
        "websocket-extensions<websocket-driver<faye-websocket<@firebase/database<firebase": true
      }
    },
    "which<cross-spawn": {
      "builtin": {
        "path.join": true
      },
      "globals": {
        "process.cwd": true,
        "process.env.OSTYPE": true,
        "process.env.PATH": true,
        "process.env.PATHEXT": true,
        "process.platform": true
      },
      "packages": {
        "isexe<which<@sentry/cli": true
      }
    },
    "which<global-prefix<global-modules<stylelint": {
      "builtin": {
        "path.join": true
      },
      "globals": {
        "process.cwd": true,
        "process.env.OSTYPE": true,
        "process.env.PATH": true,
        "process.env.PATHEXT": true,
        "process.platform": true
      },
      "packages": {
        "isexe<which<@sentry/cli": true
      }
    },
    "wide-align<gauge<npmlog<@storybook/node-logger<@storybook/react": {
      "packages": {
        "string-width<yargs": true
      }
    },
    "wrap-ansi<cliui<yargs": {
      "packages": {
        "ansi-styles<chalk": true,
        "string-width<yargs": true,
        "strip-ansi<eslint": true
      }
    },
    "write-file-atomic<stylelint": {
      "builtin": {
        "fs.chmod": true,
        "fs.chmodSync": true,
        "fs.chown": true,
        "fs.chownSync": true,
        "fs.close": true,
        "fs.closeSync": true,
        "fs.fsync": true,
        "fs.fsyncSync": true,
        "fs.open": true,
        "fs.openSync": true,
        "fs.realpath": true,
        "fs.realpathSync": true,
        "fs.rename": true,
        "fs.renameSync": true,
        "fs.stat": true,
        "fs.statSync": true,
        "fs.unlink": true,
        "fs.unlinkSync": true,
        "fs.write": true,
        "fs.writeSync": true,
        "path.resolve": true,
        "util.promisify": true,
        "worker_threads.threadId": true
      },
      "globals": {
        "Buffer.isBuffer": true,
        "__filename": true,
        "process.getuid": true,
        "process.pid": true
      },
      "packages": {
        "imurmurhash<eslint": true,
        "is-typedarray<write-file-atomic<stylelint": true,
        "signal-exit<write-file-atomic<stylelint": true,
        "typedarray-to-buffer<write-file-atomic<stylelint": true
      }
    },
    "write<flat-cache<file-entry-cache<stylelint": {
      "builtin": {
        "fs.createWriteStream": true,
        "fs.writeFile": true,
        "fs.writeFileSync": true,
        "path.dirname": true
      },
      "packages": {
        "mkdirp<portfinder<mockttp": true
      }
    },
    "y18n<yargs": {
      "builtin": {
        "fs": true,
        "path": true,
        "util": true
      }
    },
    "yaml": {
      "globals": {
        "Buffer": true,
        "atob": true,
        "btoa": true,
        "console.dir": true,
        "console.log": true,
        "console.warn": true,
        "process": true
      }
    },
    "yaml<cosmiconfig<stylelint": {
      "globals": {
        "Buffer": true,
        "YAML_SILENCE_DEPRECATION_WARNINGS": true,
        "YAML_SILENCE_WARNINGS": true,
        "atob": true,
        "btoa": true,
        "console.warn": true,
        "process": true
      }
    },
    "yaml<postcss-load-config<gulp-postcss": {
      "globals": {
        "Buffer": true,
        "YAML_SILENCE_DEPRECATION_WARNINGS": true,
        "YAML_SILENCE_WARNINGS": true,
        "atob": true,
        "btoa": true,
        "console.warn": true,
        "process": true
      }
    },
    "yargs": {
      "builtin": {
        "assert": true,
        "fs": true,
        "path": true,
        "util": true
      },
      "globals": {
        "Error": true,
        "__dirname": true,
        "console": true,
        "process": true
      },
      "packages": {
        "cliui<yargs": true,
        "escalade<yargs": true,
        "get-caller-file<yargs": true,
        "require-directory<yargs": true,
        "string-width<yargs": true,
        "y18n<yargs": true,
        "yargs-parser<yargs": true
      }
    },
    "yargs-parser<yargs": {
      "builtin": {
        "fs": true,
        "path": true,
        "util": true
      },
      "globals": {
        "process": true
      }
    },
    "yazl<gulp-zip": {
      "builtin": {
        "events.EventEmitter": true,
        "fs.createReadStream": true,
        "fs.stat": true,
        "stream.PassThrough": true,
        "stream.Transform": true,
        "util.inherits": true,
        "zlib.DeflateRaw": true,
        "zlib.deflateRaw": true
      },
      "globals": {
        "Buffer": true,
        "setImmediate": true,
        "utf8FileName.length": true
      },
      "packages": {
        "buffer-crc32<yazl<gulp-zip": true
      }
    }
  }
}